[
  {
    "objectID": "playground.html",
    "href": "playground.html",
    "title": "Playground file for Quarto and Great Tables workshop",
    "section": "",
    "text": "Install some Python packages\n\n!pip install great_tables\n!pip install polars\n!pip install pandas\n!pip install selenium\n\nRequirement already satisfied: great_tables in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (0.13.0)\nRequirement already satisfied: commonmark&gt;=0.9.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (0.9.1)\nRequirement already satisfied: htmltools&gt;=0.4.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (0.6.0)\nRequirement already satisfied: importlib-metadata in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (8.5.0)\nRequirement already satisfied: typing-extensions&gt;=3.10.0.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (4.10.0)\nRequirement already satisfied: numpy&gt;=1.22.4 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (1.26.4)\nRequirement already satisfied: Babel&gt;=2.13.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (2.14.0)\nRequirement already satisfied: importlib-resources in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (6.4.5)\nRequirement already satisfied: packaging&gt;=20.9 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from htmltools&gt;=0.4.1-&gt;great_tables) (23.2)\nRequirement already satisfied: zipp&gt;=3.20 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from importlib-metadata-&gt;great_tables) (3.20.2)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nRequirement already satisfied: polars in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (1.12.0)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nRequirement already satisfied: pandas in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (2.2.1)\nRequirement already satisfied: numpy&lt;2,&gt;=1.23.2 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from pandas) (1.26.4)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from pandas) (2.9.0.post0)\nRequirement already satisfied: pytz&gt;=2020.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from pandas) (2024.1)\nRequirement already satisfied: tzdata&gt;=2022.7 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from pandas) (2024.1)\nRequirement already satisfied: six&gt;=1.5 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas) (1.16.0)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nRequirement already satisfied: selenium in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (4.26.1)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.26 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from urllib3[socks]&lt;3,&gt;=1.26-&gt;selenium) (2.2.1)\nRequirement already satisfied: trio~=0.17 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (0.27.0)\nRequirement already satisfied: trio-websocket~=0.9 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (0.11.1)\nRequirement already satisfied: certifi&gt;=2021.10.8 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (2024.2.2)\nRequirement already satisfied: typing_extensions~=4.9 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (4.10.0)\nRequirement already satisfied: websocket-client~=1.8 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (1.8.0)\nRequirement already satisfied: attrs&gt;=23.2.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (23.2.0)\nRequirement already satisfied: sortedcontainers in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (2.4.0)\nRequirement already satisfied: idna in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (3.6)\nRequirement already satisfied: outcome in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (1.3.0.post0)\nRequirement already satisfied: sniffio&gt;=1.3.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (1.3.1)\nRequirement already satisfied: wsproto&gt;=0.14 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio-websocket~=0.9-&gt;selenium) (1.2.0)\nRequirement already satisfied: pysocks!=1.5.7,&lt;2.0,&gt;=1.5.6 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from urllib3[socks]&lt;3,&gt;=1.26-&gt;selenium) (1.7.1)\nRequirement already satisfied: h11&lt;1,&gt;=0.9.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from wsproto&gt;=0.14-&gt;trio-websocket~=0.9-&gt;selenium) (0.14.0)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\n\n\n\n\nWrite some code\n\n1+1\n\n2"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#code-of-conduct",
    "href": "1-1-hello/1-1-hello-reveal.html#code-of-conduct",
    "title": "Hello, Quarto!",
    "section": "Code of Conduct",
    "text": "Code of Conduct\nAttendees at this event are subject to the pyOpenSci Code of Conduct.\nBe kind to others. Do not insult or put down others. Behave professionally. Remember that harassment and sexist, racist, or exclusionary jokes are not appropriate.\nAll communication should be appropriate for a professional audience including people of many different backgrounds. Sexual language and imagery is not appropriate.\nWe’re dedicated to providing a harassment-free community for everyone, regardless of gender, sexual orientation, gender identity and expression, disability, physical appearance, body size, race, or religion. We do not tolerate harassment of community members in any form.\nThank you for helping make this a welcoming, friendly community for all."
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#about-us",
    "href": "1-1-hello/1-1-hello-reveal.html#about-us",
    "title": "Hello, Quarto!",
    "section": "About us",
    "text": "About us\n\n\n\nRich Iannone, Software Developer, Posit PBC\nTracy Teal, Open Source Program Director, Nixtla\n\n\n \n\n\n\nTeaching data analysis for 10+ years\nTeaching and using Quarto and gt/GT for 3+ years"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#about-you",
    "href": "1-1-hello/1-1-hello-reveal.html#about-you",
    "title": "Hello, Quarto!",
    "section": "About you",
    "text": "About you\n\nPlease share with the person virtually next to you…\n\nYour name\nSomething you’ve already learned at the fall festival\nWhat you hope to get out of this tutorial\n\n\n\n  \n    −\n    +\n \n 03:00"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#meeting-you-where-you-are",
    "href": "1-1-hello/1-1-hello-reveal.html#meeting-you-where-you-are",
    "title": "Hello, Quarto!",
    "section": "Meeting you where you are",
    "text": "Meeting you where you are\n\n\n\nThese materials are pitched at someone who:\n\nknows some Python + Markdown\nhas worked in VS Code and/or Jupyter Lab\nwants to learn about Quarto and great tables\n\n\n\n\nWe’ll teach you\n\nMore Markdown\nGetting started with Quarto\nCreating great looking tables\nCreating professional looking documents with great tables"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#workshop-structure",
    "href": "1-1-hello/1-1-hello-reveal.html#workshop-structure",
    "title": "Hello, Quarto!",
    "section": "Workshop structure",
    "text": "Workshop structure\n\n\nMy turn\n\nLecture segments\nFeel free to just watch, take notes, browse docs, or tinker around with the code\n\n\n\nOur turn\n\nLecture segments + live coding\n(Optionally) follow along with live coding\n\n\n\n\nYour turn\n\nPractice exercises for you\nWork on your own or with the person next to you"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#getting-help",
    "href": "1-1-hello/1-1-hello-reveal.html#getting-help",
    "title": "Hello, Quarto!",
    "section": "Getting help",
    "text": "Getting help\n\nDuring my turn and your turn segments – raise your virtual hand\nDuring our turn segments – also feel free to raise your hand for questions but if your question seems specific to your setup, we might wait to help during the next your turn break"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#section",
    "href": "1-1-hello/1-1-hello-reveal.html#section",
    "title": "Hello, Quarto!",
    "section": "",
    "text": "Let’s get started!"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#quarto",
    "href": "1-1-hello/1-1-hello-reveal.html#quarto",
    "title": "Hello, Quarto!",
    "section": "Quarto …",
    "text": "Quarto …\nis an innovative, open-source scientific and technical publishing system compatible with Jupyter notebooks and all your favorite plain text markdown editors\n\nArtwork from “Hello, Quarto” keynote by Julia Lowndes and Mine Çetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst."
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#with-quarto",
    "href": "1-1-hello/1-1-hello-reveal.html#with-quarto",
    "title": "Hello, Quarto!",
    "section": "With Quarto …",
    "text": "With Quarto …\nyou can weave together narrative and code to produce elegantly formatted output as documents, web pages, blog posts, books and more, with…\n\n\nconsistent implementation of attractive and handy features across outputs: tabsets, code-folding, syntax highlighting, etc.\ndefaults that meet accessibility guidelines as well as features that enable good practices for producing accessible documents\nnative multi-lingual support for multiple languages like Python, R, Julia, Observable, and more via the Jupyter engine for executable code chunks"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#a-tour-of-quarto",
    "href": "1-1-hello/1-1-hello-reveal.html#a-tour-of-quarto",
    "title": "Hello, Quarto!",
    "section": "A tour of Quarto",
    "text": "A tour of Quarto\n\nSit back and enjoy! … or follow along with hello-penguins.qmd.\n\n\n\nRunning individual cells\nRendering a document\nEditing with source editor and visual editor\nInserting images and lightbox effect\nInserting tables\nCustomizing formats: pdf, docx, revealjs\nCustomizing format options: code-fold, toc\nCode cells: labels, alt-text, execution options (echo, warning)\nCross referencing figures and tables, with and without the visual editor"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#revisit-what-is-quarto",
    "href": "1-1-hello/1-1-hello-reveal.html#revisit-what-is-quarto",
    "title": "Hello, Quarto!",
    "section": "Revisit: What is Quarto?",
    "text": "Revisit: What is Quarto?\nQuarto is a command line interface (CLI) that renders plain text formats (.qmd, .rmd, .md) OR mixed formats (.ipynb/Jupyter notebook) into static PDF/Word/HTML reports, books, websites, presentations and more.\n\n\nUsage:   quarto\nVersion: 1.5.53\n\nDescription:\n\n  Quarto CLI\n\nOptions:\n\n  -h, --help     - Show this help.                            \n  -V, --version  - Show the version number for this program.  \n\nCommands:\n\n  render     [input] [args...]     - Render files or projects to various document types.\n  preview    [file] [args...]      - Render and preview a document or website project.  \n  serve      [input]               - Serve a Shiny interactive document.                \n  create     [type] [commands...]  - Create a Quarto project or extension               \n  use        &lt;type&gt; [target]       - Automate document or project setup tasks.          \n  add        &lt;extension&gt;           - Add an extension to this folder or project         \n  update     [target...]           - Updates an extension or global dependency.         \n  remove     [target...]           - Removes an extension.                              \n  convert    &lt;input&gt;               - Convert documents to alternate representations.    \n  pandoc     [args...]             - Run the version of Pandoc embedded within Quarto.  \n  typst      [args...]             - Run the version of Typst embedded within Quarto.   \n  run        [script] [args...]    - Run a TypeScript, R, Python, or Lua script.        \n  install    [target...]           - Installs a global dependency (TinyTex or Chromium).\n  uninstall  [tool]                - Removes an extension.                              \n  tools                            - Display the status of Quarto installed dependencies\n  publish    [provider] [path]     - Publish a document or project to a provider.       \n  check      [target]              - Verify correct functioning of Quarto installation. \n  help       [command]             - Show this help or the help of a sub-command."
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#under-the-hood",
    "href": "1-1-hello/1-1-hello-reveal.html#under-the-hood",
    "title": "Hello, Quarto!",
    "section": "Under the hood",
    "text": "Under the hood\n\n\n\njupyter evaluates Python code and returns a .md file along with the evaluated code\nQuarto applies Lua filters + CSS/LaTeX which is then evaluated alongside the .md file by Pandoc and converted to a final output format"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#under-the-hood-1",
    "href": "1-1-hello/1-1-hello-reveal.html#under-the-hood-1",
    "title": "Hello, Quarto!",
    "section": "Under the hood",
    "text": "Under the hood\nwith a wider lens…\n\n\n\njupyter or knitr evaluates Python, Julia, R, or Observable code and returns a .md file along with the evaluated code\nQuarto applies Lua filters + CSS/LaTeX which is then evaluated alongside the .md file by Pandoc and converted to a final output format"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#aside-lua-filters",
    "href": "1-1-hello/1-1-hello-reveal.html#aside-lua-filters",
    "title": "Hello, Quarto!",
    "section": "Aside: Lua filters",
    "text": "Aside: Lua filters\n\nHere is an example of a Lua filter that converts strong emphasis to small caps, from https://pandoc.org/lua-filters.html:\n\nreturn {\n  {\n    Strong = function (elem)\n      return pandoc.SmallCaps(elem.c)\n    end,\n  }\n}\n\n\nLua filters written by R/Python/Julia developers should be interchangeable between formats - not language specific!\n\n\n\n\nWe won’t go into the details of writing Lua filters in this workshop, and you don’t need to worry about learning about Lua filters unless you’re working on extending Quarto."
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#from-the-comfort-of-your-own-homeworkspace",
    "href": "1-1-hello/1-1-hello-reveal.html#from-the-comfort-of-your-own-homeworkspace",
    "title": "Hello, Quarto!",
    "section": "From the comfort of your own homeworkspace",
    "text": "From the comfort of your own homeworkspace"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#render-and-preview",
    "href": "1-1-hello/1-1-hello-reveal.html#render-and-preview",
    "title": "Hello, Quarto!",
    "section": "Render and preview",
    "text": "Render and preview\nin the Terminal in VS Code or JupyterLab\nRender to output formats:\n# ipynb notebook\nquarto render notebook.ipynb\nquarto render notebook.ipynb --to docx\n\n# plain text qmd\nquarto render notebook.qmd \nquarto render notebook.qmd --to pdf\nLive preview server (re-render on save):\n# ipynb notebook\nquarto preview notebook.ipynb\nquarto preview notebook.ipynb --to docx\n\n# plain text qmd\nquarto preview notebook.qmd \nquarto preview notebook.qmd --to pdf"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#render-and-preview-1",
    "href": "1-1-hello/1-1-hello-reveal.html#render-and-preview-1",
    "title": "Hello, Quarto!",
    "section": "Render and preview",
    "text": "Render and preview\nin the Editor in VS Code\n\nInstall and enable the Quarto extension\nClicking on Preview or Cmd + Shift + K"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#one-install-batteries-included",
    "href": "1-1-hello/1-1-hello-reveal.html#one-install-batteries-included",
    "title": "Hello, Quarto!",
    "section": "One install, “Batteries included”",
    "text": "One install, “Batteries included”\n\nQuarto comes “batteries included” straight out of the box:\n\nHTML reports and websites\nPDF reports\nMS Office (Word, Powerpoint)\nPresentations (Powerpoint, Beamer, revealjs)\nBooks\nManuscripts\n…\n\n\n\n\nAny language, exact same approach and syntax"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#many-quarto-formats",
    "href": "1-1-hello/1-1-hello-reveal.html#many-quarto-formats",
    "title": "Hello, Quarto!",
    "section": "Many Quarto formats",
    "text": "Many Quarto formats\n\n\n\n\n\n\n\nFeature\nQuarto\n\n\n\n\nBasic Formats\nhtml, pdf, docx, typst\n\n\nBeamer\nbeamer\n\n\nPowerPoint\npptx\n\n\nHTML Slides\nrevealjs\n\n\nAdvanced Layout\nQuarto Article Layout\n\n\nCross References\nQuarto Crossrefs\n\n\nWebsites & Blogs\nQuarto Websites, Quarto Blogs\n\n\nBooks\nQuarto Books\n\n\nInteractivity\nQuarto Interactive Documents\n\n\nJournal Articles\nJournal Articles\n\n\nDashboards\nQuarto Dashboards"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#setup",
    "href": "1-1-hello/1-1-hello-reveal.html#setup",
    "title": "Hello, Quarto!",
    "section": "Setup",
    "text": "Setup\n\nGo to the setup instructions"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#your-turn",
    "href": "1-1-hello/1-1-hello-reveal.html#your-turn",
    "title": "Hello, Quarto!",
    "section": "Your turn",
    "text": "Your turn\n\nIn VS Code, open the hello-penquins.qmd file. Render the document to HTML.\n\nAdd an author field in the YAML and add your name.\nAdd some text and style it with bold, italics, etc. using the source editor as well as the visual editor.\nModify the figure to add units to the axis labels: grams for body weight and mm (milimeters) for flipper length. Render or preview the document and make sure the changes are reflected in the HTML output.\nChange the html theme to sketchy. See https://quarto.org/docs/output-formats/html-themes.html for documentation on HTML theming.\n\n\n\n  \n    −\n    +\n \n 05:00"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#a-pause",
    "href": "1-1-hello/1-1-hello-reveal.html#a-pause",
    "title": "Hello, Quarto!",
    "section": "A pause",
    "text": "A pause\n\nWhere does the name “Quarto” come from?\n\n\n\n\n\n\n\nSource: https://en.wikipedia.org/wiki/Quarto"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#learn-more",
    "href": "1-1-hello/1-1-hello-reveal.html#learn-more",
    "title": "Hello, Quarto!",
    "section": "Learn more",
    "text": "Learn more\n\nquarto.org/docs/guide &gt; Authoring & Computations"
  },
  {
    "objectID": "1-1-hello/1-1-hello-reveal.html#questions",
    "href": "1-1-hello/1-1-hello-reveal.html#questions",
    "title": "Hello, Quarto!",
    "section": "Questions",
    "text": "Questions\n\nAny questions / anything you’d like to review before we wrap up this module?\n\n\n\n\n\n🔗 https://bit.ly/quarto-GT-pyopensci"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html",
    "href": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html",
    "title": "Code Along: Reactions Table",
    "section": "",
    "text": "Setting up.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom great_tables import GT, md, system_fonts\nfrom great_tables.data import reactions\n\nTransforming the data.\n\nreactions_mini = (\n    pl.from_pandas(reactions)\n    .filter(pl.col(\"cmpd_type\") == \"mercaptan\")\n    .select([\n        \"cmpd_name\",\n        \"cmpd_formula\",\n        cs.ends_with(\"k298\")\n    ])\n    .with_columns(\n        cmpd_formula=pl.concat_str(\n            \"%\" + pl.col(\"cmpd_formula\") + \"%\"\n        )\n    )\n)\n\nreactions_mini\n\n\nshape: (11, 6)cmpd_namecmpd_formulaOH_k298O3_k298NO3_k298Cl_k298strstrf64f64f64f64\"methanethiol\"\"%CH4S%\"3.5000e-11null9.2000e-132.0000e-10\"ethanethiol\"\"%C2H6S%\"4.5000e-11null1.2100e-121.7500e-10\"propanethiol\"\"%C3H8S%\"5.3000e-11nullnull2.1400e-10\"2-propanethiol\"\"%C3H8S%\"3.9000e-11nullnull2.7000e-10\"1-butanethiol\"\"%C4H10S%\"5.6000e-11nullnullnull………………\"2-butanethiol\"\"%C4H10S%\"3.8000e-11nullnull1.6500e-10\"t-butylsulfide\"\"%C4H10S%\"2.9000e-11nullnullnull\"2-methylbutanethiol\"\"%C5H12S%\"5.2000e-11nullnullnull\"n-pentanethiol\"\"%C5H12S%\"nullnullnull1.9700e-10\"1,2-ethanedithiol\"\"%C2H6S2%\"3.8000e-11nullnullnull\n\n\nLet’s get the data into Great Tables. Plus let’s make a stub.\n\ngt_tbl_1 = GT(reactions_mini, rowname_col=\"cmpd_name\")\n\ngt_tbl_1\n\n\n\n\n\n\n\n  \n  cmpd_formula\n  OH_k298\n  O3_k298\n  NO3_k298\n  Cl_k298\n\n\n\n  \n    methanethiol\n    %CH4S%\n    3.5e-11\n    None\n    9.2e-13\n    2e-10\n  \n  \n    ethanethiol\n    %C2H6S%\n    4.5e-11\n    None\n    1.21e-12\n    1.75e-10\n  \n  \n    propanethiol\n    %C3H8S%\n    5.3e-11\n    None\n    None\n    2.14e-10\n  \n  \n    2-propanethiol\n    %C3H8S%\n    3.9e-11\n    None\n    None\n    2.7e-10\n  \n  \n    1-butanethiol\n    %C4H10S%\n    5.6e-11\n    None\n    None\n    None\n  \n  \n    2-methyl-1-propanethiol\n    %C4H10S%\n    4.6e-11\n    None\n    None\n    None\n  \n  \n    2-butanethiol\n    %C4H10S%\n    3.8e-11\n    None\n    None\n    1.65e-10\n  \n  \n    t-butylsulfide\n    %C4H10S%\n    2.9e-11\n    None\n    None\n    None\n  \n  \n    2-methylbutanethiol\n    %C5H12S%\n    5.2e-11\n    None\n    None\n    None\n  \n  \n    n-pentanethiol\n    %C5H12S%\n    None\n    None\n    None\n    1.97e-10\n  \n  \n    1,2-ethanedithiol\n    %C2H6S2%\n    3.8e-11\n    None\n    None\n    None"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html#start",
    "href": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html#start",
    "title": "Code Along: Reactions Table",
    "section": "",
    "text": "Setting up.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom great_tables import GT, md, system_fonts\nfrom great_tables.data import reactions\n\nTransforming the data.\n\nreactions_mini = (\n    pl.from_pandas(reactions)\n    .filter(pl.col(\"cmpd_type\") == \"mercaptan\")\n    .select([\n        \"cmpd_name\",\n        \"cmpd_formula\",\n        cs.ends_with(\"k298\")\n    ])\n    .with_columns(\n        cmpd_formula=pl.concat_str(\n            \"%\" + pl.col(\"cmpd_formula\") + \"%\"\n        )\n    )\n)\n\nreactions_mini\n\n\nshape: (11, 6)cmpd_namecmpd_formulaOH_k298O3_k298NO3_k298Cl_k298strstrf64f64f64f64\"methanethiol\"\"%CH4S%\"3.5000e-11null9.2000e-132.0000e-10\"ethanethiol\"\"%C2H6S%\"4.5000e-11null1.2100e-121.7500e-10\"propanethiol\"\"%C3H8S%\"5.3000e-11nullnull2.1400e-10\"2-propanethiol\"\"%C3H8S%\"3.9000e-11nullnull2.7000e-10\"1-butanethiol\"\"%C4H10S%\"5.6000e-11nullnullnull………………\"2-butanethiol\"\"%C4H10S%\"3.8000e-11nullnull1.6500e-10\"t-butylsulfide\"\"%C4H10S%\"2.9000e-11nullnullnull\"2-methylbutanethiol\"\"%C5H12S%\"5.2000e-11nullnullnull\"n-pentanethiol\"\"%C5H12S%\"nullnullnull1.9700e-10\"1,2-ethanedithiol\"\"%C2H6S2%\"3.8000e-11nullnullnull\n\n\nLet’s get the data into Great Tables. Plus let’s make a stub.\n\ngt_tbl_1 = GT(reactions_mini, rowname_col=\"cmpd_name\")\n\ngt_tbl_1\n\n\n\n\n\n\n\n  \n  cmpd_formula\n  OH_k298\n  O3_k298\n  NO3_k298\n  Cl_k298\n\n\n\n  \n    methanethiol\n    %CH4S%\n    3.5e-11\n    None\n    9.2e-13\n    2e-10\n  \n  \n    ethanethiol\n    %C2H6S%\n    4.5e-11\n    None\n    1.21e-12\n    1.75e-10\n  \n  \n    propanethiol\n    %C3H8S%\n    5.3e-11\n    None\n    None\n    2.14e-10\n  \n  \n    2-propanethiol\n    %C3H8S%\n    3.9e-11\n    None\n    None\n    2.7e-10\n  \n  \n    1-butanethiol\n    %C4H10S%\n    5.6e-11\n    None\n    None\n    None\n  \n  \n    2-methyl-1-propanethiol\n    %C4H10S%\n    4.6e-11\n    None\n    None\n    None\n  \n  \n    2-butanethiol\n    %C4H10S%\n    3.8e-11\n    None\n    None\n    1.65e-10\n  \n  \n    t-butylsulfide\n    %C4H10S%\n    2.9e-11\n    None\n    None\n    None\n  \n  \n    2-methylbutanethiol\n    %C5H12S%\n    5.2e-11\n    None\n    None\n    None\n  \n  \n    n-pentanethiol\n    %C5H12S%\n    None\n    None\n    None\n    1.97e-10\n  \n  \n    1,2-ethanedithiol\n    %C2H6S2%\n    3.8e-11\n    None\n    None\n    None"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html#introducing-units-notation",
    "href": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html#introducing-units-notation",
    "title": "Code Along: Reactions Table",
    "section": "Introducing Units Notation",
    "text": "Introducing Units Notation\nAdd a title to the table to explain contents.\n\ngt_tbl_2 = (\n    gt_tbl_1\n    .tab_header(title=md(\"Gas-phase reactions of selected **mercaptan** compounds\"))\n)\n\ngt_tbl_2\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  cmpd_formula\n  OH_k298\n  O3_k298\n  NO3_k298\n  Cl_k298\n\n\n\n  \n    methanethiol\n    %CH4S%\n    3.5e-11\n    None\n    9.2e-13\n    2e-10\n  \n  \n    ethanethiol\n    %C2H6S%\n    4.5e-11\n    None\n    1.21e-12\n    1.75e-10\n  \n  \n    propanethiol\n    %C3H8S%\n    5.3e-11\n    None\n    None\n    2.14e-10\n  \n  \n    2-propanethiol\n    %C3H8S%\n    3.9e-11\n    None\n    None\n    2.7e-10\n  \n  \n    1-butanethiol\n    %C4H10S%\n    5.6e-11\n    None\n    None\n    None\n  \n  \n    2-methyl-1-propanethiol\n    %C4H10S%\n    4.6e-11\n    None\n    None\n    None\n  \n  \n    2-butanethiol\n    %C4H10S%\n    3.8e-11\n    None\n    None\n    1.65e-10\n  \n  \n    t-butylsulfide\n    %C4H10S%\n    2.9e-11\n    None\n    None\n    None\n  \n  \n    2-methylbutanethiol\n    %C5H12S%\n    5.2e-11\n    None\n    None\n    None\n  \n  \n    n-pentanethiol\n    %C5H12S%\n    None\n    None\n    None\n    1.97e-10\n  \n  \n    1,2-ethanedithiol\n    %C2H6S2%\n    3.8e-11\n    None\n    None\n    None\n  \n\n\n\n\n\n\n        \n\n\nGroup numerical columns with a spanner. Use this for the label: \"Reaction Rate Constant (298 K),&lt;br&gt;{{cm^3 molecules^–1 s^–1}}\"\n\ngt_tbl_3 = (\n    gt_tbl_2\n    .tab_spanner(\n        label=\"Reaction Rate Constant (298 K),&lt;br&gt;{{cm^3 molecules^–1 s^–1}}\",\n        columns=cs.ends_with(\"k298\")\n    )\n)\n\ngt_tbl_3\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  cmpd_formula\n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH_k298\n  O3_k298\n  NO3_k298\n  Cl_k298\n\n\n\n  \n    methanethiol\n    %CH4S%\n    3.5e-11\n    None\n    9.2e-13\n    2e-10\n  \n  \n    ethanethiol\n    %C2H6S%\n    4.5e-11\n    None\n    1.21e-12\n    1.75e-10\n  \n  \n    propanethiol\n    %C3H8S%\n    5.3e-11\n    None\n    None\n    2.14e-10\n  \n  \n    2-propanethiol\n    %C3H8S%\n    3.9e-11\n    None\n    None\n    2.7e-10\n  \n  \n    1-butanethiol\n    %C4H10S%\n    5.6e-11\n    None\n    None\n    None\n  \n  \n    2-methyl-1-propanethiol\n    %C4H10S%\n    4.6e-11\n    None\n    None\n    None\n  \n  \n    2-butanethiol\n    %C4H10S%\n    3.8e-11\n    None\n    None\n    1.65e-10\n  \n  \n    t-butylsulfide\n    %C4H10S%\n    2.9e-11\n    None\n    None\n    None\n  \n  \n    2-methylbutanethiol\n    %C5H12S%\n    5.2e-11\n    None\n    None\n    None\n  \n  \n    n-pentanethiol\n    %C5H12S%\n    None\n    None\n    None\n    1.97e-10\n  \n  \n    1,2-ethanedithiol\n    %C2H6S2%\n    3.8e-11\n    None\n    None\n    None\n  \n\n\n\n\n\n\n        \n\n\nChange Column labels for readability. The column names are: cmpd_formula, OH_k298, O3_k298, NO3_k298, and Cl_k298.\n\ngt_tbl_4 = (\n    gt_tbl_3\n    .cols_label(\n        cmpd_formula=\"\",\n        OH_k298=\"OH\",\n        O3_k298=\"{{O_3}}\",\n        NO3_k298=\"{{NO_3}}\",\n        Cl_k298=\"Cl\",\n    )\n)\n\ngt_tbl_4\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  \n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH\n  O3\n  NO3\n  Cl\n\n\n\n  \n    methanethiol\n    %CH4S%\n    3.5e-11\n    None\n    9.2e-13\n    2e-10\n  \n  \n    ethanethiol\n    %C2H6S%\n    4.5e-11\n    None\n    1.21e-12\n    1.75e-10\n  \n  \n    propanethiol\n    %C3H8S%\n    5.3e-11\n    None\n    None\n    2.14e-10\n  \n  \n    2-propanethiol\n    %C3H8S%\n    3.9e-11\n    None\n    None\n    2.7e-10\n  \n  \n    1-butanethiol\n    %C4H10S%\n    5.6e-11\n    None\n    None\n    None\n  \n  \n    2-methyl-1-propanethiol\n    %C4H10S%\n    4.6e-11\n    None\n    None\n    None\n  \n  \n    2-butanethiol\n    %C4H10S%\n    3.8e-11\n    None\n    None\n    1.65e-10\n  \n  \n    t-butylsulfide\n    %C4H10S%\n    2.9e-11\n    None\n    None\n    None\n  \n  \n    2-methylbutanethiol\n    %C5H12S%\n    5.2e-11\n    None\n    None\n    None\n  \n  \n    n-pentanethiol\n    %C5H12S%\n    None\n    None\n    None\n    1.97e-10\n  \n  \n    1,2-ethanedithiol\n    %C2H6S2%\n    3.8e-11\n    None\n    None\n    None"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html#formatting-for-science-with-fmt_units-and-fmt_scientific",
    "href": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html#formatting-for-science-with-fmt_units-and-fmt_scientific",
    "title": "Code Along: Reactions Table",
    "section": "Formatting for Science with fmt_units() and fmt_scientific()",
    "text": "Formatting for Science with fmt_units() and fmt_scientific()\nFormat the chemical formulas to make them look better.\n\ngt_tbl_5 = (\n    gt_tbl_4\n    .fmt_units(columns=\"cmpd_formula\")\n)\n\ngt_tbl_5\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  \n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH\n  O3\n  NO3\n  Cl\n\n\n\n  \n    methanethiol\n    CH4S\n    3.5e-11\n    None\n    9.2e-13\n    2e-10\n  \n  \n    ethanethiol\n    C2H6S\n    4.5e-11\n    None\n    1.21e-12\n    1.75e-10\n  \n  \n    propanethiol\n    C3H8S\n    5.3e-11\n    None\n    None\n    2.14e-10\n  \n  \n    2-propanethiol\n    C3H8S\n    3.9e-11\n    None\n    None\n    2.7e-10\n  \n  \n    1-butanethiol\n    C4H10S\n    5.6e-11\n    None\n    None\n    None\n  \n  \n    2-methyl-1-propanethiol\n    C4H10S\n    4.6e-11\n    None\n    None\n    None\n  \n  \n    2-butanethiol\n    C4H10S\n    3.8e-11\n    None\n    None\n    1.65e-10\n  \n  \n    t-butylsulfide\n    C4H10S\n    2.9e-11\n    None\n    None\n    None\n  \n  \n    2-methylbutanethiol\n    C5H12S\n    5.2e-11\n    None\n    None\n    None\n  \n  \n    n-pentanethiol\n    C5H12S\n    None\n    None\n    None\n    1.97e-10\n  \n  \n    1,2-ethanedithiol\n    C2H6S2\n    3.8e-11\n    None\n    None\n    None\n  \n\n\n\n\n\n\n        \n\n\nFormat the numeric values.\n\ngt_tbl_6 = (\n    gt_tbl_5\n    .fmt_scientific(columns=cs.ends_with(\"k298\"))\n)\n\ngt_tbl_6\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  \n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH\n  O3\n  NO3\n  Cl\n\n\n\n  \n    methanethiol\n    CH4S\n    3.50 × 10−11\n    None\n    9.20 × 10−13\n    2.00 × 10−10\n  \n  \n    ethanethiol\n    C2H6S\n    4.50 × 10−11\n    None\n    1.21 × 10−12\n    1.75 × 10−10\n  \n  \n    propanethiol\n    C3H8S\n    5.30 × 10−11\n    None\n    None\n    2.14 × 10−10\n  \n  \n    2-propanethiol\n    C3H8S\n    3.90 × 10−11\n    None\n    None\n    2.70 × 10−10\n  \n  \n    1-butanethiol\n    C4H10S\n    5.60 × 10−11\n    None\n    None\n    None\n  \n  \n    2-methyl-1-propanethiol\n    C4H10S\n    4.60 × 10−11\n    None\n    None\n    None\n  \n  \n    2-butanethiol\n    C4H10S\n    3.80 × 10−11\n    None\n    None\n    1.65 × 10−10\n  \n  \n    t-butylsulfide\n    C4H10S\n    2.90 × 10−11\n    None\n    None\n    None\n  \n  \n    2-methylbutanethiol\n    C5H12S\n    5.20 × 10−11\n    None\n    None\n    None\n  \n  \n    n-pentanethiol\n    C5H12S\n    None\n    None\n    None\n    1.97 × 10−10\n  \n  \n    1,2-ethanedithiol\n    C2H6S2\n    3.80 × 10−11\n    None\n    None\n    None\n  \n\n\n\n\n\n\n        \n\n\nReplace the None values.\n\ngt_tbl_7 = (\n    gt_tbl_6\n    .sub_missing()\n)\n\ngt_tbl_7\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  \n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH\n  O3\n  NO3\n  Cl\n\n\n\n  \n    methanethiol\n    CH4S\n    3.50 × 10−11\n    —\n    9.20 × 10−13\n    2.00 × 10−10\n  \n  \n    ethanethiol\n    C2H6S\n    4.50 × 10−11\n    —\n    1.21 × 10−12\n    1.75 × 10−10\n  \n  \n    propanethiol\n    C3H8S\n    5.30 × 10−11\n    —\n    —\n    2.14 × 10−10\n  \n  \n    2-propanethiol\n    C3H8S\n    3.90 × 10−11\n    —\n    —\n    2.70 × 10−10\n  \n  \n    1-butanethiol\n    C4H10S\n    5.60 × 10−11\n    —\n    —\n    —\n  \n  \n    2-methyl-1-propanethiol\n    C4H10S\n    4.60 × 10−11\n    —\n    —\n    —\n  \n  \n    2-butanethiol\n    C4H10S\n    3.80 × 10−11\n    —\n    —\n    1.65 × 10−10\n  \n  \n    t-butylsulfide\n    C4H10S\n    2.90 × 10−11\n    —\n    —\n    —\n  \n  \n    2-methylbutanethiol\n    C5H12S\n    5.20 × 10−11\n    —\n    —\n    —\n  \n  \n    n-pentanethiol\n    C5H12S\n    —\n    —\n    —\n    1.97 × 10−10\n  \n  \n    1,2-ethanedithiol\n    C2H6S2\n    3.80 × 10−11\n    —\n    —\n    —\n  \n\n\n\n\n\n\n        \n\n\nHide redundant columns.\n\ngt_tbl_8 = (\n    gt_tbl_7\n    .cols_hide(columns=\"O3_k298\")\n)\n\ngt_tbl_8\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  \n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH\n  NO3\n  Cl\n\n\n\n  \n    methanethiol\n    CH4S\n    3.50 × 10−11\n    9.20 × 10−13\n    2.00 × 10−10\n  \n  \n    ethanethiol\n    C2H6S\n    4.50 × 10−11\n    1.21 × 10−12\n    1.75 × 10−10\n  \n  \n    propanethiol\n    C3H8S\n    5.30 × 10−11\n    —\n    2.14 × 10−10\n  \n  \n    2-propanethiol\n    C3H8S\n    3.90 × 10−11\n    —\n    2.70 × 10−10\n  \n  \n    1-butanethiol\n    C4H10S\n    5.60 × 10−11\n    —\n    —\n  \n  \n    2-methyl-1-propanethiol\n    C4H10S\n    4.60 × 10−11\n    —\n    —\n  \n  \n    2-butanethiol\n    C4H10S\n    3.80 × 10−11\n    —\n    1.65 × 10−10\n  \n  \n    t-butylsulfide\n    C4H10S\n    2.90 × 10−11\n    —\n    —\n  \n  \n    2-methylbutanethiol\n    C5H12S\n    5.20 × 10−11\n    —\n    —\n  \n  \n    n-pentanethiol\n    C5H12S\n    —\n    —\n    1.97 × 10−10\n  \n  \n    1,2-ethanedithiol\n    C2H6S2\n    3.80 × 10−11\n    —\n    —"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html#using-the-opt_-methods-for-quick-styling",
    "href": "1-3-5-great-tables/z-answers-code-along/py-02-reactions-table.html#using-the-opt_-methods-for-quick-styling",
    "title": "Code Along: Reactions Table",
    "section": "Using the opt_*() Methods for Quick Styling",
    "text": "Using the opt_*() Methods for Quick Styling\nUse theming to style quickly.\n\ngt_tbl_9 = (\n    gt_tbl_8\n    .opt_stylize()\n)\n\ngt_tbl_9\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  \n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH\n  NO3\n  Cl\n\n\n\n  \n    methanethiol\n    CH4S\n    3.50 × 10−11\n    9.20 × 10−13\n    2.00 × 10−10\n  \n  \n    ethanethiol\n    C2H6S\n    4.50 × 10−11\n    1.21 × 10−12\n    1.75 × 10−10\n  \n  \n    propanethiol\n    C3H8S\n    5.30 × 10−11\n    —\n    2.14 × 10−10\n  \n  \n    2-propanethiol\n    C3H8S\n    3.90 × 10−11\n    —\n    2.70 × 10−10\n  \n  \n    1-butanethiol\n    C4H10S\n    5.60 × 10−11\n    —\n    —\n  \n  \n    2-methyl-1-propanethiol\n    C4H10S\n    4.60 × 10−11\n    —\n    —\n  \n  \n    2-butanethiol\n    C4H10S\n    3.80 × 10−11\n    —\n    1.65 × 10−10\n  \n  \n    t-butylsulfide\n    C4H10S\n    2.90 × 10−11\n    —\n    —\n  \n  \n    2-methylbutanethiol\n    C5H12S\n    5.20 × 10−11\n    —\n    —\n  \n  \n    n-pentanethiol\n    C5H12S\n    —\n    —\n    1.97 × 10−10\n  \n  \n    1,2-ethanedithiol\n    C2H6S2\n    3.80 × 10−11\n    —\n    —\n  \n\n\n\n\n\n\n        \n\n\nDon’t use the default font.\n\ngt_tbl_10 = (\n    gt_tbl_9\n    .opt_table_font(font=system_fonts(name=\"humanist\"))\n)\n\ngt_tbl_10\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  \n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH\n  NO3\n  Cl\n\n\n\n  \n    methanethiol\n    CH4S\n    3.50 × 10−11\n    9.20 × 10−13\n    2.00 × 10−10\n  \n  \n    ethanethiol\n    C2H6S\n    4.50 × 10−11\n    1.21 × 10−12\n    1.75 × 10−10\n  \n  \n    propanethiol\n    C3H8S\n    5.30 × 10−11\n    —\n    2.14 × 10−10\n  \n  \n    2-propanethiol\n    C3H8S\n    3.90 × 10−11\n    —\n    2.70 × 10−10\n  \n  \n    1-butanethiol\n    C4H10S\n    5.60 × 10−11\n    —\n    —\n  \n  \n    2-methyl-1-propanethiol\n    C4H10S\n    4.60 × 10−11\n    —\n    —\n  \n  \n    2-butanethiol\n    C4H10S\n    3.80 × 10−11\n    —\n    1.65 × 10−10\n  \n  \n    t-butylsulfide\n    C4H10S\n    2.90 × 10−11\n    —\n    —\n  \n  \n    2-methylbutanethiol\n    C5H12S\n    5.20 × 10−11\n    —\n    —\n  \n  \n    n-pentanethiol\n    C5H12S\n    —\n    —\n    1.97 × 10−10\n  \n  \n    1,2-ethanedithiol\n    C2H6S2\n    3.80 × 10−11\n    —\n    —\n  \n\n\n\n\n\n\n        \n\n\nMake more space between neighboring values.\n\ngt_tbl_11 = (\n    gt_tbl_10\n    .opt_horizontal_padding(scale=3)\n)\n\ngt_tbl_11\n\n\n\n\n\n\n  \n    Gas-phase reactions of selected mercaptan compounds\n  \n\n  \n  \n  \n    Reaction Rate Constant (298 K),cm3 molecules–1 s–1\n  \n\n\n  OH\n  NO3\n  Cl\n\n\n\n  \n    methanethiol\n    CH4S\n    3.50 × 10−11\n    9.20 × 10−13\n    2.00 × 10−10\n  \n  \n    ethanethiol\n    C2H6S\n    4.50 × 10−11\n    1.21 × 10−12\n    1.75 × 10−10\n  \n  \n    propanethiol\n    C3H8S\n    5.30 × 10−11\n    —\n    2.14 × 10−10\n  \n  \n    2-propanethiol\n    C3H8S\n    3.90 × 10−11\n    —\n    2.70 × 10−10\n  \n  \n    1-butanethiol\n    C4H10S\n    5.60 × 10−11\n    —\n    —\n  \n  \n    2-methyl-1-propanethiol\n    C4H10S\n    4.60 × 10−11\n    —\n    —\n  \n  \n    2-butanethiol\n    C4H10S\n    3.80 × 10−11\n    —\n    1.65 × 10−10\n  \n  \n    t-butylsulfide\n    C4H10S\n    2.90 × 10−11\n    —\n    —\n  \n  \n    2-methylbutanethiol\n    C5H12S\n    5.20 × 10−11\n    —\n    —\n  \n  \n    n-pentanethiol\n    C5H12S\n    —\n    —\n    1.97 × 10−10\n  \n  \n    1,2-ethanedithiol\n    C2H6S2\n    3.80 × 10−11\n    —\n    —"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/02-reactions-table.html",
    "href": "1-3-5-great-tables/02-code_along/02-reactions-table.html",
    "title": "Code Along: Reactions Table",
    "section": "",
    "text": "Setting up.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom great_tables import GT, md\nfrom great_tables.data import reactions\n\nTransforming the data.\n\nreactions_mini = (\n    pl.from_pandas(reactions)\n    .filter(pl.col(\"cmpd_type\") == \"mercaptan\")\n    .select([\n        \"cmpd_name\",\n        \"cmpd_formula\",\n        cs.ends_with(\"k298\")\n    ])\n    .with_columns(\n        cmpd_formula=pl.concat_str(\n            \"%\" + pl.col(\"cmpd_formula\") + \"%\"\n        )\n    )\n)\n\nreactions_mini\n\n\nshape: (11, 6)cmpd_namecmpd_formulaOH_k298O3_k298NO3_k298Cl_k298strstrf64f64f64f64\"methanethiol\"\"%CH4S%\"3.5000e-11null9.2000e-132.0000e-10\"ethanethiol\"\"%C2H6S%\"4.5000e-11null1.2100e-121.7500e-10\"propanethiol\"\"%C3H8S%\"5.3000e-11nullnull2.1400e-10\"2-propanethiol\"\"%C3H8S%\"3.9000e-11nullnull2.7000e-10\"1-butanethiol\"\"%C4H10S%\"5.6000e-11nullnullnull………………\"2-butanethiol\"\"%C4H10S%\"3.8000e-11nullnull1.6500e-10\"t-butylsulfide\"\"%C4H10S%\"2.9000e-11nullnullnull\"2-methylbutanethiol\"\"%C5H12S%\"5.2000e-11nullnullnull\"n-pentanethiol\"\"%C5H12S%\"nullnullnull1.9700e-10\"1,2-ethanedithiol\"\"%C2H6S2%\"3.8000e-11nullnullnull\n\n\nLet’s get the data into Great Tables. Plus let’s make a stub.\n\ngt_tbl_1 = # \n\ngt_tbl_1"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/02-reactions-table.html#start",
    "href": "1-3-5-great-tables/02-code_along/02-reactions-table.html#start",
    "title": "Code Along: Reactions Table",
    "section": "",
    "text": "Setting up.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom great_tables import GT, md\nfrom great_tables.data import reactions\n\nTransforming the data.\n\nreactions_mini = (\n    pl.from_pandas(reactions)\n    .filter(pl.col(\"cmpd_type\") == \"mercaptan\")\n    .select([\n        \"cmpd_name\",\n        \"cmpd_formula\",\n        cs.ends_with(\"k298\")\n    ])\n    .with_columns(\n        cmpd_formula=pl.concat_str(\n            \"%\" + pl.col(\"cmpd_formula\") + \"%\"\n        )\n    )\n)\n\nreactions_mini\n\n\nshape: (11, 6)cmpd_namecmpd_formulaOH_k298O3_k298NO3_k298Cl_k298strstrf64f64f64f64\"methanethiol\"\"%CH4S%\"3.5000e-11null9.2000e-132.0000e-10\"ethanethiol\"\"%C2H6S%\"4.5000e-11null1.2100e-121.7500e-10\"propanethiol\"\"%C3H8S%\"5.3000e-11nullnull2.1400e-10\"2-propanethiol\"\"%C3H8S%\"3.9000e-11nullnull2.7000e-10\"1-butanethiol\"\"%C4H10S%\"5.6000e-11nullnullnull………………\"2-butanethiol\"\"%C4H10S%\"3.8000e-11nullnull1.6500e-10\"t-butylsulfide\"\"%C4H10S%\"2.9000e-11nullnullnull\"2-methylbutanethiol\"\"%C5H12S%\"5.2000e-11nullnullnull\"n-pentanethiol\"\"%C5H12S%\"nullnullnull1.9700e-10\"1,2-ethanedithiol\"\"%C2H6S2%\"3.8000e-11nullnullnull\n\n\nLet’s get the data into Great Tables. Plus let’s make a stub.\n\ngt_tbl_1 = # \n\ngt_tbl_1"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/02-reactions-table.html#introducing-units-notation",
    "href": "1-3-5-great-tables/02-code_along/02-reactions-table.html#introducing-units-notation",
    "title": "Code Along: Reactions Table",
    "section": "Introducing Units Notation",
    "text": "Introducing Units Notation\nAdd a title to the table to explain contents.\n\ngt_tbl_2 = # (\n    #gt_tbl_1\n#)\n\ngt_tbl_2\n\nGroup numerical columns with a spanner. Use this for the label: \"Reaction Rate Constant (298 K),&lt;br&gt;{{cm^3 molecules^–1 s^–1}}\"\n\ngt_tbl_3 = # (\n    # gt_tbl_2\n#)\n\ngt_tbl_3\n\nChange Column labels for readability. The column names are: cmpd_formula, OH_k298, O3_k298, NO3_k298, and Cl_k298.\n\ngt_tbl_4 = # (\n    # gt_tbl_3\n#)\n\ngt_tbl_4"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/02-reactions-table.html#formatting-for-science-with-fmt_units-and-fmt_scientific",
    "href": "1-3-5-great-tables/02-code_along/02-reactions-table.html#formatting-for-science-with-fmt_units-and-fmt_scientific",
    "title": "Code Along: Reactions Table",
    "section": "Formatting for Science with fmt_units() and fmt_scientific()",
    "text": "Formatting for Science with fmt_units() and fmt_scientific()\nFormat the chemical formulas to make them look better.\n\ngt_tbl_5 = # (\n    # gt_tbl_4\n#)\n\ngt_tbl_5\n\nFormat the numeric values.\n\ngt_tbl_6 = # (\n    # gt_tbl_5\n#)\n\ngt_tbl_6\n\nReplace the None values.\n\ngt_tbl_7 = # (\n    # gt_tbl_6\n#)\n\ngt_tbl_7\n\nHide redundant columns.\n\ngt_tbl_8 = # (\n    # gt_tbl_7\n#)\n\ngt_tbl_8"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/02-reactions-table.html#using-the-opt_-methods-for-quick-styling",
    "href": "1-3-5-great-tables/02-code_along/02-reactions-table.html#using-the-opt_-methods-for-quick-styling",
    "title": "Code Along: Reactions Table",
    "section": "Using the opt_*() Methods for Quick Styling",
    "text": "Using the opt_*() Methods for Quick Styling\nUse theming to style quickly.\n\ngt_tbl_9 = # (\n    # gt_tbl_8\n#)\n\ngt_tbl_9\n\nDon’t use the default font.\n\ngt_tbl_10 = # (\n    # gt_tbl_9\n#)\n\ngt_tbl_10\n\nMake more space between neighboring values.\n\ngt_tbl_11 = # (\n    # gt_tbl_10\n#)\n\ngt_tbl_11"
  },
  {
    "objectID": "1-3-5-great-tables/index.html",
    "href": "1-3-5-great-tables/index.html",
    "title": "Great tables with Great Tables",
    "section": "",
    "text": "Great Tables slides",
    "crumbs": [
      "Great Tables",
      "Great tables with Great Tables"
    ]
  },
  {
    "objectID": "1-3-5-great-tables/index.html#slides",
    "href": "1-3-5-great-tables/index.html#slides",
    "title": "Great tables with Great Tables",
    "section": "",
    "text": "Great Tables slides",
    "crumbs": [
      "Great Tables",
      "Great tables with Great Tables"
    ]
  },
  {
    "objectID": "1-3-5-great-tables/index.html#exercises",
    "href": "1-3-5-great-tables/index.html#exercises",
    "title": "Great tables with Great Tables",
    "section": "Exercises",
    "text": "Exercises\nSee https://github.com/tracykteal/quarto-GT-pyopensci-exercises.",
    "crumbs": [
      "Great Tables",
      "Great tables with Great Tables"
    ]
  },
  {
    "objectID": "1-3-5-great-tables/01-primers/03-format-data.html",
    "href": "1-3-5-great-tables/01-primers/03-format-data.html",
    "title": "Formatting Data",
    "section": "",
    "text": "Columns of data can be formatted with the fmt_*() methods. We can specify the rows of these columns quite precisely with the rows argument. We get to apply these methods exactly once to each data cell (last call wins). Need to do custom formatting? Use the fmt() method and define your own formatting function (or, create a wrapper with fmt() if you prefer).\n\n\n\n\nfmt_number()\nfmt_integer()\nfmt_scientific()\nfmt_percent()\nfmt_currency()\nfmt_date()\nfmt_time()\nfmt_datetime()\nfmt_markdown()\nsub_missing()\ndata_color()\ntext_transform()\n\n\n\n\n\nfmt_number(\n  data,\n  columns = None,\n  rows = None,\n  decimals = 2,\n  n_sigfig = None,\n  drop_trailing_zeros = False,\n  drop_trailing_dec_mark = True,\n  use_seps = True,\n  accounting = False,\n  scale_by = 1,\n  compact = False,\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  dec_mark = \".\",\n  force_sign = False,\n  locale = None\n)\nWith numeric values in a GT table, we can perform number-based formatting so that the targeted values are rendered with a higher consideration for tabular presentation.\nWe get a lot of control over numeric formatting with the following options:\n\ndecimals: choice of the number of decimal places, option to drop trailing zeros, and a choice of the decimal symbol\ndigit grouping separators: options to enable/disable digit separators and provide a choice of separator symbol\nscaling: we can choose to scale targeted values by a multiplier value\ncompact numbers: larger figures (thousands, millions, etc.) can be autoscaled and decorated with the appropriate suffixes\npattern: option to use a text pattern for decoration of the formatted values\nlocale-based formatting: providing a locale ID (e.g., \"de\") will result in number formatting specific to the chosen locale\n\n\n\nUse exibble to create a GT table. Format the num column using fmt_number() and its default options.\n\nfrom great_tables import GT\nfrom great_tables.data import exibble\n\n(\n  GT(exibble[[\"num\", \"char\"]])\n  .fmt_number(columns=\"num\")\n)\n\n\n\n\n\n\n\n  num\n  char\n\n\n\n  \n    0.11\n    apricot\n  \n  \n    2.22\n    banana\n  \n  \n    33.33\n    coconut\n  \n  \n    444.40\n    durian\n  \n  \n    5,550.00\n    \n  \n  \n    \n    fig\n  \n  \n    777,000.00\n    grapefruit\n  \n  \n    8,880,000.00\n    honeydew\n  \n\n\n\n\n\n\n        \n\n\nLet’s format the num column as numeric with three decimal places. Don’t use digit separators (use_seps = False).\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_number(\n    decimals=3,\n    use_seps=False\n  )\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0.111\n  \n  \n    2.222\n  \n  \n    33.330\n  \n  \n    444.400\n  \n  \n    5550.000\n  \n  \n    \n  \n  \n    777000.000\n  \n  \n    8880000.000\n  \n\n\n\n\n\n\n        \n\n\nFormat only the first three rows of num, this time with 4 decimal places.\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_number(\n    rows=[0, 1, 2],\n    decimals=4\n  )\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0.1111\n  \n  \n    2.2220\n  \n  \n    33.3300\n  \n  \n    444.4\n  \n  \n    5550.0\n  \n  \n    \n  \n  \n    777000.0\n  \n  \n    8880000.0\n  \n\n\n\n\n\n\n        \n\n\nFormat only the rows of num (to 4 decimal places) where values in currency are greater than 30.\n\n(\n  GT(exibble[[\"num\", \"currency\"]])\n  .fmt_number(\n    columns=\"num\",\n    rows=lambda x: x[\"currency\"] &gt; 30,\n    decimals=4\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    0.1111\n    49.95\n  \n  \n    2.222\n    17.95\n  \n  \n    33.33\n    1.39\n  \n  \n    444.4000\n    65100.0\n  \n  \n    5,550.0000\n    1325.81\n  \n  \n    \n    13.255\n  \n  \n    777000.0\n    \n  \n  \n    8880000.0\n    0.44\n  \n\n\n\n\n\n\n        \n\n\nCombine the conditional selection of rows with scaling values by 1/1000 and then putting a \"K\" after the scaled values (with a pattern).\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_number(\n    columns=\"num\",\n    rows=lambda x: x[\"num\"] &gt; 500,\n    decimals=1,\n    scale_by=1/1000,\n    pattern=\"{x}K\"\n  )\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0.1111\n  \n  \n    2.222\n  \n  \n    33.33\n  \n  \n    444.4\n  \n  \n    5.5K\n  \n  \n    \n  \n  \n    777.0K\n  \n  \n    8,880.0K\n  \n\n\n\n\n\n\n        \n\n\nUse countrypops to create a GT table. Format all numeric columns to use a compact representation (with compact=True).\n\nfrom great_tables.data import countrypops\nimport polars as pl\n\ncountrypops_mini = (\n    pl.from_pandas(countrypops)\n    .select(\"country_code_3\", \"year\", \"population\")\n    .filter(pl.col(\"country_code_3\").is_in([\"CHN\", \"IND\", \"USA\", \"PAK\", \"IDN\"]))\n    .filter((pl.col(\"year\") % 5 == 0) & (pl.col(\"year\") &gt;= 1980))\n    .pivot(\"year\", index = \"country_code_3\")\n)\n\n(\n  GT(countrypops_mini, rowname_col=\"country_code_3\")\n  .fmt_number(\n    decimals=2,\n    compact=True\n  )\n)\n\n\n\n\n\n\n\n  \n  1980\n  1985\n  1990\n  1995\n  2000\n  2005\n  2010\n  2015\n  2020\n\n\n\n  \n    CHN\n    981.24M\n    1.05B\n    1.14B\n    1.20B\n    1.26B\n    1.30B\n    1.34B\n    1.38B\n    1.41B\n  \n  \n    IDN\n    148.18M\n    165.79M\n    182.16M\n    198.14M\n    214.07M\n    228.81M\n    244.02M\n    259.09M\n    271.86M\n  \n  \n    IND\n    696.83M\n    780.24M\n    870.45M\n    964.28M\n    1.06B\n    1.15B\n    1.24B\n    1.32B\n    1.40B\n  \n  \n    PAK\n    80.62M\n    97.12M\n    115.41M\n    133.12M\n    154.37M\n    174.37M\n    194.45M\n    210.97M\n    227.20M\n  \n  \n    USA\n    227.22M\n    237.92M\n    249.62M\n    266.28M\n    282.16M\n    295.52M\n    309.33M\n    320.74M\n    331.51M\n  \n\n\n\n\n\n\n        \n\n\nWith exibble, make a simple GT table. Format the num column as numeric with three decimal places and do this formatting according to the \"fr\" locale.\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_number(\n    columns=\"num\",\n    decimals=3,\n    locale=\"fr\" # &lt;- \"fr_FR\", \"fr_CA\", \"de\", \"de_AT\"\n  )\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0,111\n  \n  \n    2,222\n  \n  \n    33,330\n  \n  \n    444,400\n  \n  \n    5 550,000\n  \n  \n    \n  \n  \n    777 000,000\n  \n  \n    8 880 000,000\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_integer(\n  data,\n  columns = None,\n  rows = None,\n  use_seps = True,\n  accounting = False,\n  scale_by = 1,\n  compact = False,\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  force_sign = False,\n  locale = None\n)\nWith numeric values in a GT table, we can perform number-based formatting so that the targeted values are always rendered as integer values.\n\n\nUse exibble to create a GT table. Format the num column using fmt_integer() and its default options.\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_integer(columns=\"num\")\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0\n  \n  \n    2\n  \n  \n    33\n  \n  \n    444\n  \n  \n    5,550\n  \n  \n    \n  \n  \n    777,000\n  \n  \n    8,880,000\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_scientific(\n  data,\n  columns = None,\n  rows = None,\n  decimals = 2,\n  drop_trailing_zeros = False,\n  scale_by = 1,\n  exp_style = \"x10n\",\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  dec_mark = \".\",\n  force_sign_m = False,\n  force_sign_n = False,\n  locale = None\n)\nWith numeric values in a GT table, we can perform formatting so that the targeted values are rendered in scientific notation.\n\n\nUse exibble to create a GT table. Format the num column as partially in scientific notation (values &lt;=500).\n\n(\n  GT(exibble[[\"num\", \"currency\"]])\n  .fmt_scientific(\n    columns=\"num\",\n    rows=lambda x: x[\"num\"] &lt;= 500,\n    decimals=1\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    1.1 × 10−1\n    49.95\n  \n  \n    2.2\n    17.95\n  \n  \n    3.3 × 101\n    1.39\n  \n  \n    4.4 × 102\n    65100.0\n  \n  \n    5550.0\n    1325.81\n  \n  \n    \n    13.255\n  \n  \n    777000.0\n    \n  \n  \n    8880000.0\n    0.44\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_percent(\n  data,\n  columns = None,\n  rows = None,\n  decimals = 2,\n  drop_trailing_zeros = False,\n  drop_trailing_dec_mark = True,\n  scale_values = True,\n  use_seps = True,\n  accounting = False,\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  dec_mark = \".\",\n  force_sign = False,\n  incl_space = False,\n  placement = \"right\",\n  locale = None\n)\nWith numeric values in a GT table, we can perform percentage-based formatting. It is assumed the input numeric values are in a fractional format since the numbers will be automatically multiplied by 100 before decorating with a percent sign. For the other scenario, where values just need a percent sign, use scale_values = False.\n\n\nCreate a simple GT table. Format the b column to display values as percentages.\n\npl_df = pl.DataFrame({\"a\": [0, 1, 2, 3], \"b\": [0.02, 0.64, 0.973, 0.5]})\n\nGT(pl_df).fmt_percent(columns=\"b\", decimals=1)\n\n\n\n\n\n\n\n  a\n  b\n\n\n\n  \n    0\n    2.0%\n  \n  \n    1\n    64.0%\n  \n  \n    2\n    97.3%\n  \n  \n    3\n    50.0%\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_currency(\n  data,\n  columns = None,\n  rows = None,\n  currency = \"USD\",\n  use_subunits = True,\n  decimals = None,\n  drop_trailing_dec_mark = True,\n  use_seps = True,\n  accounting = False,\n  scale_by = 1,\n  compact = False,\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  dec_mark = \".\",\n  force_sign = False,\n  placement = \"left\",\n  incl_space = False,\n  locale = None\n)\nWith numeric values in a GT table, we can perform currency-based formatting. This method supports automatic formatting of currencies with a three-letter currency code. Numeric formatting facilitated through the use of a locale ID.\n\n\nUse one column of the exibble dataset to create a GT table. Format the currency column to have currency values in euros (EUR).\n\n(\n  GT(exibble[[\"currency\"]])\n  .fmt_currency(columns=\"currency\", currency=\"EUR\")\n)\n\n\n\n\n\n\n\n  currency\n\n\n\n  \n    €49.95\n  \n  \n    €17.95\n  \n  \n    €1.39\n  \n  \n    €65,100.00\n  \n  \n    €1,325.81\n  \n  \n    €13.26\n  \n  \n    \n  \n  \n    €0.44\n  \n\n\n\n\n\n\n        \n\n\nUse exibble to create a GT table. Keep only the num and currency, columns, then, format those columns using the JPY and GBP currencies.\n\n(\n  GT(exibble[[\"num\", \"currency\"]])\n  .fmt_currency(columns=\"num\", currency=\"JPY\")\n  .fmt_currency(columns=\"currency\", currency=\"GBP\")\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    ¥0\n    £49.95\n  \n  \n    ¥2\n    £17.95\n  \n  \n    ¥33\n    £1.39\n  \n  \n    ¥444\n    £65,100.00\n  \n  \n    ¥5,550\n    £1,325.81\n  \n  \n    \n    £13.26\n  \n  \n    ¥777,000\n    \n  \n  \n    ¥8,880,000\n    £0.44\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_date(\n  data,\n  columns = None,\n  rows = None,\n  date_style = \"iso\",\n  pattern = \"{x}\",\n  locale = None\n)\nFormat input date values that are either of the Date type, or, are character-based and expressed according to the ISO 8601 date format (YYYY-MM-DD). Once the appropriate data cells are targeted with columns (and, optionally, rows), we can simply apply a preset date style (see table in info_date_style() for info) to format the dates.\n\n\nUse exibble to create a GT table. Keep only the date and time columns. Format the date column to have dates formatted as month_day_year (date style 5).\n\n(\n  GT(exibble[[\"date\", \"time\"]])\n  .fmt_date(columns=\"date\", date_style=\"month_day_year\")\n)\n\n\n\n\n\n\n\n  date\n  time\n\n\n\n  \n    January 15, 2015\n    13:35\n  \n  \n    February 15, 2015\n    14:40\n  \n  \n    March 15, 2015\n    15:45\n  \n  \n    April 15, 2015\n    16:50\n  \n  \n    May 15, 2015\n    17:55\n  \n  \n    June 15, 2015\n    \n  \n  \n    \n    19:10\n  \n  \n    August 15, 2015\n    20:20\n  \n\n\n\n\n\n\n        \n\n\nUse exibble to create a GT table. keep only the date and time columns. Format the date column to have mixed date formats (dates after April will be different than the others).\n\n(\n  GT(pl.from_pandas(exibble).select([\"date\", \"time\"]))\n  .fmt_date(\n    columns=\"date\",\n    rows=pl.col(\"date\").str.to_date() &gt; pl.date(2015, 4, 1),\n    date_style=\"m_day_year\"\n  )\n  .fmt_date(\n    columns=\"date\",\n    rows=pl.col(\"date\").str.to_date() &lt;= pl.date(2015, 4, 1),\n    date_style=\"day_m_year\"\n  )\n)\n\n\n\n\n\n\n\n  date\n  time\n\n\n\n  \n    15 Jan 2015\n    13:35\n  \n  \n    15 Feb 2015\n    14:40\n  \n  \n    15 Mar 2015\n    15:45\n  \n  \n    Apr 15, 2015\n    16:50\n  \n  \n    May 15, 2015\n    17:55\n  \n  \n    Jun 15, 2015\n    None\n  \n  \n    None\n    19:10\n  \n  \n    Aug 15, 2015\n    20:20\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_time(\n  data,\n  columns = None,\n  rows = None,\n  time_style = \"iso\",\n  pattern = \"{x}\",\n  locale = None\n)\nFormat input time values that are character-based and expressed according to the ISO 8601 time format (HH:MM:SS). Once the appropriate data cells are targeted with columns (and, optionally, rows), we can simply apply a preset time style (see table in info_time_style() for info) to format the times.\n\n\nUse exibble to create a GT table. Keep only the date and time columns. Format the time column to have times formatted as \"h_m_s_p\".\n\n(\n  GT(exibble[[\"date\", \"time\"]])\n  .fmt_time(columns=\"time\", time_style=\"h_m_s_p\")\n)\n\n\n\n\n\n\n\n  date\n  time\n\n\n\n  \n    2015-01-15\n    1:35:00 PM\n  \n  \n    2015-02-15\n    2:40:00 PM\n  \n  \n    2015-03-15\n    3:45:00 PM\n  \n  \n    2015-04-15\n    4:50:00 PM\n  \n  \n    2015-05-15\n    5:55:00 PM\n  \n  \n    2015-06-15\n    \n  \n  \n    \n    7:10:00 PM\n  \n  \n    2015-08-15\n    8:20:00 PM\n  \n\n\n\n\n\n\n        \n\n\nUse exibble to create a GT table. Keep only the date and time columns. Format the time column to have mixed time formats (times after 16:00 will be different than the others).\n\n(\n  GT(pl.from_pandas(exibble).select([\"date\", \"time\"]))\n  .fmt_time(\n    columns=\"time\",\n    rows=pl.col(\"time\") &gt; \"16:00\",\n    time_style=\"h_m_s_p\"\n  )\n  .fmt_time(\n    columns=\"time\",\n    rows=pl.col(\"time\") &lt;= \"16:00\",\n    time_style=\"h_m_p\"\n  )\n)\n\n\n\n\n\n\n\n  date\n  time\n\n\n\n  \n    2015-01-15\n    1:35 PM\n  \n  \n    2015-02-15\n    2:40 PM\n  \n  \n    2015-03-15\n    3:45 PM\n  \n  \n    2015-04-15\n    4:50:00 PM\n  \n  \n    2015-05-15\n    5:55:00 PM\n  \n  \n    2015-06-15\n    None\n  \n  \n    None\n    7:10:00 PM\n  \n  \n    2015-08-15\n    8:20:00 PM\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_datetime(\n  data,\n  columns = None,\n  rows = None,\n  date_style = \"iso\",\n  time_style = \"iso\",\n  sep = \" \",\n  pattern = \"{x}\",\n  locale = None\n)\nFormat input date-time values that are character-based and expressed according to the ISO 8601 date-time format (YYYY-MM-DD HH:MM:SS). Once the appropriate data cells are targeted with columns (and, optionally, rows), we can simply apply preset date and time styles to format the data-time values.\n\n\nUse exibble to create a GT table. keep only the datetime column. Format the column to have dates formatted as month_day_year and times to be \"h_m_s_p\".\n\n(\n  GT(exibble[[\"datetime\"]])\n  .fmt_datetime(\n    columns=\"datetime\",\n    date_style=\"month_day_year\",\n    time_style=\"h_m_s_p\"\n  )\n)\n\n\n\n\n\n\n\n  datetime\n\n\n\n  \n    January 1, 2018 2:22:00 AM\n  \n  \n    February 2, 2018 2:33:00 PM\n  \n  \n    March 3, 2018 3:44:00 AM\n  \n  \n    April 4, 2018 3:55:00 PM\n  \n  \n    May 5, 2018 4:00:00 AM\n  \n  \n    June 6, 2018 4:11:00 PM\n  \n  \n    July 7, 2018 5:22:00 AM\n  \n  \n    \n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_markdown(\n  data,\n  columns,\n  rows = None\n)\nAny Markdown-formatted text in the incoming cells will be transformed to the appropriate output type during render when using fmt_markdown().\n\n\nCreate a few Markdown-based text snippets.\n\ntext_1a = \"\"\"\"### This is Markdown.\n\nMarkdown’s syntax is comprised entirely of\npunctuation characters, which punctuation\ncharacters have been carefully chosen so as\nto look like what they mean... assuming\nyou’ve ever used email.\"\"\"\n\ntext_1b = \"\"\"Info on Markdown syntax can be found\n[here](https://daringfireball.net/projects/markdown/).\"\"\"\n\ntext_2a = \"\"\"\nThe Great Tables package includes these datasets:\n\n - `countrypops`\n - `sza`\n - `gtcars`\n - `sp500`\n - `pizzaplace`\n - `exibble`\n\"\"\"\n\ntext_2b = \"\"\"There's a quick reference [here](https://commonmark.org/help/).\"\"\"\n\nArrange the text snippets into a DataFrame. Then, create a GT table and format all columns with fmt_markdown().\n\npl_df = pl.DataFrame(\n  {\n    \"Markdown_1\": [text_1a, text_1b],\n    \"Markdown_2\": [text_2a, text_2b]\n  }\n)\n\n(\n  GT(pl_df)\n  .fmt_markdown(columns=[\"Markdown_1\", \"Markdown_2\"])\n  .tab_options(table_width = \"400px\")\n)\n\n\n\n\n\n\n\n  Markdown_1\n  Markdown_2\n\n\n\n  \n    \"### This is Markdown.\nMarkdown’s syntax is comprised entirely of\npunctuation characters, which punctuation\ncharacters have been carefully chosen so as\nto look like what they mean... assuming\nyou’ve ever used email.\n    The Great Tables package includes these datasets:\n\ncountrypops\nsza\ngtcars\nsp500\npizzaplace\nexibble\n\n\n  \n  \n    Info on Markdown syntax can be found\nhere.\n    There's a quick reference here.\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nsub_missing(\n  data,\n  columns = None,\n  rows = None,\n  missing_text = None\n)\nWherever there is missing data (i.e., None values) a customized mark may present better than the standard \"None\" text that would otherwise appear. The sub_missing() method allows for this replacement through its missing_text argument.\n\n\nUse exibble to create a GT table. The None values in different columns will be given replacement text.\n\nexibble_mini = (\n  pl.from_pandas(exibble).drop([\"row\", \"group\"])\n)\n\n(\n  GT(exibble_mini)\n  .sub_missing(\n    columns=[\"num\", \"char\"],\n    missing_text=\"missing\"\n  )\n  .sub_missing(\n    columns=[\"fctr\", \"date\", \"time\", \"datetime\", \"currency\"],\n    missing_text=\"nothing\"\n  )\n) \n\n\n\n\n\n\n\n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n\n\n\n  \n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n  \n  \n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n  \n  \n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n  \n  \n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n  \n  \n    5550.0\n    missing\n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n  \n  \n    missing\n    fig\n    six\n    2015-06-15\n    nothing\n    2018-06-06 16:11\n    13.255\n  \n  \n    777000.0\n    grapefruit\n    seven\n    nothing\n    19:10\n    2018-07-07 05:22\n    nothing\n  \n  \n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    nothing\n    0.44\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ndata_color(\n  data,\n  columns = None,\n  rows = None,\n  palette = None,\n  domain = None,\n  na_color = None,\n  alpha = None,\n  reverse = False,\n  autocolor_text = True\n)\nIt’s possible to add color to data cells according to their values. The data_color() method colors all rows of any columns supplied.\n\n\nUse countrypops to create a GT table. Apply a color scale to the population column with method = \"numeric\", four supplied colors in palette, and a domain range (two-element vector).\n\ncountrypops_mini = (\n  pl.from_pandas(countrypops)\n  .filter(pl.col(\"country_name\") == \"Mongolia\")\n  .drop([\"country_code_2\", \"country_code_3\"])\n  .tail(10)\n)\n\n(\n  GT(countrypops_mini)\n  .data_color(\n    columns = \"population\",\n    palette = [\"red\", \"orange\", \"green\", \"blue\"],\n    domain = [2e6, 4e6]\n  )\n)\n\n\n\n\n\n\n\n  country_name\n  year\n  population\n\n\n\n  \n    Mongolia\n    2013\n    2845153\n  \n  \n    Mongolia\n    2014\n    2902823\n  \n  \n    Mongolia\n    2015\n    2964749\n  \n  \n    Mongolia\n    2016\n    3029555\n  \n  \n    Mongolia\n    2017\n    3096030\n  \n  \n    Mongolia\n    2018\n    3163991\n  \n  \n    Mongolia\n    2019\n    3232430\n  \n  \n    Mongolia\n    2020\n    3294335\n  \n  \n    Mongolia\n    2021\n    3347782\n  \n  \n    Mongolia\n    2022\n    3398366\n  \n\n\n\n\n\n\n        \n\n\nUse pizzaplace to create a GT table. Apply colors to the sold and income columns. Keep the domain as None to use the bounds of the available data as the domain.\n\nfrom great_tables.data import pizzaplace\n\npizzaplace_mini = (\n  pl.from_pandas(pizzaplace)\n  .filter(pl.col(\"type\").is_in([\"chicken\", \"supreme\"]))\n  .group_by([\"type\", \"size\"])\n  .agg(\n    sold=pl.len(),\n    income=pl.sum(\"price\")\n  )\n  .sort([\"type\", \"size\"])\n)\n\n(\n  GT(pizzaplace_mini, rowname_col=\"size\")\n  .fmt_currency(columns=\"income\")\n  .data_color(\n    columns = [\"sold\", \"income\"],\n    palette = [\"red\", \"white\"]\n  )\n)\n\n\n\n\n\n\n\n  \n  type\n  sold\n  income\n\n\n\n  \n    L\n    chicken\n    4932\n    $102,339.00\n  \n  \n    M\n    chicken\n    3894\n    $65,224.50\n  \n  \n    S\n    chicken\n    2224\n    $28,356.00\n  \n  \n    L\n    supreme\n    4564\n    $94,258.50\n  \n  \n    M\n    supreme\n    4046\n    $66,475.00\n  \n  \n    S\n    supreme\n    3377\n    $47,463.50\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nNumbers can be formatted with fmt_number(), values in scientific notation with fmt_scientific(), percentages with fmt_percent(), and currency values with fmt_currency().\nOptions for these number-based formats include: specification of separators, formatting according to a given locale, scaling values, applying a pattern, etc.\nDates, times, and date-times can be formatted to numbered styles with fmt_date(), fmt_time(), and fmt_datetime().\nMarkdown text can be transformed using fmt_markdown().\nMissing values (i.e., NA values) can be substituted with text by using sub_missing().\nCells can be colored according to their values with data_color()"
  },
  {
    "objectID": "1-3-5-great-tables/01-primers/03-format-data.html#intro",
    "href": "1-3-5-great-tables/01-primers/03-format-data.html#intro",
    "title": "Formatting Data",
    "section": "",
    "text": "Columns of data can be formatted with the fmt_*() methods. We can specify the rows of these columns quite precisely with the rows argument. We get to apply these methods exactly once to each data cell (last call wins). Need to do custom formatting? Use the fmt() method and define your own formatting function (or, create a wrapper with fmt() if you prefer).\n\n\n\n\nfmt_number()\nfmt_integer()\nfmt_scientific()\nfmt_percent()\nfmt_currency()\nfmt_date()\nfmt_time()\nfmt_datetime()\nfmt_markdown()\nsub_missing()\ndata_color()\ntext_transform()\n\n\n\n\n\nfmt_number(\n  data,\n  columns = None,\n  rows = None,\n  decimals = 2,\n  n_sigfig = None,\n  drop_trailing_zeros = False,\n  drop_trailing_dec_mark = True,\n  use_seps = True,\n  accounting = False,\n  scale_by = 1,\n  compact = False,\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  dec_mark = \".\",\n  force_sign = False,\n  locale = None\n)\nWith numeric values in a GT table, we can perform number-based formatting so that the targeted values are rendered with a higher consideration for tabular presentation.\nWe get a lot of control over numeric formatting with the following options:\n\ndecimals: choice of the number of decimal places, option to drop trailing zeros, and a choice of the decimal symbol\ndigit grouping separators: options to enable/disable digit separators and provide a choice of separator symbol\nscaling: we can choose to scale targeted values by a multiplier value\ncompact numbers: larger figures (thousands, millions, etc.) can be autoscaled and decorated with the appropriate suffixes\npattern: option to use a text pattern for decoration of the formatted values\nlocale-based formatting: providing a locale ID (e.g., \"de\") will result in number formatting specific to the chosen locale\n\n\n\nUse exibble to create a GT table. Format the num column using fmt_number() and its default options.\n\nfrom great_tables import GT\nfrom great_tables.data import exibble\n\n(\n  GT(exibble[[\"num\", \"char\"]])\n  .fmt_number(columns=\"num\")\n)\n\n\n\n\n\n\n\n  num\n  char\n\n\n\n  \n    0.11\n    apricot\n  \n  \n    2.22\n    banana\n  \n  \n    33.33\n    coconut\n  \n  \n    444.40\n    durian\n  \n  \n    5,550.00\n    \n  \n  \n    \n    fig\n  \n  \n    777,000.00\n    grapefruit\n  \n  \n    8,880,000.00\n    honeydew\n  \n\n\n\n\n\n\n        \n\n\nLet’s format the num column as numeric with three decimal places. Don’t use digit separators (use_seps = False).\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_number(\n    decimals=3,\n    use_seps=False\n  )\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0.111\n  \n  \n    2.222\n  \n  \n    33.330\n  \n  \n    444.400\n  \n  \n    5550.000\n  \n  \n    \n  \n  \n    777000.000\n  \n  \n    8880000.000\n  \n\n\n\n\n\n\n        \n\n\nFormat only the first three rows of num, this time with 4 decimal places.\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_number(\n    rows=[0, 1, 2],\n    decimals=4\n  )\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0.1111\n  \n  \n    2.2220\n  \n  \n    33.3300\n  \n  \n    444.4\n  \n  \n    5550.0\n  \n  \n    \n  \n  \n    777000.0\n  \n  \n    8880000.0\n  \n\n\n\n\n\n\n        \n\n\nFormat only the rows of num (to 4 decimal places) where values in currency are greater than 30.\n\n(\n  GT(exibble[[\"num\", \"currency\"]])\n  .fmt_number(\n    columns=\"num\",\n    rows=lambda x: x[\"currency\"] &gt; 30,\n    decimals=4\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    0.1111\n    49.95\n  \n  \n    2.222\n    17.95\n  \n  \n    33.33\n    1.39\n  \n  \n    444.4000\n    65100.0\n  \n  \n    5,550.0000\n    1325.81\n  \n  \n    \n    13.255\n  \n  \n    777000.0\n    \n  \n  \n    8880000.0\n    0.44\n  \n\n\n\n\n\n\n        \n\n\nCombine the conditional selection of rows with scaling values by 1/1000 and then putting a \"K\" after the scaled values (with a pattern).\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_number(\n    columns=\"num\",\n    rows=lambda x: x[\"num\"] &gt; 500,\n    decimals=1,\n    scale_by=1/1000,\n    pattern=\"{x}K\"\n  )\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0.1111\n  \n  \n    2.222\n  \n  \n    33.33\n  \n  \n    444.4\n  \n  \n    5.5K\n  \n  \n    \n  \n  \n    777.0K\n  \n  \n    8,880.0K\n  \n\n\n\n\n\n\n        \n\n\nUse countrypops to create a GT table. Format all numeric columns to use a compact representation (with compact=True).\n\nfrom great_tables.data import countrypops\nimport polars as pl\n\ncountrypops_mini = (\n    pl.from_pandas(countrypops)\n    .select(\"country_code_3\", \"year\", \"population\")\n    .filter(pl.col(\"country_code_3\").is_in([\"CHN\", \"IND\", \"USA\", \"PAK\", \"IDN\"]))\n    .filter((pl.col(\"year\") % 5 == 0) & (pl.col(\"year\") &gt;= 1980))\n    .pivot(\"year\", index = \"country_code_3\")\n)\n\n(\n  GT(countrypops_mini, rowname_col=\"country_code_3\")\n  .fmt_number(\n    decimals=2,\n    compact=True\n  )\n)\n\n\n\n\n\n\n\n  \n  1980\n  1985\n  1990\n  1995\n  2000\n  2005\n  2010\n  2015\n  2020\n\n\n\n  \n    CHN\n    981.24M\n    1.05B\n    1.14B\n    1.20B\n    1.26B\n    1.30B\n    1.34B\n    1.38B\n    1.41B\n  \n  \n    IDN\n    148.18M\n    165.79M\n    182.16M\n    198.14M\n    214.07M\n    228.81M\n    244.02M\n    259.09M\n    271.86M\n  \n  \n    IND\n    696.83M\n    780.24M\n    870.45M\n    964.28M\n    1.06B\n    1.15B\n    1.24B\n    1.32B\n    1.40B\n  \n  \n    PAK\n    80.62M\n    97.12M\n    115.41M\n    133.12M\n    154.37M\n    174.37M\n    194.45M\n    210.97M\n    227.20M\n  \n  \n    USA\n    227.22M\n    237.92M\n    249.62M\n    266.28M\n    282.16M\n    295.52M\n    309.33M\n    320.74M\n    331.51M\n  \n\n\n\n\n\n\n        \n\n\nWith exibble, make a simple GT table. Format the num column as numeric with three decimal places and do this formatting according to the \"fr\" locale.\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_number(\n    columns=\"num\",\n    decimals=3,\n    locale=\"fr\" # &lt;- \"fr_FR\", \"fr_CA\", \"de\", \"de_AT\"\n  )\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0,111\n  \n  \n    2,222\n  \n  \n    33,330\n  \n  \n    444,400\n  \n  \n    5 550,000\n  \n  \n    \n  \n  \n    777 000,000\n  \n  \n    8 880 000,000\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_integer(\n  data,\n  columns = None,\n  rows = None,\n  use_seps = True,\n  accounting = False,\n  scale_by = 1,\n  compact = False,\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  force_sign = False,\n  locale = None\n)\nWith numeric values in a GT table, we can perform number-based formatting so that the targeted values are always rendered as integer values.\n\n\nUse exibble to create a GT table. Format the num column using fmt_integer() and its default options.\n\n(\n  GT(exibble[[\"num\"]])\n  .fmt_integer(columns=\"num\")\n)\n\n\n\n\n\n\n\n  num\n\n\n\n  \n    0\n  \n  \n    2\n  \n  \n    33\n  \n  \n    444\n  \n  \n    5,550\n  \n  \n    \n  \n  \n    777,000\n  \n  \n    8,880,000\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_scientific(\n  data,\n  columns = None,\n  rows = None,\n  decimals = 2,\n  drop_trailing_zeros = False,\n  scale_by = 1,\n  exp_style = \"x10n\",\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  dec_mark = \".\",\n  force_sign_m = False,\n  force_sign_n = False,\n  locale = None\n)\nWith numeric values in a GT table, we can perform formatting so that the targeted values are rendered in scientific notation.\n\n\nUse exibble to create a GT table. Format the num column as partially in scientific notation (values &lt;=500).\n\n(\n  GT(exibble[[\"num\", \"currency\"]])\n  .fmt_scientific(\n    columns=\"num\",\n    rows=lambda x: x[\"num\"] &lt;= 500,\n    decimals=1\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    1.1 × 10−1\n    49.95\n  \n  \n    2.2\n    17.95\n  \n  \n    3.3 × 101\n    1.39\n  \n  \n    4.4 × 102\n    65100.0\n  \n  \n    5550.0\n    1325.81\n  \n  \n    \n    13.255\n  \n  \n    777000.0\n    \n  \n  \n    8880000.0\n    0.44\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_percent(\n  data,\n  columns = None,\n  rows = None,\n  decimals = 2,\n  drop_trailing_zeros = False,\n  drop_trailing_dec_mark = True,\n  scale_values = True,\n  use_seps = True,\n  accounting = False,\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  dec_mark = \".\",\n  force_sign = False,\n  incl_space = False,\n  placement = \"right\",\n  locale = None\n)\nWith numeric values in a GT table, we can perform percentage-based formatting. It is assumed the input numeric values are in a fractional format since the numbers will be automatically multiplied by 100 before decorating with a percent sign. For the other scenario, where values just need a percent sign, use scale_values = False.\n\n\nCreate a simple GT table. Format the b column to display values as percentages.\n\npl_df = pl.DataFrame({\"a\": [0, 1, 2, 3], \"b\": [0.02, 0.64, 0.973, 0.5]})\n\nGT(pl_df).fmt_percent(columns=\"b\", decimals=1)\n\n\n\n\n\n\n\n  a\n  b\n\n\n\n  \n    0\n    2.0%\n  \n  \n    1\n    64.0%\n  \n  \n    2\n    97.3%\n  \n  \n    3\n    50.0%\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_currency(\n  data,\n  columns = None,\n  rows = None,\n  currency = \"USD\",\n  use_subunits = True,\n  decimals = None,\n  drop_trailing_dec_mark = True,\n  use_seps = True,\n  accounting = False,\n  scale_by = 1,\n  compact = False,\n  pattern = \"{x}\",\n  sep_mark = \",\",\n  dec_mark = \".\",\n  force_sign = False,\n  placement = \"left\",\n  incl_space = False,\n  locale = None\n)\nWith numeric values in a GT table, we can perform currency-based formatting. This method supports automatic formatting of currencies with a three-letter currency code. Numeric formatting facilitated through the use of a locale ID.\n\n\nUse one column of the exibble dataset to create a GT table. Format the currency column to have currency values in euros (EUR).\n\n(\n  GT(exibble[[\"currency\"]])\n  .fmt_currency(columns=\"currency\", currency=\"EUR\")\n)\n\n\n\n\n\n\n\n  currency\n\n\n\n  \n    €49.95\n  \n  \n    €17.95\n  \n  \n    €1.39\n  \n  \n    €65,100.00\n  \n  \n    €1,325.81\n  \n  \n    €13.26\n  \n  \n    \n  \n  \n    €0.44\n  \n\n\n\n\n\n\n        \n\n\nUse exibble to create a GT table. Keep only the num and currency, columns, then, format those columns using the JPY and GBP currencies.\n\n(\n  GT(exibble[[\"num\", \"currency\"]])\n  .fmt_currency(columns=\"num\", currency=\"JPY\")\n  .fmt_currency(columns=\"currency\", currency=\"GBP\")\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    ¥0\n    £49.95\n  \n  \n    ¥2\n    £17.95\n  \n  \n    ¥33\n    £1.39\n  \n  \n    ¥444\n    £65,100.00\n  \n  \n    ¥5,550\n    £1,325.81\n  \n  \n    \n    £13.26\n  \n  \n    ¥777,000\n    \n  \n  \n    ¥8,880,000\n    £0.44\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_date(\n  data,\n  columns = None,\n  rows = None,\n  date_style = \"iso\",\n  pattern = \"{x}\",\n  locale = None\n)\nFormat input date values that are either of the Date type, or, are character-based and expressed according to the ISO 8601 date format (YYYY-MM-DD). Once the appropriate data cells are targeted with columns (and, optionally, rows), we can simply apply a preset date style (see table in info_date_style() for info) to format the dates.\n\n\nUse exibble to create a GT table. Keep only the date and time columns. Format the date column to have dates formatted as month_day_year (date style 5).\n\n(\n  GT(exibble[[\"date\", \"time\"]])\n  .fmt_date(columns=\"date\", date_style=\"month_day_year\")\n)\n\n\n\n\n\n\n\n  date\n  time\n\n\n\n  \n    January 15, 2015\n    13:35\n  \n  \n    February 15, 2015\n    14:40\n  \n  \n    March 15, 2015\n    15:45\n  \n  \n    April 15, 2015\n    16:50\n  \n  \n    May 15, 2015\n    17:55\n  \n  \n    June 15, 2015\n    \n  \n  \n    \n    19:10\n  \n  \n    August 15, 2015\n    20:20\n  \n\n\n\n\n\n\n        \n\n\nUse exibble to create a GT table. keep only the date and time columns. Format the date column to have mixed date formats (dates after April will be different than the others).\n\n(\n  GT(pl.from_pandas(exibble).select([\"date\", \"time\"]))\n  .fmt_date(\n    columns=\"date\",\n    rows=pl.col(\"date\").str.to_date() &gt; pl.date(2015, 4, 1),\n    date_style=\"m_day_year\"\n  )\n  .fmt_date(\n    columns=\"date\",\n    rows=pl.col(\"date\").str.to_date() &lt;= pl.date(2015, 4, 1),\n    date_style=\"day_m_year\"\n  )\n)\n\n\n\n\n\n\n\n  date\n  time\n\n\n\n  \n    15 Jan 2015\n    13:35\n  \n  \n    15 Feb 2015\n    14:40\n  \n  \n    15 Mar 2015\n    15:45\n  \n  \n    Apr 15, 2015\n    16:50\n  \n  \n    May 15, 2015\n    17:55\n  \n  \n    Jun 15, 2015\n    None\n  \n  \n    None\n    19:10\n  \n  \n    Aug 15, 2015\n    20:20\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_time(\n  data,\n  columns = None,\n  rows = None,\n  time_style = \"iso\",\n  pattern = \"{x}\",\n  locale = None\n)\nFormat input time values that are character-based and expressed according to the ISO 8601 time format (HH:MM:SS). Once the appropriate data cells are targeted with columns (and, optionally, rows), we can simply apply a preset time style (see table in info_time_style() for info) to format the times.\n\n\nUse exibble to create a GT table. Keep only the date and time columns. Format the time column to have times formatted as \"h_m_s_p\".\n\n(\n  GT(exibble[[\"date\", \"time\"]])\n  .fmt_time(columns=\"time\", time_style=\"h_m_s_p\")\n)\n\n\n\n\n\n\n\n  date\n  time\n\n\n\n  \n    2015-01-15\n    1:35:00 PM\n  \n  \n    2015-02-15\n    2:40:00 PM\n  \n  \n    2015-03-15\n    3:45:00 PM\n  \n  \n    2015-04-15\n    4:50:00 PM\n  \n  \n    2015-05-15\n    5:55:00 PM\n  \n  \n    2015-06-15\n    \n  \n  \n    \n    7:10:00 PM\n  \n  \n    2015-08-15\n    8:20:00 PM\n  \n\n\n\n\n\n\n        \n\n\nUse exibble to create a GT table. Keep only the date and time columns. Format the time column to have mixed time formats (times after 16:00 will be different than the others).\n\n(\n  GT(pl.from_pandas(exibble).select([\"date\", \"time\"]))\n  .fmt_time(\n    columns=\"time\",\n    rows=pl.col(\"time\") &gt; \"16:00\",\n    time_style=\"h_m_s_p\"\n  )\n  .fmt_time(\n    columns=\"time\",\n    rows=pl.col(\"time\") &lt;= \"16:00\",\n    time_style=\"h_m_p\"\n  )\n)\n\n\n\n\n\n\n\n  date\n  time\n\n\n\n  \n    2015-01-15\n    1:35 PM\n  \n  \n    2015-02-15\n    2:40 PM\n  \n  \n    2015-03-15\n    3:45 PM\n  \n  \n    2015-04-15\n    4:50:00 PM\n  \n  \n    2015-05-15\n    5:55:00 PM\n  \n  \n    2015-06-15\n    None\n  \n  \n    None\n    7:10:00 PM\n  \n  \n    2015-08-15\n    8:20:00 PM\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_datetime(\n  data,\n  columns = None,\n  rows = None,\n  date_style = \"iso\",\n  time_style = \"iso\",\n  sep = \" \",\n  pattern = \"{x}\",\n  locale = None\n)\nFormat input date-time values that are character-based and expressed according to the ISO 8601 date-time format (YYYY-MM-DD HH:MM:SS). Once the appropriate data cells are targeted with columns (and, optionally, rows), we can simply apply preset date and time styles to format the data-time values.\n\n\nUse exibble to create a GT table. keep only the datetime column. Format the column to have dates formatted as month_day_year and times to be \"h_m_s_p\".\n\n(\n  GT(exibble[[\"datetime\"]])\n  .fmt_datetime(\n    columns=\"datetime\",\n    date_style=\"month_day_year\",\n    time_style=\"h_m_s_p\"\n  )\n)\n\n\n\n\n\n\n\n  datetime\n\n\n\n  \n    January 1, 2018 2:22:00 AM\n  \n  \n    February 2, 2018 2:33:00 PM\n  \n  \n    March 3, 2018 3:44:00 AM\n  \n  \n    April 4, 2018 3:55:00 PM\n  \n  \n    May 5, 2018 4:00:00 AM\n  \n  \n    June 6, 2018 4:11:00 PM\n  \n  \n    July 7, 2018 5:22:00 AM\n  \n  \n    \n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nfmt_markdown(\n  data,\n  columns,\n  rows = None\n)\nAny Markdown-formatted text in the incoming cells will be transformed to the appropriate output type during render when using fmt_markdown().\n\n\nCreate a few Markdown-based text snippets.\n\ntext_1a = \"\"\"\"### This is Markdown.\n\nMarkdown’s syntax is comprised entirely of\npunctuation characters, which punctuation\ncharacters have been carefully chosen so as\nto look like what they mean... assuming\nyou’ve ever used email.\"\"\"\n\ntext_1b = \"\"\"Info on Markdown syntax can be found\n[here](https://daringfireball.net/projects/markdown/).\"\"\"\n\ntext_2a = \"\"\"\nThe Great Tables package includes these datasets:\n\n - `countrypops`\n - `sza`\n - `gtcars`\n - `sp500`\n - `pizzaplace`\n - `exibble`\n\"\"\"\n\ntext_2b = \"\"\"There's a quick reference [here](https://commonmark.org/help/).\"\"\"\n\nArrange the text snippets into a DataFrame. Then, create a GT table and format all columns with fmt_markdown().\n\npl_df = pl.DataFrame(\n  {\n    \"Markdown_1\": [text_1a, text_1b],\n    \"Markdown_2\": [text_2a, text_2b]\n  }\n)\n\n(\n  GT(pl_df)\n  .fmt_markdown(columns=[\"Markdown_1\", \"Markdown_2\"])\n  .tab_options(table_width = \"400px\")\n)\n\n\n\n\n\n\n\n  Markdown_1\n  Markdown_2\n\n\n\n  \n    \"### This is Markdown.\nMarkdown’s syntax is comprised entirely of\npunctuation characters, which punctuation\ncharacters have been carefully chosen so as\nto look like what they mean... assuming\nyou’ve ever used email.\n    The Great Tables package includes these datasets:\n\ncountrypops\nsza\ngtcars\nsp500\npizzaplace\nexibble\n\n\n  \n  \n    Info on Markdown syntax can be found\nhere.\n    There's a quick reference here.\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nsub_missing(\n  data,\n  columns = None,\n  rows = None,\n  missing_text = None\n)\nWherever there is missing data (i.e., None values) a customized mark may present better than the standard \"None\" text that would otherwise appear. The sub_missing() method allows for this replacement through its missing_text argument.\n\n\nUse exibble to create a GT table. The None values in different columns will be given replacement text.\n\nexibble_mini = (\n  pl.from_pandas(exibble).drop([\"row\", \"group\"])\n)\n\n(\n  GT(exibble_mini)\n  .sub_missing(\n    columns=[\"num\", \"char\"],\n    missing_text=\"missing\"\n  )\n  .sub_missing(\n    columns=[\"fctr\", \"date\", \"time\", \"datetime\", \"currency\"],\n    missing_text=\"nothing\"\n  )\n) \n\n\n\n\n\n\n\n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n\n\n\n  \n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n  \n  \n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n  \n  \n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n  \n  \n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n  \n  \n    5550.0\n    missing\n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n  \n  \n    missing\n    fig\n    six\n    2015-06-15\n    nothing\n    2018-06-06 16:11\n    13.255\n  \n  \n    777000.0\n    grapefruit\n    seven\n    nothing\n    19:10\n    2018-07-07 05:22\n    nothing\n  \n  \n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    nothing\n    0.44\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ndata_color(\n  data,\n  columns = None,\n  rows = None,\n  palette = None,\n  domain = None,\n  na_color = None,\n  alpha = None,\n  reverse = False,\n  autocolor_text = True\n)\nIt’s possible to add color to data cells according to their values. The data_color() method colors all rows of any columns supplied.\n\n\nUse countrypops to create a GT table. Apply a color scale to the population column with method = \"numeric\", four supplied colors in palette, and a domain range (two-element vector).\n\ncountrypops_mini = (\n  pl.from_pandas(countrypops)\n  .filter(pl.col(\"country_name\") == \"Mongolia\")\n  .drop([\"country_code_2\", \"country_code_3\"])\n  .tail(10)\n)\n\n(\n  GT(countrypops_mini)\n  .data_color(\n    columns = \"population\",\n    palette = [\"red\", \"orange\", \"green\", \"blue\"],\n    domain = [2e6, 4e6]\n  )\n)\n\n\n\n\n\n\n\n  country_name\n  year\n  population\n\n\n\n  \n    Mongolia\n    2013\n    2845153\n  \n  \n    Mongolia\n    2014\n    2902823\n  \n  \n    Mongolia\n    2015\n    2964749\n  \n  \n    Mongolia\n    2016\n    3029555\n  \n  \n    Mongolia\n    2017\n    3096030\n  \n  \n    Mongolia\n    2018\n    3163991\n  \n  \n    Mongolia\n    2019\n    3232430\n  \n  \n    Mongolia\n    2020\n    3294335\n  \n  \n    Mongolia\n    2021\n    3347782\n  \n  \n    Mongolia\n    2022\n    3398366\n  \n\n\n\n\n\n\n        \n\n\nUse pizzaplace to create a GT table. Apply colors to the sold and income columns. Keep the domain as None to use the bounds of the available data as the domain.\n\nfrom great_tables.data import pizzaplace\n\npizzaplace_mini = (\n  pl.from_pandas(pizzaplace)\n  .filter(pl.col(\"type\").is_in([\"chicken\", \"supreme\"]))\n  .group_by([\"type\", \"size\"])\n  .agg(\n    sold=pl.len(),\n    income=pl.sum(\"price\")\n  )\n  .sort([\"type\", \"size\"])\n)\n\n(\n  GT(pizzaplace_mini, rowname_col=\"size\")\n  .fmt_currency(columns=\"income\")\n  .data_color(\n    columns = [\"sold\", \"income\"],\n    palette = [\"red\", \"white\"]\n  )\n)\n\n\n\n\n\n\n\n  \n  type\n  sold\n  income\n\n\n\n  \n    L\n    chicken\n    4932\n    $102,339.00\n  \n  \n    M\n    chicken\n    3894\n    $65,224.50\n  \n  \n    S\n    chicken\n    2224\n    $28,356.00\n  \n  \n    L\n    supreme\n    4564\n    $94,258.50\n  \n  \n    M\n    supreme\n    4046\n    $66,475.00\n  \n  \n    S\n    supreme\n    3377\n    $47,463.50\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nNumbers can be formatted with fmt_number(), values in scientific notation with fmt_scientific(), percentages with fmt_percent(), and currency values with fmt_currency().\nOptions for these number-based formats include: specification of separators, formatting according to a given locale, scaling values, applying a pattern, etc.\nDates, times, and date-times can be formatted to numbered styles with fmt_date(), fmt_time(), and fmt_datetime().\nMarkdown text can be transformed using fmt_markdown().\nMissing values (i.e., NA values) can be substituted with text by using sub_missing().\nCells can be colored according to their values with data_color()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Reproducible reports and presentations with Quarto and Great Tables",
    "section": "",
    "text": "🗓️ Da::e November 1, 2024\n🕗 Time: 09:00am - 1:00pm US/Pacific\n🏨 Location: online",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "Reproducible reports and presentations with Quarto and Great Tables",
    "section": "Abstract",
    "text": "Abstract\nIf you want to use data to make decisions, answer scientific questions, inform people on issues or participate in data-driven journalism, just conducting the data analysis is not enough. Effective communication requires weaving together narrative text and code to produce elegantly formatted output that people can easily read and understand. In this workshop, you’ll learn how to use Quarto for reports and presentations and Great Tables for elegantly formatted tables to convey information that’s great for the readers, and easy for you to create too. Quarto is an open source tool based on Pandoc that allows you to create and publish reproducible, production-quality articles, presentations, dashboards, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more, right from your Jupyter notebooks.\nWith Great Tables you can make wonderful-looking tables in Python. Great Tables is an open source Python package that lets you mix and match things like a header and footer, attach a stub (which contains row labels), arrange spanner labels over top of the column labels, and much more. Not only that, but you can format the cell values in a variety of awesome ways.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Reproducible reports and presentations with Quarto and Great Tables",
    "section": "References",
    "text": "References\nGitHub repo with these materials: https://github.com/tracykteal/quarto-GT-pyopensci.\nExercises for this workshop: https://github.com/tracykteal/quarto-GT-pyopensci-exercises\nThe materials for the Quarto component of this workshop are a fork from Mine Çetinkaya-Rundel’s great Quarto SciPy 2024 workshop.\nLogo created by Jesse Mostipak.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#instructors",
    "href": "index.html#instructors",
    "title": "Reproducible reports and presentations with Quarto and Great Tables",
    "section": "Instructors",
    "text": "Instructors\nRich Iannone is a software engineer that focuses on writing software packages focused on data analysis and data visualization workflows. Through this, he really wants to help people accomplish things that were difficult before. He’s been at Posit Software for six years. During that time, among other projects, he has especially enjoyed working to make tables beautiful as a primary developer on gt for R and Great Tables for Python. Before that, he did many science-y things before switching into full-time open source development.\nTracy Teal is passionate about open source data science tools, and open source sustainability, developing and supporting leaders and teams in science and technology. Currently the open source program director at Nixtla, she has been an open source program director, an executive director of non-profits in the data science and research space, and a researcher, educator and open source developer in bioinformatics. She is a tab-complete advocate, and believes in the power of accessible tools, available resources and inclusive training to bring people to data so they can answer the questions that are important to them.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#schedule",
    "href": "index.html#schedule",
    "title": "Reproducible reports and presentations with Quarto and Great Tables",
    "section": "Schedule",
    "text": "Schedule\n\n\n\nTime (MDT)\nTopic\n\n\n\n\n9:00am\nWelcome\n\n\n9:15am\nWhat is Quarto?\n\n\n9:45am\nQuarto documents\n\n\n10:30am\nBreak\n\n\n10:45am\nGreat Tables\n\n\n12:45pm\nWrap up\n\n\n\n\n This work is licensed under a Creative Commons Attribution 4.0 International License.",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "2-3-manuscripts/index.html",
    "href": "2-3-manuscripts/index.html",
    "title": "Manuscripts",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Manuscripts"
    ]
  },
  {
    "objectID": "2-3-manuscripts/index.html#slides",
    "href": "2-3-manuscripts/index.html#slides",
    "title": "Manuscripts",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Manuscripts"
    ]
  },
  {
    "objectID": "2-3-manuscripts/index.html#exercises",
    "href": "2-3-manuscripts/index.html#exercises",
    "title": "Manuscripts",
    "section": "Exercises",
    "text": "Exercises\nSee https://github.com/mine-cetinkaya-rundel/quarto-scipy24-exercises.",
    "crumbs": [
      "More Quarto to explore on your own",
      "Manuscripts"
    ]
  },
  {
    "objectID": "1-2-documents/index.html",
    "href": "1-2-documents/index.html",
    "title": "Documents",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Quarto",
      "Documents"
    ]
  },
  {
    "objectID": "1-2-documents/index.html#slides",
    "href": "1-2-documents/index.html#slides",
    "title": "Documents",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Quarto",
      "Documents"
    ]
  },
  {
    "objectID": "1-2-documents/index.html#exercises",
    "href": "1-2-documents/index.html#exercises",
    "title": "Documents",
    "section": "Exercises",
    "text": "Exercises\nSee https://github.com/tracyteal/quarto-GT-pyopensci-exercises.",
    "crumbs": [
      "Quarto",
      "Documents"
    ]
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#quarto-projects",
    "href": "2-1-websites/2-1-websites-reveal.html#quarto-projects",
    "title": "Websites and blogs",
    "section": "Quarto projects",
    "text": "Quarto projects\n\nQuarto projects have a _quarto.yml file\nThe type field in this file indicates the type of project:\n\ndefault: Collection of documents\nwebsite: Websites (and blogs)\nbooks: Books\nmanuscript: Journal manuscript with embedded computing and JATS bundle"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#components",
    "href": "2-1-websites/2-1-websites-reveal.html#components",
    "title": "Websites and blogs",
    "section": "Components",
    "text": "Components\n\n\nA Quarto Project is a directory that contains a file called _quarto.yml.\n\n\n\n\n\n\nThis is a Quarto Project.\nmy-folder/\n├── _quarto.yml\n├── my-document.ipynb\n\nThis is not.\nmy-folder/\n├── my-document.ipynb"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#quarto.yml",
    "href": "2-1-websites/2-1-websites-reveal.html#quarto.yml",
    "title": "Websites and blogs",
    "section": "_quarto.yml",
    "text": "_quarto.yml\nA YAML file with particular keys and values that Quarto recognizes. Unrecognized keys are ignored.\n\n\n_quarto.yml\n\nproject:\n  title: \"A Barebones Project\""
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#quarto.yml-1",
    "href": "2-1-websites/2-1-websites-reveal.html#quarto.yml-1",
    "title": "Websites and blogs",
    "section": "_quarto.yml",
    "text": "_quarto.yml\nA YAML file with particular keys and values that Quarto recognizes. Unrecognized keys are ignored.\n\n\n_quarto.yml\n\nproject:\n  type: website\n  output-dir: docs\n\nwebsite:\n  page-navigation: true\n  title: \"Unlocking Dynamic Reproducible Documents\"\n  description: \"A Quarto Tutorial for Scientific Communication on Quarto at SciPy 2024\"\n\n  repo-url: https://github.com/mine-cetinkaya-rundel/quarto-scipy24\n  repo-actions: [edit, issue]\n\n  open-graph: true\n\n  sidebar:\n    background: \"#D1D9E3\"\n    logo: \"images/quarto-scipy24-site-logo.png\"\n    pinned: true\n    align: center\n    tools:\n      - icon: github\n        href: https://github.com/mine-cetinkaya-rundel/quarto-scipy24\n        text: GitHub repo\n      - icon: code-square\n        href: https://code.visualstudio.com/\n        text: VS Code\n\n    style: docked\n    search: true\n    collapse-level: 2\n    contents:\n      - href: index.qmd\n        text: Home\n      - href: setup.qmd\n        text: Setup\n      - section: Part 1\n        contents:\n          - href: 1-1-hello/index.qmd\n            text: Hello\n          - href: 1-2-documents/index.qmd\n            text: Documents\n          - href: 1-3-presentations/index.qmd\n            text: Presentations\n          - href: 1-4-dashboards/index.qmd\n            text: Dashboards\n      - section: Part 2\n        contents:\n          - href: 2-1-websites/index.qmd\n            text: Websites and blogs\n          - href: 2-2-books/index.qmd\n            text: Books\n          - href: 2-3-manuscripts/index.qmd\n            text: Manuscripts\n\n  page-footer:\n    right: \"This page is built with 💚 and [Quarto](https://quarto.org/).\"\n    left: \"&copy; Copyright 2024, Mine Çetinkaya-Rundel\"\n    background: \"#D1D9E3\" # Arylide Yellow\n\nformat:\n  html:\n    theme:\n      light: [cosmo, style/quarto-scipy24.scss]\n      dark: [cosmo, style/quarto-scipy24.scss, style/dark.scss]\n    linkcolor: \"#58779b\"\n    toc: true\n    code-copy: true\n    code-overflow: wrap\n    mainfont: \"Atkinson Hyperlegible\"\n\nexecute:\n  freeze: auto\n  echo: true"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#quarto-websites",
    "href": "2-1-websites/2-1-websites-reveal.html#quarto-websites",
    "title": "Websites and blogs",
    "section": "Quarto websites",
    "text": "Quarto websites\n\n\nWebsites are essentially format: html + a Quarto Project file\nBut a website is different than format: html in that it has multiple pages\nWebsites and books are very similar in that they associate multiple pages/resources into a connected resource\n\nIn books, you can cross-reference between pages (chapters), but (currently), you can’t cross-reference between pages in websites"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#our-turn",
    "href": "2-1-websites/2-1-websites-reveal.html#our-turn",
    "title": "Websites and blogs",
    "section": "Our turn",
    "text": "Our turn\n\nLet’s build a website that features a few of the notebooks we worked on and highlight the following features of Quarto websites:\n\nAdd a _quarto.yml\nCreate a landing page: index.qmd\nExplore navigation options: navbar, sidebar\nApply themes, including a light and dark theme toggle\nPublish to QuartoPub with quarto publish\nAn aspect of the workshop webpage that you fancy?"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#your-turn",
    "href": "2-1-websites/2-1-websites-reveal.html#your-turn",
    "title": "Websites and blogs",
    "section": "Your turn",
    "text": "Your turn\n\n\nAdd one more notebook that has at least one executable code cell and add it to the navigation list in _quarto.yml and render your site.\nAdd an about page, about.qmd, personalize it, and add it to the navigation list in _quarto.yml and render your site.\nRe-publish on QuartoPub with quarto publish.\n\n\n\n  \n    −\n    +\n \n 10:00"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#listings-1",
    "href": "2-1-websites/2-1-websites-reveal.html#listings-1",
    "title": "Websites and blogs",
    "section": "Listings",
    "text": "Listings\n\nListings enable you to automatically generate the contents of a page (or region of a page) from a list of Quarto documents or other custom data\nUseful for creating blogs, providing navigation for large numbers of documents, or any other scenario where you’d like the contents of a page to be automatically updated as documents are added, updated, and removed"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#blogs",
    "href": "2-1-websites/2-1-websites-reveal.html#blogs",
    "title": "Websites and blogs",
    "section": "Blogs",
    "text": "Blogs\n\nLet’s now add a blog component to our website:\n\nMove two of your notebook files into a new a folder called posts.\nCollect these notebooks in a new blog page using the listings feature.\n\nDon’t forget to make corresponding changes in your _quarto.yml file.\n\nExperiment with the style of listings and choose one you like."
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#when-should-code-be-re-run",
    "href": "2-1-websites/2-1-websites-reveal.html#when-should-code-be-re-run",
    "title": "Websites and blogs",
    "section": "When should code be re-run?",
    "text": "When should code be re-run?\n\n\nYou might have a reason to re-run all code in a Quarto website (every single cell in every single document) every time you render the website.\nBut, chances are, that’s not what you want.\n\nJust playing around styling – you probably don’t want to run the code again\nChanged some code in a document – you probably want to re-run the code in that document, but not necessarily others\nMade a big change affecting computations on many or all pages – you probably want to re-run all code\n\nfreeze and cache options give you fine control over these decisions"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#freeze",
    "href": "2-1-websites/2-1-websites-reveal.html#freeze",
    "title": "Websites and blogs",
    "section": "Freeze",
    "text": "Freeze\n\nThe freeze option controls when/if computational documents be re-rendered during a global project render:\n\nexecute:\n  freeze: true  # never re-render during project render\nexecute:\n  freeze: auto  # re-render only when source changes\nexecute:\n  freeze: false  # always re-render\n\nThe freeze option is typically added to a _metadata.yml file within a specific directory, affecting all files in that directory.\nFor blogs, set feeze in _metadata.yml at the root of the posts directory.\nYou can have it only within specific subdirectories for more complex sites."
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#freeze-and-jupyter-notebooks",
    "href": "2-1-websites/2-1-websites-reveal.html#freeze-and-jupyter-notebooks",
    "title": "Websites and blogs",
    "section": "Freeze and Jupyter notebooks",
    "text": "Freeze and Jupyter notebooks\n\nWhen rendering an .ipynb, Quarto will not execute the cells within the notebook by default, assuming that you have already executed them while editing the notebook\nTo execute the cells, pass the --execute flag to render:\n\n\n\nTerminal\n\nquarto render notebook.ipynb --execute\n\n\nOr specify this behavior within the notebook’s YAML front matter:\n\n---\nexecute:\n  enabled: true\n---"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#cache",
    "href": "2-1-websites/2-1-websites-reveal.html#cache",
    "title": "Websites and blogs",
    "section": "Cache",
    "text": "Cache\n\nCache stores the results of computations for a specific file\nCache invalidation is triggered by changes in chunk source code (or other cache attributes you’ve defined)\ncache can also be set at the chunk level, particularly useful for computationally expensive chunks"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#freeze-vs.-cache",
    "href": "2-1-websites/2-1-websites-reveal.html#freeze-vs.-cache",
    "title": "Websites and blogs",
    "section": "Freeze vs. cache",
    "text": "Freeze vs. cache\n\nFreeze option is typically set\n\nfor the whole website in _quarto.yml, or\nfor files within a directory in _metadata.yml in that directory\n\n\nexecute: \n  freeze: auto\n\nCache option is typically set for a given file or for individual chunk(s) in a file.\n\nexecute:\n  cache: true\nor\n\n```{python}\n1 + 1\n```\n\n2"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#quartopub",
    "href": "2-1-websites/2-1-websites-reveal.html#quartopub",
    "title": "Websites and blogs",
    "section": "QuartoPub",
    "text": "QuartoPub\n\nQuarto Pub is a free publishing service for content created with Quarto. It is ideal for blogs, course or project websites, books, presentations, and personal hobby sites.\nPublish with quarto publish:\n\n\n\nTerminal\n\nquarto publish quarto-pub\n\n\nGain a _publish.yml that is safe to check into version control."
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#other-venues",
    "href": "2-1-websites/2-1-websites-reveal.html#other-venues",
    "title": "Websites and blogs",
    "section": "Other venues",
    "text": "Other venues\n\nGitHub Pages\nPosit Connect\nNetlify\nMore venues"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#learn-more",
    "href": "2-1-websites/2-1-websites-reveal.html#learn-more",
    "title": "Websites and blogs",
    "section": "Learn more",
    "text": "Learn more\n\nquarto.org/docs/websites"
  },
  {
    "objectID": "2-1-websites/2-1-websites-reveal.html#questions",
    "href": "2-1-websites/2-1-websites-reveal.html#questions",
    "title": "Websites and blogs",
    "section": "Questions",
    "text": "Questions\n\nAny questions / anything you’d like to review before we wrap up this module?\n\n\n\n\n\n🔗 bit.ly/quarto-scipy24"
  },
  {
    "objectID": "1-3-presentations/index.html",
    "href": "1-3-presentations/index.html",
    "title": "Presentations",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Presentations"
    ]
  },
  {
    "objectID": "1-3-presentations/index.html#slides",
    "href": "1-3-presentations/index.html#slides",
    "title": "Presentations",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Presentations"
    ]
  },
  {
    "objectID": "1-3-presentations/index.html#exercises",
    "href": "1-3-presentations/index.html#exercises",
    "title": "Presentations",
    "section": "Exercises",
    "text": "Exercises\nSee https://github.com/tracykteal/quarto-GT-pyopensci-exercises.",
    "crumbs": [
      "More Quarto to explore on your own",
      "Presentations"
    ]
  },
  {
    "objectID": "2-2-books/index.html",
    "href": "2-2-books/index.html",
    "title": "Books",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Books"
    ]
  },
  {
    "objectID": "2-2-books/index.html#slides",
    "href": "2-2-books/index.html#slides",
    "title": "Books",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Books"
    ]
  },
  {
    "objectID": "2-2-books/index.html#exercises",
    "href": "2-2-books/index.html#exercises",
    "title": "Books",
    "section": "Exercises",
    "text": "Exercises\nSee https://github.com/mine-cetinkaya-rundel/quarto-scipy24-exercises.",
    "crumbs": [
      "More Quarto to explore on your own",
      "Books"
    ]
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#components",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#components",
    "title": "Dashboards",
    "section": "Components",
    "text": "Components\n\nMetadata: YAML\nText: Markdown, likely placed in cards\nCode: Executed via jupyter (or knitr), automatically placed in cards\n\n\nWeave it all together, and you have a beautiful, functional dashboard!"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#out-turn-dashing-through-the-snow",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#out-turn-dashing-through-the-snow",
    "title": "Dashboards",
    "section": "Out turn: Dashing through the snow",
    "text": "Out turn: Dashing through the snow\n\nLet’s review the components of hello-penguins-dashboard.qmd."
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#notebook-dashboard",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#notebook-dashboard",
    "title": "Dashboards",
    "section": "Notebook ➝ Dashboard",
    "text": "Notebook ➝ Dashboard\n\n\nhello-penguins-dashboard.qmd\n\n---\ntitle: Hello, penguins!\nformat: dashboard\n---\n\n# notebook content goes here..."
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#dashboard-components",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#dashboard-components",
    "title": "Dashboards",
    "section": "Dashboard Components",
    "text": "Dashboard Components\n\nNavigation Bar and Pages — Icon, title, and author along with links to sub-pages (if more than one page is defined).\nSidebars, Rows & Columns, and Tabsets — Rows and columns using markdown heading (with optional attributes to control height, width, etc.). Sidebars for interactive inputs. Tabsets to further divide content.\nCards (Plots, Tables, Value Boxes, Content) — Cards are containers for cell outputs and free form markdown text. The content of cards typically maps to cells in your notebook or source document.\n\n\nAll of these components can be authored and customized within notebook UI or plain text qmd."
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#navigation-bar-and-pages",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#navigation-bar-and-pages",
    "title": "Dashboards",
    "section": "Navigation Bar and Pages",
    "text": "Navigation Bar and Pages\n\n\n--- \ntitle: Hello, Penguins!\nformat: \n  dashboard:\n    logo: images/penguins-logo.png\n    nav-buttons:\n      - icon: github\n        href: https://github.com/mine-cetinkaya-rundel/quarto-scipy24-exercises\n---\n\n# Data\n\n# Analysis"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#sidebars-page-level",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#sidebars-page-level",
    "title": "Dashboards",
    "section": "Sidebars: Page Level",
    "text": "Sidebars: Page Level\n\n\n---\ntitle: \"Sidebar\"\nformat: dashboard\n---\n    \n# Page 1\n\n## {.sidebar}\n\n```{python}\n```\n\n## Column \n\n```{python}\n```\n\n```{python}\n```"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#sidebars-global",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#sidebars-global",
    "title": "Dashboards",
    "section": "Sidebars: Global",
    "text": "Sidebars: Global\n\n\n---\ntitle: \"Global Sidebar\"\nformat: dashboard\n---\n    \n# {.sidebar}\n\nSidebar content (e.g. inputs)\n\n# Plot\n\n```{python}\n```\n\n# Data\n\n```{python}\n```"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#layout-rows",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#layout-rows",
    "title": "Dashboards",
    "section": "Layout: Rows",
    "text": "Layout: Rows\n\n\n---\ntitle: \"Focal (Top)\"\nformat: dashboard\n---\n    \n## Row {height=70%}\n\n```{python}\n```\n\n## Row {height=30%}\n\n```{python}\n```\n\n```{python}\n```"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#layout-columns",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#layout-columns",
    "title": "Dashboards",
    "section": "Layout: Columns",
    "text": "Layout: Columns\n\n\n---\ntitle: \"Focal (Top)\"\nformat: \n  dashboard:\n    orientation: columns\n---\n    \n## Column {width=60%}\n\n```{python}\n```\n\n## Column {width=40%}\n\n```{python}\n```\n\n```{python}\n```"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#tabsets",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#tabsets",
    "title": "Dashboards",
    "section": "Tabsets",
    "text": "Tabsets\n\n\n---\ntitle: \"Palmer Penguins\"\nformat: dashboard\n---\n    \n## Row\n\n```{python}\n```\n\n## Row {.tabset}\n\n```{python}\n#| title: Chart 2\n```\n\n```{python}\n#| title: Chart 3\n```"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#plots",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#plots",
    "title": "Dashboards",
    "section": "Plots",
    "text": "Plots\n\n\nplotly\n```{python}\n#| title: GDP and Life Expectancy\nimport plotly.express as px\ndf = px.data.gapminder()\npx.scatter(\n  df, x=\"gdpPercap\", y=\"lifeExp\", \n  animation_frame=\"year\", animation_group=\"country\",\n  size=\"pop\", color=\"continent\", hover_name=\"country\", \n  facet_col=\"continent\", log_x=True, size_max=45, \n  range_x=[100,100000], range_y=[25,90]\n)\n```\n\n\n\n\n\n\nipyleaflet\n```{python}\n#| title: \"World Map\"\n#| padding: 0px\nfrom ipyleaflet import Map, basemaps, basemap_to_tiles\nMap(basemap=basemap_to_tiles(basemaps.OpenStreetMap.Mapnik),\n    center=(48.204793, 350.121558), zoom=2)\n```"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#component-tables",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#component-tables",
    "title": "Dashboards",
    "section": "Tables",
    "text": "Tables\n\n\ntabulate\n```{python}\nfrom tabulate import tabulate\nfrom IPython.display import Markdown\nMarkdown(tabulate(penguins, showindex=False)}\n```\n\n\n\n\n\n\nitables\n```{python}\nfrom itables import show\nshow(penguins)\n```"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#value-box-component",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#value-box-component",
    "title": "Dashboards",
    "section": "Value Boxes",
    "text": "Value Boxes\n\n\n## Row\n\n```{python}\n#| component: valuebox\n#| title: \"Current Price\"\ndict(icon = \"currency-dollar\",\n     color = \"secondary\",\n     value = get_price(data))\n```\n\n```{python}\n#| component: valuebox\n#| title: \"Change\"\nchange = get_change(data)\ndict(value = change['amount'],\n     icon = change['icon'],\n     color = change['color']) \n```"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#text-content",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#text-content",
    "title": "Dashboards",
    "section": "Text Content",
    "text": "Text Content\n\n\n## Column\n\n```{python}\n#| title: Population\npx.area(df, x=\"year\", y=\"pop\", \n        color=\"continent\", \n        line_group=\"country\")\n```\n\n```{python}\n#| title: Life Expectancy\npx.line(df, x=\"year\", y=\"lifeExp\", \n        color=\"continent\", \n        line_group=\"country\")\n```\n\n::: {.card}\nGapminder combines data from multiple sources\ninto unique coherent time-series that can’t be\nfound elsewhere. Learn more about the Gampminder\ndataset at &lt;https://www.gapminder.org/data/&gt;.\n:::"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#expanding-cards",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#expanding-cards",
    "title": "Dashboards",
    "section": "Expanding Cards",
    "text": "Expanding Cards\nCards provide an Expand button which appears at bottom right on hover:"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#dashboard-deployment",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#dashboard-deployment",
    "title": "Dashboards",
    "section": "Dashboard Deployment",
    "text": "Dashboard Deployment\nDashboards are typically just static HTML pages so can be deployed to any web server or web host.\n\n\n\n\n\n\n\n\nStatic\nRendered a single time (e.g. when underlying data won’t ever change)\n\n\nScheduled\nRendered on a schedule (e.g. via cron job) to accommodate changing data.\n\n\nParameterized\nVariations of static or scheduled dashboards based on parameters.\n\n\nInteractive\nFully interactive dashboard using Shiny (requires a server for deployment)."
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#parameterized-dashboards",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#parameterized-dashboards",
    "title": "Dashboards",
    "section": "Parameterized Dashboards",
    "text": "Parameterized Dashboards\n\n\n\n\nAdd a parameters tag to the first cell (based on papermill) :\n```{python}\n#| tags: [parameters]\nticker = \"BA\"\n```\nUse the -P command line option to vary the parameter:\nquarto render dashboard.qmd -P ticker:GOOG"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#interactive-dashboards",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#interactive-dashboards",
    "title": "Dashboards",
    "section": "Interactive Dashboards",
    "text": "Interactive Dashboards\nhttps://quarto.org/docs/dashboards/interactivity/shiny-python/\n\n\n\nFor interactive exploration, some dashboards can benefit from a live Python backend\nTo do this with Quarto Dashboards, add interactive Shiny components\nDeploy with or without a server!"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#deployment-of-interactive-dashboards",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#deployment-of-interactive-dashboards",
    "title": "Dashboards",
    "section": "Deployment of Interactive Dashboards",
    "text": "Deployment of Interactive Dashboards\n\n\nServer\n\nCloud\n\nshinyapps.io\nHuggingFace Spaces\nRoll your own\n\n\n\nOn-Prem\n\nShiny Server (open source)\nPosit Connect (commercial)\nRoll your own\n\n\n\n\nServerless\nUsing Pyodide\n[Example]"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#learn-more",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#learn-more",
    "title": "Dashboards",
    "section": "Learn more",
    "text": "Learn more\n\nquarto.org/docs/dashboards"
  },
  {
    "objectID": "1-4-dashboards/1-4-dashboards-reveal.html#questions",
    "href": "1-4-dashboards/1-4-dashboards-reveal.html#questions",
    "title": "Dashboards",
    "section": "Questions",
    "text": "Questions\n\nAny questions / anything you’d like to review before we wrap up this module?\n\n\n\n\n\n🔗 bit.ly/quarto-scipy24"
  },
  {
    "objectID": "1-4-dashboards/index.html",
    "href": "1-4-dashboards/index.html",
    "title": "Dashboards",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Dashboards"
    ]
  },
  {
    "objectID": "1-4-dashboards/index.html#slides",
    "href": "1-4-dashboards/index.html#slides",
    "title": "Dashboards",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Dashboards"
    ]
  },
  {
    "objectID": "1-4-dashboards/index.html#exercises",
    "href": "1-4-dashboards/index.html#exercises",
    "title": "Dashboards",
    "section": "Exercises",
    "text": "Exercises\nSee https://github.com/mine-cetinkaya-rundel/quarto-scipy24-exercises.",
    "crumbs": [
      "More Quarto to explore on your own",
      "Dashboards"
    ]
  },
  {
    "objectID": "2-2-books/2-2-books-reveal.html#quarto-books",
    "href": "2-2-books/2-2-books-reveal.html#quarto-books",
    "title": "Books",
    "section": "Quarto books",
    "text": "Quarto books\n\nBooks are also essentially format: html + a Quarto Project\nBut a book is different than format: html in that it has multiple pages\nBooks and websites are very similar in that they associate multiple pages/resources into a connected resource\nBooks and websites are different in how they treat components: pages vs. cross-referencable chapters for website and books, respectively"
  },
  {
    "objectID": "2-2-books/2-2-books-reveal.html#our-turn",
    "href": "2-2-books/2-2-books-reveal.html#our-turn",
    "title": "Books",
    "section": "Our turn",
    "text": "Our turn\n\nLet’s build a book together from some of the documents we’ve created so far and highlight the following features of Quarto websites:\n\n_quarto.yml\nindex.qmd / landing page\nCross references\nSections\nAppendices"
  },
  {
    "objectID": "2-2-books/2-2-books-reveal.html#your-turn",
    "href": "2-2-books/2-2-books-reveal.html#your-turn",
    "title": "Books",
    "section": "Your turn",
    "text": "Your turn\n\nPick up where we left off and\n\nGive a title to your book.\nAdd a numbered figure and cross-reference it.\nAdd a numbered figure to another chapter, cross-reference it, and observe the numbering scheme.\n\n\n\n  \n    −\n    +\n \n 10:00"
  },
  {
    "objectID": "2-2-books/2-2-books-reveal.html#computations",
    "href": "2-2-books/2-2-books-reveal.html#computations",
    "title": "Books",
    "section": "Computations",
    "text": "Computations\nSame freeze and cache ideas for websites apply to books."
  },
  {
    "objectID": "2-2-books/2-2-books-reveal.html#publishing",
    "href": "2-2-books/2-2-books-reveal.html#publishing",
    "title": "Books",
    "section": "Publishing",
    "text": "Publishing\nSame publishing options for websites apply to books as well."
  },
  {
    "objectID": "2-2-books/2-2-books-reveal.html#learn-more",
    "href": "2-2-books/2-2-books-reveal.html#learn-more",
    "title": "Books",
    "section": "Learn more",
    "text": "Learn more\n\nquarto.org/docs/books"
  },
  {
    "objectID": "2-2-books/2-2-books-reveal.html#questions",
    "href": "2-2-books/2-2-books-reveal.html#questions",
    "title": "Books",
    "section": "Questions",
    "text": "Questions\n\nAny questions / anything you’d like to review before we wrap up this module?\n\n\n\n\n\n🔗 bit.ly/quarto-scipy24"
  },
  {
    "objectID": "1-3-presentations/1-3-presentations-reveal.html#components",
    "href": "1-3-presentations/1-3-presentations-reveal.html#components",
    "title": "Presentations",
    "section": "Components",
    "text": "Components\n\nMetadata: YAML\nText: Markdown\nCode: Executed via jupyter (or knitr)\n\n\nWeave it all together, and you have a beautiful, functional slide deck!"
  },
  {
    "objectID": "1-3-presentations/1-3-presentations-reveal.html#our-turn",
    "href": "1-3-presentations/1-3-presentations-reveal.html#our-turn",
    "title": "Presentations",
    "section": "Our turn",
    "text": "Our turn\n\nLet’s build a presentation together from hello-penguins-slides.qmd and showcase the following features of Quarto presentations:\n\nHierarchy, headers, and document outline\nIncremental lists\nColumns\nCode, output location, code highlighting\nLogo and footer\nMaking things fit on a slide\nChalkboard\nMultiplex\nPublishing your presentation to Quarto Pub"
  },
  {
    "objectID": "1-3-presentations/1-3-presentations-reveal.html#your-turn",
    "href": "1-3-presentations/1-3-presentations-reveal.html#your-turn",
    "title": "Presentations",
    "section": "Your turn",
    "text": "Your turn\n\nPick up where we left off and\n\nChange the transition style between slides\nChange the slide size\nAdd slide numbers\n\n\n\n  \n    −\n    +\n \n 05:00"
  },
  {
    "objectID": "1-3-presentations/1-3-presentations-reveal.html#our-turn-1",
    "href": "1-3-presentations/1-3-presentations-reveal.html#our-turn-1",
    "title": "Presentations",
    "section": "Our turn",
    "text": "Our turn\n\nLet’s continue building our a presentation together from hello-penguins-slides.qmd and showcase the fragments with .fragment and fragment-index=n."
  },
  {
    "objectID": "1-3-presentations/1-3-presentations-reveal.html#quarto-presentation-formats",
    "href": "1-3-presentations/1-3-presentations-reveal.html#quarto-presentation-formats",
    "title": "Presentations",
    "section": "Quarto presentation formats",
    "text": "Quarto presentation formats\n\nrevealjs - essentially the replacement for xaringan, but with Pandoc-native syntax\nbeamer for LaTeX slides\nPowerPoint for when you have to collaborate via MS Office"
  },
  {
    "objectID": "1-3-presentations/1-3-presentations-reveal.html#learn-more",
    "href": "1-3-presentations/1-3-presentations-reveal.html#learn-more",
    "title": "Presentations",
    "section": "Learn more",
    "text": "Learn more\n\nquarto.org/docs/presentations"
  },
  {
    "objectID": "1-3-presentations/1-3-presentations-reveal.html#questions",
    "href": "1-3-presentations/1-3-presentations-reveal.html#questions",
    "title": "Presentations",
    "section": "Questions",
    "text": "Questions\n\nAny questions / anything you’d like to review before we wrap up this module?\n\n\n\n\n\n🔗 bit.ly/quarto-scipy24"
  },
  {
    "objectID": "2-1-websites/index.html",
    "href": "2-1-websites/index.html",
    "title": "Websites and blogs",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Websites"
    ]
  },
  {
    "objectID": "2-1-websites/index.html#slides",
    "href": "2-1-websites/index.html#slides",
    "title": "Websites and blogs",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "More Quarto to explore on your own",
      "Websites"
    ]
  },
  {
    "objectID": "2-1-websites/index.html#exercises",
    "href": "2-1-websites/index.html#exercises",
    "title": "Websites and blogs",
    "section": "Exercises",
    "text": "Exercises\nSee https://github.com/mine-cetinkaya-rundel/quarto-scipy24-exercises.",
    "crumbs": [
      "More Quarto to explore on your own",
      "Websites"
    ]
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#components",
    "href": "1-2-documents/1-2-documents-reveal.html#components",
    "title": "Documents",
    "section": "Components",
    "text": "Components\n\nMetadata: YAML\nText: Markdown\nCode: Executed via jupyter (or knitr)\n\n\nWeave it all together, and you have beautiful, powerful, and useful outputs!"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#literate-programming",
    "href": "1-2-documents/1-2-documents-reveal.html#literate-programming",
    "title": "Documents",
    "section": "Literate programming",
    "text": "Literate programming\nLiterate programming is writing out the program logic in a human language with included (separated by a primitive markup) code snippets and macros.\n---\ntitle: plotnine demo\ndate: 11/01/2024\nformat: html\n---\n\nThere is a relationship between flipper length and body mass.\n\n```{python}\n#| label: fig-penguins\nimport plotnine as p9\nfrom palmerpenguins import load_penguins\n\npenguins = load_penguins()\n\n(\n    p9.ggplot(\n        penguins, \n        p9.aes(x = \"flipper_length_mm\", y = \"body_mass_g\")\n    )\n    + p9.geom_point()\n    + p9.stat_smooth(method=\"lm\")\n    + p9.labs(\n        x = \"Flipper length (mm)\", \n        y = \"Body mass (g)\", \n        title = \"Body mass vs. flipper length of Palmer Penguins\"\n    )\n)\n```\n\n\nSource: https://en.wikipedia.org/wiki/Literate_programming"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#yaml",
    "href": "1-2-documents/1-2-documents-reveal.html#yaml",
    "title": "Documents",
    "section": "YAML",
    "text": "YAML\n“Yet Another Markup Language” or “YAML Ain’t Markup Language” is used to provide document level metadata.\n---\nkey: value\n---"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#output-options",
    "href": "1-2-documents/1-2-documents-reveal.html#output-options",
    "title": "Documents",
    "section": "Output options",
    "text": "Output options\n---\nformat: something\n---\n\n\n---\nformat: html\n---\n---\nformat: pdf\n---\n---\nformat: revealjs\n---"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#output-option-arguments",
    "href": "1-2-documents/1-2-documents-reveal.html#output-option-arguments",
    "title": "Documents",
    "section": "Output option arguments",
    "text": "Output option arguments\nIndentation matters!\n---\nformat: \n  html:\n    toc: true\n    code-fold: true\n---"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#yaml-validation",
    "href": "1-2-documents/1-2-documents-reveal.html#yaml-validation",
    "title": "Documents",
    "section": "YAML validation",
    "text": "YAML validation\n\nInvalid: No space after :\n\n---\nformat:html\n---\n\nInvalid: Read as missing\n\n---\nformat:\nhtml\n---\n\nValid, but needs next object\n\n---\nformat: \n  html:\n---"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#yaml-validation-1",
    "href": "1-2-documents/1-2-documents-reveal.html#yaml-validation-1",
    "title": "Documents",
    "section": "YAML validation",
    "text": "YAML validation\nThere are multiple ways of formatting valid YAML:\n\nValid: There’s a space after :\n\nformat: html\n\nValid: There are 2 spaces a new line and no trailing :\n\nformat:\n  html\n\nValid: format: html with selections made with proper indentation\n\nformat: \n  html:\n    toc: true"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#why-yaml",
    "href": "1-2-documents/1-2-documents-reveal.html#why-yaml",
    "title": "Documents",
    "section": "Why YAML?",
    "text": "Why YAML?\nTo avoid manually typing out all the options, every time when rendering via the CLI:\n\n\nDefine format\n\nquarto render document.qmd --to html\n\n\n\n\nDefine format and format options\n\nquarto render document.qmd --to html -M code-fold:true\n\n\n\n\nDefine format, format options, and values for parameters\n\nquarto render document.qmd --to html -M code-fold:true -P alpha:0.2 -P ratio:0.3"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#quarto-linting",
    "href": "1-2-documents/1-2-documents-reveal.html#quarto-linting",
    "title": "Documents",
    "section": "Quarto linting",
    "text": "Quarto linting\nLint, or a linter, is a static code analysis tool used to flag programming errors, bugs, stylistic errors and suspicious constructs.\n\n\n\n\n\n\n\n\n\n\nSource: https://en.wikipedia.org/wiki/Lint_(software)"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#quarto-yaml-intelligence",
    "href": "1-2-documents/1-2-documents-reveal.html#quarto-yaml-intelligence",
    "title": "Documents",
    "section": "Quarto YAML Intelligence",
    "text": "Quarto YAML Intelligence\nVS Code provides rich tab-completion - start a word and tab to complete, or Ctrl + space to see all available options."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#your-turn",
    "href": "1-2-documents/1-2-documents-reveal.html#your-turn",
    "title": "Documents",
    "section": "Your turn",
    "text": "Your turn\n\n\nOpen hello-penguins.qmd in VS Code.\nTry Ctrl + space to see the available YAML options.\nTry out the tab-completion of any options you remember or use the HTML reference (https://quarto.org/docs/reference/formats/html.html) as needed.\n\n\n\n  \n    −\n    +\n \n 03:00"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#list-of-valid-yaml-fields",
    "href": "1-2-documents/1-2-documents-reveal.html#list-of-valid-yaml-fields",
    "title": "Documents",
    "section": "List of valid YAML fields",
    "text": "List of valid YAML fields\n\nMany YAML fields are common across various outputs\nBut also each output type has its own set of valid YAML fields and options\nDefinitive list: quarto.org/docs/reference/formats/html"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#tldr",
    "href": "1-2-documents/1-2-documents-reveal.html#tldr",
    "title": "Documents",
    "section": "TL;DR",
    "text": "TL;DR\n\n\nPretty much everything you know about markdown formatting works with Quarto"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#text-formatting",
    "href": "1-2-documents/1-2-documents-reveal.html#text-formatting",
    "title": "Documents",
    "section": "Text Formatting",
    "text": "Text Formatting\n\n\n\n\n\n\n\nMarkdown syntax:\nOutput:\n\n\n\n\n*italics* and **bold**\nitalics and bold\n\n\nsuperscript^2^ / subscript~2~\nsuperscript2 / subscript2\n\n\n~~strikethrough~~\nstrikethrough\n\n\n`verbatim code`\nverbatim code"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#headings",
    "href": "1-2-documents/1-2-documents-reveal.html#headings",
    "title": "Documents",
    "section": "Headings",
    "text": "Headings\n\n\n\n\n\n\n\nMarkdown syntax:\nOutput:\n\n\n\n\n# Header 1\nHeader 1\n\n\n## Header 2\nHeader 2\n\n\n### Header 3\nHeader 3\n\n\n#### Header 4\nHeader 4\n\n\n##### Header 5\nHeader 5\n\n\n###### Header 6\nHeader 6"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#links",
    "href": "1-2-documents/1-2-documents-reveal.html#links",
    "title": "Documents",
    "section": "Links",
    "text": "Links\nSeveral types of links / hyperlinks:\n\n\nMarkdown syntax:\nYou can embed [named hyperlinks](https://quarto.org/),\ndirect urls like &lt;https://quarto.org/&gt;, and links to \n[other places](#quarto-anatomy) in \nthe document. \n\nThe syntax is similar for embedding an\ninline image: \n\n![Penguins playing with ball](images/penguins-quarto-ball.png).\n\nOutput:\nYou can embed named hyperlinks, direct urls like https://quarto.org/, and links to other places in the document.\nThe syntax is similar for embedding an inline image:\n."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#lists",
    "href": "1-2-documents/1-2-documents-reveal.html#lists",
    "title": "Documents",
    "section": "Lists",
    "text": "Lists\nUnordered lists:\n\n\nMarkdown syntax:\n-   unordered list         \n    -   sub-item 1         \n    -   sub-item 1         \n        -   sub-sub-item 1\n\nOutput:\n\nunordered list\n\nsub-item 1\n\nsub-item 1\n\nsub-sub-item 1\n\n\n\n\n\nOrdered lists:\n\n\nMarkdown syntax:\n1. ordered list            \n2. item 2                  \n    i. sub-item 1          \n         A.  sub-sub-item 1\n\nOutput:\n\nordered list\n\nitem 2\n\nsub-item 1\n\nsub-sub-item 1"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#quotes",
    "href": "1-2-documents/1-2-documents-reveal.html#quotes",
    "title": "Documents",
    "section": "Quotes",
    "text": "Quotes\n\n\nMarkdown syntax:\n&gt; Let us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do. \n&gt;\n&gt; Donald Knuth, Literate Programming\n\nOutput:\n\nLet us change our traditional attitude to the construction of programs: Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.\nDonald Knuth, Literate Programming\n\n\n\n\n\n“Literate Programming”, The Computer Journal 27 (1984), p. 97. (Reprinted in Literate Programming, 1992, p. 99.) Literate Programming (1984)"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#divs",
    "href": "1-2-documents/1-2-documents-reveal.html#divs",
    "title": "Documents",
    "section": "Divs",
    "text": "Divs\nPandoc, and therefore Quarto, can parse fenced div blocks:\nYou can think of a ::: div as a HTML &lt;div&gt; but it can also apply in specific situations to content in PDF or other formats:\n\n\nMarkdown syntax:\n::: {style=\"border-left:10px solid red;padding-left:5px\"}\nThis content is styled with a thick red border and some padding next to it.\n:::\n\nOutput:\n\nThis content is styled with a thick red border and some padding next to it."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#divs-with-pre-defined-classes",
    "href": "1-2-documents/1-2-documents-reveal.html#divs-with-pre-defined-classes",
    "title": "Documents",
    "section": "Divs with pre-defined classes",
    "text": "Divs with pre-defined classes\nThese can often apply between formats:\n::: {.unnumbered .unlisted}\nText\n:::"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#spans",
    "href": "1-2-documents/1-2-documents-reveal.html#spans",
    "title": "Documents",
    "section": "Spans",
    "text": "Spans\n[text]{.class} spans can be thought of a &lt;span .class&gt;Text&lt;/span&gt;, but again are a bit more transferable if using Pandoc/Quarto native attributes.\n\n\nMarkdown syntax:\nThis is text is colored [red]{style=\"color:red;\"}.\n\nOutput:\nThis is text is colored red."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#your-turn-1",
    "href": "1-2-documents/1-2-documents-reveal.html#your-turn-1",
    "title": "Documents",
    "section": "Your turn",
    "text": "Your turn\n\n\nOpen markdown-syntax.qmd in VS Code.\nFollow the instructions in the document, then exchange one new thing you’ve learned with your neighbor.\n\n\n\n  \n    −\n    +\n \n 05:00"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#callouts",
    "href": "1-2-documents/1-2-documents-reveal.html#callouts",
    "title": "Documents",
    "section": "Callouts",
    "text": "Callouts\n\n\nMarkdown syntax:\n::: callout-note\nNote that there are five types of callouts, including: \n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n\nOutput:\n\n\n\n\n\n\nNote\n\n\nNote that there are five types of callouts, including: note, tip, warning, caution, and important."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#more-callouts",
    "href": "1-2-documents/1-2-documents-reveal.html#more-callouts",
    "title": "Documents",
    "section": "More callouts",
    "text": "More callouts\n\n\n\n\n\n\nWarning\n\n\nCallouts provide a simple way to attract attention, for example, to this warning.\n\n\n\n\n\n\n\n\n\nImportant\n\n\nThis is important! Callouts will really improve your writing.\n\n\n\n\n\n\n\n\n\nCaution\n\n\nHere is something under construction.\n\n\n\n\n\n\n\n\n\nCaption\n\n\nTip with caption."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#your-turn-2",
    "href": "1-2-documents/1-2-documents-reveal.html#your-turn-2",
    "title": "Documents",
    "section": "Your turn",
    "text": "Your turn\n\n\nOpen callout-boxes.qmd and render the document.\nUsing the visual editor, change the type of the first callouts box and then re-render. Also play with the options to change its appearance.\nAdd a caption to the second callout box.\nMake the third callout box collapsible. Then, switch over to the source editor to inspect the markdown code.\nChange the format to PDF and re-render.\n\n\n\n  \n    −\n    +\n \n 03:00"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#footnotes",
    "href": "1-2-documents/1-2-documents-reveal.html#footnotes",
    "title": "Documents",
    "section": "Footnotes",
    "text": "Footnotes\n\nPandoc supports numbering and formatting footnotes.\nIn Quarto, the footnote is placed at the bottom of the slide in presentations, whereas in a document it’s hoverable or at the end of the document."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#inline-footnotes",
    "href": "1-2-documents/1-2-documents-reveal.html#inline-footnotes",
    "title": "Documents",
    "section": "Inline footnotes",
    "text": "Inline footnotes\n\n\nMarkdown syntax:\nHere is an inline note.^[Inlines notes are easier to write,\nsince you don't have to pick an identifier and move down to\ntype the note.]\n\nOutput:\nHere is an inline note.1\n\n\nInlines notes are easier to write, since you don’t have to pick an identifier and move down to type the note."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#numbered-footnotes",
    "href": "1-2-documents/1-2-documents-reveal.html#numbered-footnotes",
    "title": "Documents",
    "section": "Numbered footnotes",
    "text": "Numbered footnotes\n\n\nMarkdown syntax:\nHere is an footnore reference[^1]\n\n[^1]: This can be easy in some situations when you have a really long note or\ndon't want to inline complex outputs.\n\nOutput: Here is an footnore reference1\n\n\nThis can be easy in some situations when you have a really long note or don’t want to inline complex outputs."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#anatomy-of-a-code-chunk",
    "href": "1-2-documents/1-2-documents-reveal.html#anatomy-of-a-code-chunk",
    "title": "Documents",
    "section": "Anatomy of a code chunk",
    "text": "Anatomy of a code chunk\n\n\n\n```{python}\n#| label: penguins\n\n!pip install palmerpenguins\n!pip install plotnine\n!pip install pandas\n\nimport pandas as pd\nfrom palmerpenguins import load_penguins\n\npenguins = load_penguins()\n\npenguins[\"species\"].unique()\n```\n\nRequirement already satisfied: palmerpenguins in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (0.1.4)\nRequirement already satisfied: pandas in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from palmerpenguins) (2.2.2)\nRequirement already satisfied: numpy in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from palmerpenguins) (1.26.4)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas-&gt;palmerpenguins) (2.9.0)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas-&gt;palmerpenguins) (2024.2)\nRequirement already satisfied: tzdata&gt;=2022.7 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas-&gt;palmerpenguins) (2024.1)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas-&gt;palmerpenguins) (1.16.0)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nCollecting plotnine\n  Using cached plotnine-0.14.0-py3-none-any.whl.metadata (9.3 kB)\nRequirement already satisfied: matplotlib&gt;=3.8.0 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from plotnine) (3.9.2)\nRequirement already satisfied: pandas&gt;=2.2.0 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from plotnine) (2.2.2)\nCollecting mizani~=0.13.0 (from plotnine)\n  Using cached mizani-0.13.0-py3-none-any.whl.metadata (4.7 kB)\nRequirement already satisfied: numpy&gt;=1.23.5 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from plotnine) (1.26.4)\nRequirement already satisfied: scipy&gt;=1.8.0 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from plotnine) (1.14.1)\nRequirement already satisfied: statsmodels&gt;=0.14.0 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from plotnine) (0.14.4)\nRequirement already satisfied: contourpy&gt;=1.0.1 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from matplotlib&gt;=3.8.0-&gt;plotnine) (1.3.0)\nRequirement already satisfied: cycler&gt;=0.10 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from matplotlib&gt;=3.8.0-&gt;plotnine) (0.12.1)\nRequirement already satisfied: fonttools&gt;=4.22.0 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from matplotlib&gt;=3.8.0-&gt;plotnine) (4.54.1)\nRequirement already satisfied: kiwisolver&gt;=1.3.1 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from matplotlib&gt;=3.8.0-&gt;plotnine) (1.4.7)\nRequirement already satisfied: packaging&gt;=20.0 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from matplotlib&gt;=3.8.0-&gt;plotnine) (24.1)\nRequirement already satisfied: pillow&gt;=8 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from matplotlib&gt;=3.8.0-&gt;plotnine) (10.4.0)\nRequirement already satisfied: pyparsing&gt;=2.3.1 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from matplotlib&gt;=3.8.0-&gt;plotnine) (3.1.4)\nRequirement already satisfied: python-dateutil&gt;=2.7 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from matplotlib&gt;=3.8.0-&gt;plotnine) (2.9.0)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas&gt;=2.2.0-&gt;plotnine) (2024.2)\nRequirement already satisfied: tzdata&gt;=2022.7 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas&gt;=2.2.0-&gt;plotnine) (2024.1)\nRequirement already satisfied: patsy&gt;=0.5.6 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from statsmodels&gt;=0.14.0-&gt;plotnine) (0.5.6)\nRequirement already satisfied: six in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from patsy&gt;=0.5.6-&gt;statsmodels&gt;=0.14.0-&gt;plotnine) (1.16.0)\nUsing cached plotnine-0.14.0-py3-none-any.whl (1.3 MB)\nUsing cached mizani-0.13.0-py3-none-any.whl (127 kB)\nInstalling collected packages: mizani, plotnine\nSuccessfully installed mizani-0.13.0 plotnine-0.14.0\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nRequirement already satisfied: pandas in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (2.2.2)\nRequirement already satisfied: numpy&gt;=1.22.4 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas) (1.26.4)\nRequirement already satisfied: python-dateutil&gt;=2.8.2 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas) (2.9.0)\nRequirement already satisfied: pytz&gt;=2020.1 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas) (2024.2)\nRequirement already satisfied: tzdata&gt;=2022.7 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from pandas) (2024.1)\nRequirement already satisfied: six&gt;=1.5 in /usr/local/Caskroom/mambaforge/base/lib/python3.10/site-packages (from python-dateutil&gt;=2.8.2-&gt;pandas) (1.16.0)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\n\n\narray(['Adelie', 'Gentoo', 'Chinstrap'], dtype=object)\n\n\n\n\nHas 3x backticks on each end\nEngine (python) is indicated between curly braces {python}\nOptions stated with the #| (hashpipe): #| option1: value"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#code-who-is-it-for",
    "href": "1-2-documents/1-2-documents-reveal.html#code-who-is-it-for",
    "title": "Documents",
    "section": "Code, who is it for?",
    "text": "Code, who is it for?\n\n\nThe way you display code is very different for different contexts.\nIn a teaching scenario like today, I really want to display code.\nIn a business, you may want to have a data-science facing output which displays the source code AND a stakeholder-facing output which hides the code."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#code-1",
    "href": "1-2-documents/1-2-documents-reveal.html#code-1",
    "title": "Documents",
    "section": "Code",
    "text": "Code\nIf you simply want code formatting but don’t want to execute the code:\n\nOption 1: Use 3x back ticks + the language ```python\n\n```python\npenguins.head()\n```\n\n\nOption 2: Add eval: false as chunk option\n\n\n```{python}\n#| eval: false\npenguins.head()\n```"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#showing-and-hiding-code-with-echo",
    "href": "1-2-documents/1-2-documents-reveal.html#showing-and-hiding-code-with-echo",
    "title": "Documents",
    "section": "Showing and hiding code with echo",
    "text": "Showing and hiding code with echo\n\nThe echo option shows the code when set to true and hides it when set to false.\nIf you want to both execute the code and return the full code including backticks (like in a teaching scenario) echo: fenced is your friend!\n\n\n```{python}\n1 + 1\n```\n\n2"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#tables-and-figures",
    "href": "1-2-documents/1-2-documents-reveal.html#tables-and-figures",
    "title": "Documents",
    "section": "Tables and figures",
    "text": "Tables and figures\n\nIn reproducible reports and manuscripts, the most commonly included code outputs are tables and figures.\nSo they get their own special sections in our deep dive!"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#markdown-tables",
    "href": "1-2-documents/1-2-documents-reveal.html#markdown-tables",
    "title": "Documents",
    "section": "Markdown tables",
    "text": "Markdown tables\nMarkdown syntax:\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|   12  |  12  |    12   |    12  |\n|  123  |  123 |   123   |   123  |\n|    1  |    1 |     1   |     1  |\nOutput:\n\n\n\nRight\nLeft\nDefault\nCenter\n\n\n\n\n12\n12\n12\n12\n\n\n123\n123\n123\n123\n\n\n1\n1\n1\n1"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#grid-tables",
    "href": "1-2-documents/1-2-documents-reveal.html#grid-tables",
    "title": "Documents",
    "section": "Grid tables",
    "text": "Grid tables\nMarkdown syntax:\n+---------------+---------------+--------------------+\n| Fruit         | Price         | Advantages         |\n+===============+===============+====================+\n| Bananas       | $1.34         | - built-in wrapper |\n|               |               | - bright color     |\n+---------------+---------------+--------------------+\n| Oranges       | $2.10         | - cures scurvy     |\n|               |               | - tasty            |\n+---------------+---------------+--------------------+\n\n: Sample grid table.\nOutput:\n\nSample grid table.\n\n\n\n\n\n\n\nFruit\nPrice\nAdvantages\n\n\n\n\nBananas\n$1.34\n\nbuilt-in wrapper\nbright color\n\n\n\nOranges\n$2.10\n\ncures scurvy\ntasty"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#grid-tables-alignment",
    "href": "1-2-documents/1-2-documents-reveal.html#grid-tables-alignment",
    "title": "Documents",
    "section": "Grid tables: Alignment",
    "text": "Grid tables: Alignment\n\nAlignments can be specified as with pipe tables, by putting colons at the boundaries of the separator line after the header:\n\n+---------------+---------------+--------------------+\n| Right         | Left          | Centered           |\n+==============:+:==============+:==================:+\n| Bananas       | $1.34         | built-in wrapper   |\n+---------------+---------------+--------------------+\n\n\nFor headerless tables, the colons go on the top line instead:\n\n+--------------:+:--------------+:------------------:+\n| Right         | Left          | Centered           |\n+---------------+---------------+--------------------+"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#grid-tables-authoring",
    "href": "1-2-documents/1-2-documents-reveal.html#grid-tables-authoring",
    "title": "Documents",
    "section": "Grid tables: Authoring",
    "text": "Grid tables: Authoring\n\nNote that grid tables are quite awkward to write with a plain text editor because unlike pipe tables, the column indicators must align.\nThe Visual Editor can assist in making these tables!"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#tables-from-code",
    "href": "1-2-documents/1-2-documents-reveal.html#tables-from-code",
    "title": "Documents",
    "section": "Tables from code",
    "text": "Tables from code\nIf you are using pandas to work with your data, you can convert a pandas DataFrame to an HTML table using the DataFrame.to_html() method:\n\n\npenguins.to_html(index=False)\n\n\n\n\n\n\n\n\nspecies\n\n\n\nisland\n\n\n\nbill_length_mm\n\n\n\nbill_depth_mm\n\n\n\nflipper_length_mm\n\n\n\nbody_mass_g\n\n\n\nsex\n\n\n\nyear\n\n\n\n\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.1\n\n\n\n18.7\n\n\n\n181.0\n\n\n\n3750.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.5\n\n\n\n17.4\n\n\n\n186.0\n\n\n\n3800.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n40.3\n\n\n\n18.0\n\n\n\n195.0\n\n\n\n3250.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\nNaN\n\n\n\nNaN\n\n\n\nNaN\n\n\n\nNaN\n\n\n\nNaN\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n36.7\n\n\n\n19.3\n\n\n\n193.0\n\n\n\n3450.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.3\n\n\n\n20.6\n\n\n\n190.0\n\n\n\n3650.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n38.9\n\n\n\n17.8\n\n\n\n181.0\n\n\n\n3625.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.2\n\n\n\n19.6\n\n\n\n195.0\n\n\n\n4675.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n34.1\n\n\n\n18.1\n\n\n\n193.0\n\n\n\n3475.0\n\n\n\nNaN\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n42.0\n\n\n\n20.2\n\n\n\n190.0\n\n\n\n4250.0\n\n\n\nNaN\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n37.8\n\n\n\n17.1\n\n\n\n186.0\n\n\n\n3300.0\n\n\n\nNaN\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n37.8\n\n\n\n17.3\n\n\n\n180.0\n\n\n\n3700.0\n\n\n\nNaN\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n41.1\n\n\n\n17.6\n\n\n\n182.0\n\n\n\n3200.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n38.6\n\n\n\n21.2\n\n\n\n191.0\n\n\n\n3800.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n34.6\n\n\n\n21.1\n\n\n\n198.0\n\n\n\n4400.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n36.6\n\n\n\n17.8\n\n\n\n185.0\n\n\n\n3700.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n38.7\n\n\n\n19.0\n\n\n\n195.0\n\n\n\n3450.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n42.5\n\n\n\n20.7\n\n\n\n197.0\n\n\n\n4500.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n34.4\n\n\n\n18.4\n\n\n\n184.0\n\n\n\n3325.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n46.0\n\n\n\n21.5\n\n\n\n194.0\n\n\n\n4200.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n37.8\n\n\n\n18.3\n\n\n\n174.0\n\n\n\n3400.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n37.7\n\n\n\n18.7\n\n\n\n180.0\n\n\n\n3600.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n35.9\n\n\n\n19.2\n\n\n\n189.0\n\n\n\n3800.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n38.2\n\n\n\n18.1\n\n\n\n185.0\n\n\n\n3950.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n38.8\n\n\n\n17.2\n\n\n\n180.0\n\n\n\n3800.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n35.3\n\n\n\n18.9\n\n\n\n187.0\n\n\n\n3800.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n40.6\n\n\n\n18.6\n\n\n\n183.0\n\n\n\n3550.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n40.5\n\n\n\n17.9\n\n\n\n187.0\n\n\n\n3200.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n37.9\n\n\n\n18.6\n\n\n\n172.0\n\n\n\n3150.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n40.5\n\n\n\n18.9\n\n\n\n180.0\n\n\n\n3950.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.5\n\n\n\n16.7\n\n\n\n178.0\n\n\n\n3250.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.2\n\n\n\n18.1\n\n\n\n178.0\n\n\n\n3900.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.5\n\n\n\n17.8\n\n\n\n188.0\n\n\n\n3300.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n40.9\n\n\n\n18.9\n\n\n\n184.0\n\n\n\n3900.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.4\n\n\n\n17.0\n\n\n\n195.0\n\n\n\n3325.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.2\n\n\n\n21.1\n\n\n\n196.0\n\n\n\n4150.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n38.8\n\n\n\n20.0\n\n\n\n190.0\n\n\n\n3950.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n42.2\n\n\n\n18.5\n\n\n\n180.0\n\n\n\n3550.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.6\n\n\n\n19.3\n\n\n\n181.0\n\n\n\n3300.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.8\n\n\n\n19.1\n\n\n\n184.0\n\n\n\n4650.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.5\n\n\n\n18.0\n\n\n\n182.0\n\n\n\n3150.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n40.8\n\n\n\n18.4\n\n\n\n195.0\n\n\n\n3900.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.0\n\n\n\n18.5\n\n\n\n186.0\n\n\n\n3100.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n44.1\n\n\n\n19.7\n\n\n\n196.0\n\n\n\n4400.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.0\n\n\n\n16.9\n\n\n\n185.0\n\n\n\n3000.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.6\n\n\n\n18.8\n\n\n\n190.0\n\n\n\n4600.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n41.1\n\n\n\n19.0\n\n\n\n182.0\n\n\n\n3425.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.5\n\n\n\n18.9\n\n\n\n179.0\n\n\n\n2975.0\n\n\n\nNaN\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.0\n\n\n\n17.9\n\n\n\n190.0\n\n\n\n3450.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n42.3\n\n\n\n21.2\n\n\n\n191.0\n\n\n\n4150.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n39.6\n\n\n\n17.7\n\n\n\n186.0\n\n\n\n3500.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n40.1\n\n\n\n18.9\n\n\n\n188.0\n\n\n\n4300.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n35.0\n\n\n\n17.9\n\n\n\n190.0\n\n\n\n3450.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n42.0\n\n\n\n19.5\n\n\n\n200.0\n\n\n\n4050.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n34.5\n\n\n\n18.1\n\n\n\n187.0\n\n\n\n2900.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n41.4\n\n\n\n18.6\n\n\n\n191.0\n\n\n\n3700.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n39.0\n\n\n\n17.5\n\n\n\n186.0\n\n\n\n3550.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n40.6\n\n\n\n18.8\n\n\n\n193.0\n\n\n\n3800.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n36.5\n\n\n\n16.6\n\n\n\n181.0\n\n\n\n2850.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n37.6\n\n\n\n19.1\n\n\n\n194.0\n\n\n\n3750.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n35.7\n\n\n\n16.9\n\n\n\n185.0\n\n\n\n3150.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n41.3\n\n\n\n21.1\n\n\n\n195.0\n\n\n\n4400.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n37.6\n\n\n\n17.0\n\n\n\n185.0\n\n\n\n3600.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n41.1\n\n\n\n18.2\n\n\n\n192.0\n\n\n\n4050.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n36.4\n\n\n\n17.1\n\n\n\n184.0\n\n\n\n2850.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n41.6\n\n\n\n18.0\n\n\n\n192.0\n\n\n\n3950.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n35.5\n\n\n\n16.2\n\n\n\n195.0\n\n\n\n3350.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n41.1\n\n\n\n19.1\n\n\n\n188.0\n\n\n\n4100.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n35.9\n\n\n\n16.6\n\n\n\n190.0\n\n\n\n3050.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n41.8\n\n\n\n19.4\n\n\n\n198.0\n\n\n\n4450.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n33.5\n\n\n\n19.0\n\n\n\n190.0\n\n\n\n3600.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.7\n\n\n\n18.4\n\n\n\n190.0\n\n\n\n3900.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.6\n\n\n\n17.2\n\n\n\n196.0\n\n\n\n3550.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n45.8\n\n\n\n18.9\n\n\n\n197.0\n\n\n\n4150.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n35.5\n\n\n\n17.5\n\n\n\n190.0\n\n\n\n3700.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n42.8\n\n\n\n18.5\n\n\n\n195.0\n\n\n\n4250.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n40.9\n\n\n\n16.8\n\n\n\n191.0\n\n\n\n3700.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n37.2\n\n\n\n19.4\n\n\n\n184.0\n\n\n\n3900.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n36.2\n\n\n\n16.1\n\n\n\n187.0\n\n\n\n3550.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n42.1\n\n\n\n19.1\n\n\n\n195.0\n\n\n\n4000.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n34.6\n\n\n\n17.2\n\n\n\n189.0\n\n\n\n3200.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n42.9\n\n\n\n17.6\n\n\n\n196.0\n\n\n\n4700.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n36.7\n\n\n\n18.8\n\n\n\n187.0\n\n\n\n3800.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n35.1\n\n\n\n19.4\n\n\n\n193.0\n\n\n\n4200.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.3\n\n\n\n17.8\n\n\n\n191.0\n\n\n\n3350.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n41.3\n\n\n\n20.3\n\n\n\n194.0\n\n\n\n3550.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.3\n\n\n\n19.5\n\n\n\n190.0\n\n\n\n3800.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.9\n\n\n\n18.6\n\n\n\n189.0\n\n\n\n3500.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n38.3\n\n\n\n19.2\n\n\n\n189.0\n\n\n\n3950.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n38.9\n\n\n\n18.8\n\n\n\n190.0\n\n\n\n3600.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n35.7\n\n\n\n18.0\n\n\n\n202.0\n\n\n\n3550.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n41.1\n\n\n\n18.1\n\n\n\n205.0\n\n\n\n4300.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n34.0\n\n\n\n17.1\n\n\n\n185.0\n\n\n\n3400.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.6\n\n\n\n18.1\n\n\n\n186.0\n\n\n\n4450.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.2\n\n\n\n17.3\n\n\n\n187.0\n\n\n\n3300.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n40.8\n\n\n\n18.9\n\n\n\n208.0\n\n\n\n4300.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n38.1\n\n\n\n18.6\n\n\n\n190.0\n\n\n\n3700.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n40.3\n\n\n\n18.5\n\n\n\n196.0\n\n\n\n4350.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n33.1\n\n\n\n16.1\n\n\n\n178.0\n\n\n\n2900.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n43.2\n\n\n\n18.5\n\n\n\n192.0\n\n\n\n4100.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n35.0\n\n\n\n17.9\n\n\n\n192.0\n\n\n\n3725.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n41.0\n\n\n\n20.0\n\n\n\n203.0\n\n\n\n4725.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n37.7\n\n\n\n16.0\n\n\n\n183.0\n\n\n\n3075.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n37.8\n\n\n\n20.0\n\n\n\n190.0\n\n\n\n4250.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n37.9\n\n\n\n18.6\n\n\n\n193.0\n\n\n\n2925.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n39.7\n\n\n\n18.9\n\n\n\n184.0\n\n\n\n3550.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n38.6\n\n\n\n17.2\n\n\n\n199.0\n\n\n\n3750.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n38.2\n\n\n\n20.0\n\n\n\n190.0\n\n\n\n3900.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n38.1\n\n\n\n17.0\n\n\n\n181.0\n\n\n\n3175.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n43.2\n\n\n\n19.0\n\n\n\n197.0\n\n\n\n4775.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n38.1\n\n\n\n16.5\n\n\n\n198.0\n\n\n\n3825.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n45.6\n\n\n\n20.3\n\n\n\n191.0\n\n\n\n4600.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n39.7\n\n\n\n17.7\n\n\n\n193.0\n\n\n\n3200.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n42.2\n\n\n\n19.5\n\n\n\n197.0\n\n\n\n4275.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n39.6\n\n\n\n20.7\n\n\n\n191.0\n\n\n\n3900.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nBiscoe\n\n\n\n42.7\n\n\n\n18.3\n\n\n\n196.0\n\n\n\n4075.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n38.6\n\n\n\n17.0\n\n\n\n188.0\n\n\n\n2900.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n37.3\n\n\n\n20.5\n\n\n\n199.0\n\n\n\n3775.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n35.7\n\n\n\n17.0\n\n\n\n189.0\n\n\n\n3350.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n41.1\n\n\n\n18.6\n\n\n\n189.0\n\n\n\n3325.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n36.2\n\n\n\n17.2\n\n\n\n187.0\n\n\n\n3150.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n37.7\n\n\n\n19.8\n\n\n\n198.0\n\n\n\n3500.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n40.2\n\n\n\n17.0\n\n\n\n176.0\n\n\n\n3450.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n41.4\n\n\n\n18.5\n\n\n\n202.0\n\n\n\n3875.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n35.2\n\n\n\n15.9\n\n\n\n186.0\n\n\n\n3050.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n40.6\n\n\n\n19.0\n\n\n\n199.0\n\n\n\n4000.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n38.8\n\n\n\n17.6\n\n\n\n191.0\n\n\n\n3275.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n41.5\n\n\n\n18.3\n\n\n\n195.0\n\n\n\n4300.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n39.0\n\n\n\n17.1\n\n\n\n191.0\n\n\n\n3050.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n44.1\n\n\n\n18.0\n\n\n\n210.0\n\n\n\n4000.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n38.5\n\n\n\n17.9\n\n\n\n190.0\n\n\n\n3325.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nTorgersen\n\n\n\n43.1\n\n\n\n19.2\n\n\n\n197.0\n\n\n\n3500.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.8\n\n\n\n18.5\n\n\n\n193.0\n\n\n\n3500.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.5\n\n\n\n18.5\n\n\n\n199.0\n\n\n\n4475.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n38.1\n\n\n\n17.6\n\n\n\n187.0\n\n\n\n3425.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n41.1\n\n\n\n17.5\n\n\n\n190.0\n\n\n\n3900.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n35.6\n\n\n\n17.5\n\n\n\n191.0\n\n\n\n3175.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n40.2\n\n\n\n20.1\n\n\n\n200.0\n\n\n\n3975.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.0\n\n\n\n16.5\n\n\n\n185.0\n\n\n\n3400.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.7\n\n\n\n17.9\n\n\n\n193.0\n\n\n\n4250.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n40.2\n\n\n\n17.1\n\n\n\n193.0\n\n\n\n3400.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n40.6\n\n\n\n17.2\n\n\n\n187.0\n\n\n\n3475.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n32.1\n\n\n\n15.5\n\n\n\n188.0\n\n\n\n3050.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n40.7\n\n\n\n17.0\n\n\n\n190.0\n\n\n\n3725.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.3\n\n\n\n16.8\n\n\n\n192.0\n\n\n\n3000.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.0\n\n\n\n18.7\n\n\n\n185.0\n\n\n\n3650.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n39.2\n\n\n\n18.6\n\n\n\n190.0\n\n\n\n4250.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.6\n\n\n\n18.4\n\n\n\n184.0\n\n\n\n3475.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.0\n\n\n\n17.8\n\n\n\n195.0\n\n\n\n3450.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n37.8\n\n\n\n18.1\n\n\n\n193.0\n\n\n\n3750.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n36.0\n\n\n\n17.1\n\n\n\n187.0\n\n\n\n3700.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nAdelie\n\n\n\nDream\n\n\n\n41.5\n\n\n\n18.5\n\n\n\n201.0\n\n\n\n4000.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.1\n\n\n\n13.2\n\n\n\n211.0\n\n\n\n4500.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.0\n\n\n\n16.3\n\n\n\n230.0\n\n\n\n5700.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.7\n\n\n\n14.1\n\n\n\n210.0\n\n\n\n4450.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.0\n\n\n\n15.2\n\n\n\n218.0\n\n\n\n5700.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.6\n\n\n\n14.5\n\n\n\n215.0\n\n\n\n5400.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.5\n\n\n\n13.5\n\n\n\n210.0\n\n\n\n4550.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.4\n\n\n\n14.6\n\n\n\n211.0\n\n\n\n4800.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.7\n\n\n\n15.3\n\n\n\n219.0\n\n\n\n5200.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n43.3\n\n\n\n13.4\n\n\n\n209.0\n\n\n\n4400.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.8\n\n\n\n15.4\n\n\n\n215.0\n\n\n\n5150.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n40.9\n\n\n\n13.7\n\n\n\n214.0\n\n\n\n4650.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.0\n\n\n\n16.1\n\n\n\n216.0\n\n\n\n5550.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.5\n\n\n\n13.7\n\n\n\n214.0\n\n\n\n4650.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.4\n\n\n\n14.6\n\n\n\n213.0\n\n\n\n5850.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.8\n\n\n\n14.6\n\n\n\n210.0\n\n\n\n4200.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.3\n\n\n\n15.7\n\n\n\n217.0\n\n\n\n5850.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n42.0\n\n\n\n13.5\n\n\n\n210.0\n\n\n\n4150.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.2\n\n\n\n15.2\n\n\n\n221.0\n\n\n\n6300.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.2\n\n\n\n14.5\n\n\n\n209.0\n\n\n\n4800.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.7\n\n\n\n15.1\n\n\n\n222.0\n\n\n\n5350.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.2\n\n\n\n14.3\n\n\n\n218.0\n\n\n\n5700.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.1\n\n\n\n14.5\n\n\n\n215.0\n\n\n\n5000.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.5\n\n\n\n14.5\n\n\n\n213.0\n\n\n\n4400.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.3\n\n\n\n15.8\n\n\n\n215.0\n\n\n\n5050.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n42.9\n\n\n\n13.1\n\n\n\n215.0\n\n\n\n5000.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.1\n\n\n\n15.1\n\n\n\n215.0\n\n\n\n5100.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n44.5\n\n\n\n14.3\n\n\n\n216.0\n\n\n\n4100.0\n\n\n\nNaN\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.8\n\n\n\n15.0\n\n\n\n215.0\n\n\n\n5650.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.2\n\n\n\n14.3\n\n\n\n210.0\n\n\n\n4600.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.0\n\n\n\n15.3\n\n\n\n220.0\n\n\n\n5550.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.3\n\n\n\n15.3\n\n\n\n222.0\n\n\n\n5250.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n42.8\n\n\n\n14.2\n\n\n\n209.0\n\n\n\n4700.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.1\n\n\n\n14.5\n\n\n\n207.0\n\n\n\n5050.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n59.6\n\n\n\n17.0\n\n\n\n230.0\n\n\n\n6050.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.1\n\n\n\n14.8\n\n\n\n220.0\n\n\n\n5150.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.4\n\n\n\n16.3\n\n\n\n220.0\n\n\n\n5400.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n42.6\n\n\n\n13.7\n\n\n\n213.0\n\n\n\n4950.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n44.4\n\n\n\n17.3\n\n\n\n219.0\n\n\n\n5250.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n44.0\n\n\n\n13.6\n\n\n\n208.0\n\n\n\n4350.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.7\n\n\n\n15.7\n\n\n\n208.0\n\n\n\n5350.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n42.7\n\n\n\n13.7\n\n\n\n208.0\n\n\n\n3950.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.6\n\n\n\n16.0\n\n\n\n225.0\n\n\n\n5700.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.3\n\n\n\n13.7\n\n\n\n210.0\n\n\n\n4300.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.6\n\n\n\n15.0\n\n\n\n216.0\n\n\n\n4750.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.5\n\n\n\n15.9\n\n\n\n222.0\n\n\n\n5550.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n43.6\n\n\n\n13.9\n\n\n\n217.0\n\n\n\n4900.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.5\n\n\n\n13.9\n\n\n\n210.0\n\n\n\n4200.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.5\n\n\n\n15.9\n\n\n\n225.0\n\n\n\n5400.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n44.9\n\n\n\n13.3\n\n\n\n213.0\n\n\n\n5100.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.2\n\n\n\n15.8\n\n\n\n215.0\n\n\n\n5300.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.6\n\n\n\n14.2\n\n\n\n210.0\n\n\n\n4850.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.5\n\n\n\n14.1\n\n\n\n220.0\n\n\n\n5300.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.1\n\n\n\n14.4\n\n\n\n210.0\n\n\n\n4400.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.1\n\n\n\n15.0\n\n\n\n225.0\n\n\n\n5000.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.5\n\n\n\n14.4\n\n\n\n217.0\n\n\n\n4900.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.0\n\n\n\n15.4\n\n\n\n220.0\n\n\n\n5050.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n43.8\n\n\n\n13.9\n\n\n\n208.0\n\n\n\n4300.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.5\n\n\n\n15.0\n\n\n\n220.0\n\n\n\n5000.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n43.2\n\n\n\n14.5\n\n\n\n208.0\n\n\n\n4450.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.4\n\n\n\n15.3\n\n\n\n224.0\n\n\n\n5550.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.3\n\n\n\n13.8\n\n\n\n208.0\n\n\n\n4200.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.2\n\n\n\n14.9\n\n\n\n221.0\n\n\n\n5300.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.7\n\n\n\n13.9\n\n\n\n214.0\n\n\n\n4400.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n54.3\n\n\n\n15.7\n\n\n\n231.0\n\n\n\n5650.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.8\n\n\n\n14.2\n\n\n\n219.0\n\n\n\n4700.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.8\n\n\n\n16.8\n\n\n\n230.0\n\n\n\n5700.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.2\n\n\n\n14.4\n\n\n\n214.0\n\n\n\n4650.0\n\n\n\nNaN\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.5\n\n\n\n16.2\n\n\n\n229.0\n\n\n\n5800.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n43.5\n\n\n\n14.2\n\n\n\n220.0\n\n\n\n4700.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.7\n\n\n\n15.0\n\n\n\n223.0\n\n\n\n5550.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.7\n\n\n\n15.0\n\n\n\n216.0\n\n\n\n4750.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.4\n\n\n\n15.6\n\n\n\n221.0\n\n\n\n5000.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.2\n\n\n\n15.6\n\n\n\n221.0\n\n\n\n5100.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.5\n\n\n\n14.8\n\n\n\n217.0\n\n\n\n5200.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.4\n\n\n\n15.0\n\n\n\n216.0\n\n\n\n4700.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.6\n\n\n\n16.0\n\n\n\n230.0\n\n\n\n5800.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.5\n\n\n\n14.2\n\n\n\n209.0\n\n\n\n4600.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n51.1\n\n\n\n16.3\n\n\n\n220.0\n\n\n\n6000.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.2\n\n\n\n13.8\n\n\n\n215.0\n\n\n\n4750.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.2\n\n\n\n16.4\n\n\n\n223.0\n\n\n\n5950.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.1\n\n\n\n14.5\n\n\n\n212.0\n\n\n\n4625.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n52.5\n\n\n\n15.6\n\n\n\n221.0\n\n\n\n5450.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.4\n\n\n\n14.6\n\n\n\n212.0\n\n\n\n4725.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.0\n\n\n\n15.9\n\n\n\n224.0\n\n\n\n5350.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n44.9\n\n\n\n13.8\n\n\n\n212.0\n\n\n\n4750.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.8\n\n\n\n17.3\n\n\n\n228.0\n\n\n\n5600.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n43.4\n\n\n\n14.4\n\n\n\n218.0\n\n\n\n4600.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n51.3\n\n\n\n14.2\n\n\n\n218.0\n\n\n\n5300.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.5\n\n\n\n14.0\n\n\n\n212.0\n\n\n\n4875.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n52.1\n\n\n\n17.0\n\n\n\n230.0\n\n\n\n5550.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.5\n\n\n\n15.0\n\n\n\n218.0\n\n\n\n4950.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n52.2\n\n\n\n17.1\n\n\n\n228.0\n\n\n\n5400.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.5\n\n\n\n14.5\n\n\n\n212.0\n\n\n\n4750.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.5\n\n\n\n16.1\n\n\n\n224.0\n\n\n\n5650.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n44.5\n\n\n\n14.7\n\n\n\n214.0\n\n\n\n4850.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.8\n\n\n\n15.7\n\n\n\n226.0\n\n\n\n5200.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.4\n\n\n\n15.8\n\n\n\n216.0\n\n\n\n4925.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.9\n\n\n\n14.6\n\n\n\n222.0\n\n\n\n4875.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.4\n\n\n\n14.4\n\n\n\n203.0\n\n\n\n4625.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n51.1\n\n\n\n16.5\n\n\n\n225.0\n\n\n\n5250.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.5\n\n\n\n15.0\n\n\n\n219.0\n\n\n\n4850.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n55.9\n\n\n\n17.0\n\n\n\n228.0\n\n\n\n5600.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.2\n\n\n\n15.5\n\n\n\n215.0\n\n\n\n4975.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.1\n\n\n\n15.0\n\n\n\n228.0\n\n\n\n5500.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.3\n\n\n\n13.8\n\n\n\n216.0\n\n\n\n4725.0\n\n\n\nNaN\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.8\n\n\n\n16.1\n\n\n\n215.0\n\n\n\n5500.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n41.7\n\n\n\n14.7\n\n\n\n210.0\n\n\n\n4700.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n53.4\n\n\n\n15.8\n\n\n\n219.0\n\n\n\n5500.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n43.3\n\n\n\n14.0\n\n\n\n208.0\n\n\n\n4575.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.1\n\n\n\n15.1\n\n\n\n209.0\n\n\n\n5500.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.5\n\n\n\n15.2\n\n\n\n216.0\n\n\n\n5000.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.8\n\n\n\n15.9\n\n\n\n229.0\n\n\n\n5950.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n43.5\n\n\n\n15.2\n\n\n\n213.0\n\n\n\n4650.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n51.5\n\n\n\n16.3\n\n\n\n230.0\n\n\n\n5500.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.2\n\n\n\n14.1\n\n\n\n217.0\n\n\n\n4375.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n55.1\n\n\n\n16.0\n\n\n\n230.0\n\n\n\n5850.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n44.5\n\n\n\n15.7\n\n\n\n217.0\n\n\n\n4875.0\n\n\n\nNaN\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n48.8\n\n\n\n16.2\n\n\n\n222.0\n\n\n\n6000.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n47.2\n\n\n\n13.7\n\n\n\n214.0\n\n\n\n4925.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\nNaN\n\n\n\nNaN\n\n\n\nNaN\n\n\n\nNaN\n\n\n\nNaN\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n46.8\n\n\n\n14.3\n\n\n\n215.0\n\n\n\n4850.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n50.4\n\n\n\n15.7\n\n\n\n222.0\n\n\n\n5750.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n45.2\n\n\n\n14.8\n\n\n\n212.0\n\n\n\n5200.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nGentoo\n\n\n\nBiscoe\n\n\n\n49.9\n\n\n\n16.1\n\n\n\n213.0\n\n\n\n5400.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.5\n\n\n\n17.9\n\n\n\n192.0\n\n\n\n3500.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.0\n\n\n\n19.5\n\n\n\n196.0\n\n\n\n3900.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n51.3\n\n\n\n19.2\n\n\n\n193.0\n\n\n\n3650.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n45.4\n\n\n\n18.7\n\n\n\n188.0\n\n\n\n3525.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n52.7\n\n\n\n19.8\n\n\n\n197.0\n\n\n\n3725.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n45.2\n\n\n\n17.8\n\n\n\n198.0\n\n\n\n3950.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.1\n\n\n\n18.2\n\n\n\n178.0\n\n\n\n3250.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n51.3\n\n\n\n18.2\n\n\n\n197.0\n\n\n\n3750.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.0\n\n\n\n18.9\n\n\n\n195.0\n\n\n\n4150.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n51.3\n\n\n\n19.9\n\n\n\n198.0\n\n\n\n3700.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.6\n\n\n\n17.8\n\n\n\n193.0\n\n\n\n3800.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n51.7\n\n\n\n20.3\n\n\n\n194.0\n\n\n\n3775.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n47.0\n\n\n\n17.3\n\n\n\n185.0\n\n\n\n3700.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n52.0\n\n\n\n18.1\n\n\n\n201.0\n\n\n\n4050.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n45.9\n\n\n\n17.1\n\n\n\n190.0\n\n\n\n3575.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.5\n\n\n\n19.6\n\n\n\n201.0\n\n\n\n4050.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.3\n\n\n\n20.0\n\n\n\n197.0\n\n\n\n3300.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n58.0\n\n\n\n17.8\n\n\n\n181.0\n\n\n\n3700.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.4\n\n\n\n18.6\n\n\n\n190.0\n\n\n\n3450.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n49.2\n\n\n\n18.2\n\n\n\n195.0\n\n\n\n4400.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n42.4\n\n\n\n17.3\n\n\n\n181.0\n\n\n\n3600.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n48.5\n\n\n\n17.5\n\n\n\n191.0\n\n\n\n3400.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n43.2\n\n\n\n16.6\n\n\n\n187.0\n\n\n\n2900.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.6\n\n\n\n19.4\n\n\n\n193.0\n\n\n\n3800.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.7\n\n\n\n17.9\n\n\n\n195.0\n\n\n\n3300.0\n\n\n\nfemale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n52.0\n\n\n\n19.0\n\n\n\n197.0\n\n\n\n4150.0\n\n\n\nmale\n\n\n\n2007\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.5\n\n\n\n18.4\n\n\n\n200.0\n\n\n\n3400.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n49.5\n\n\n\n19.0\n\n\n\n200.0\n\n\n\n3800.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.4\n\n\n\n17.8\n\n\n\n191.0\n\n\n\n3700.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n52.8\n\n\n\n20.0\n\n\n\n205.0\n\n\n\n4550.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n40.9\n\n\n\n16.6\n\n\n\n187.0\n\n\n\n3200.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n54.2\n\n\n\n20.8\n\n\n\n201.0\n\n\n\n4300.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n42.5\n\n\n\n16.7\n\n\n\n187.0\n\n\n\n3350.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n51.0\n\n\n\n18.8\n\n\n\n203.0\n\n\n\n4100.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n49.7\n\n\n\n18.6\n\n\n\n195.0\n\n\n\n3600.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n47.5\n\n\n\n16.8\n\n\n\n199.0\n\n\n\n3900.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n47.6\n\n\n\n18.3\n\n\n\n195.0\n\n\n\n3850.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n52.0\n\n\n\n20.7\n\n\n\n210.0\n\n\n\n4800.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.9\n\n\n\n16.6\n\n\n\n192.0\n\n\n\n2700.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n53.5\n\n\n\n19.9\n\n\n\n205.0\n\n\n\n4500.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n49.0\n\n\n\n19.5\n\n\n\n210.0\n\n\n\n3950.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.2\n\n\n\n17.5\n\n\n\n187.0\n\n\n\n3650.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.9\n\n\n\n19.1\n\n\n\n196.0\n\n\n\n3550.0\n\n\n\nmale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n45.5\n\n\n\n17.0\n\n\n\n196.0\n\n\n\n3500.0\n\n\n\nfemale\n\n\n\n2008\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.9\n\n\n\n17.9\n\n\n\n196.0\n\n\n\n3675.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.8\n\n\n\n18.5\n\n\n\n201.0\n\n\n\n4450.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.1\n\n\n\n17.9\n\n\n\n190.0\n\n\n\n3400.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n49.0\n\n\n\n19.6\n\n\n\n212.0\n\n\n\n4300.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n51.5\n\n\n\n18.7\n\n\n\n187.0\n\n\n\n3250.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n49.8\n\n\n\n17.3\n\n\n\n198.0\n\n\n\n3675.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n48.1\n\n\n\n16.4\n\n\n\n199.0\n\n\n\n3325.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n51.4\n\n\n\n19.0\n\n\n\n201.0\n\n\n\n3950.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n45.7\n\n\n\n17.3\n\n\n\n193.0\n\n\n\n3600.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.7\n\n\n\n19.7\n\n\n\n203.0\n\n\n\n4050.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n42.5\n\n\n\n17.3\n\n\n\n187.0\n\n\n\n3350.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n52.2\n\n\n\n18.8\n\n\n\n197.0\n\n\n\n3450.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n45.2\n\n\n\n16.6\n\n\n\n191.0\n\n\n\n3250.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n49.3\n\n\n\n19.9\n\n\n\n203.0\n\n\n\n4050.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.2\n\n\n\n18.8\n\n\n\n202.0\n\n\n\n3800.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n45.6\n\n\n\n19.4\n\n\n\n194.0\n\n\n\n3525.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n51.9\n\n\n\n19.5\n\n\n\n206.0\n\n\n\n3950.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n46.8\n\n\n\n16.5\n\n\n\n189.0\n\n\n\n3650.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n45.7\n\n\n\n17.0\n\n\n\n195.0\n\n\n\n3650.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n55.8\n\n\n\n19.8\n\n\n\n207.0\n\n\n\n4000.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n43.5\n\n\n\n18.1\n\n\n\n202.0\n\n\n\n3400.0\n\n\n\nfemale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n49.6\n\n\n\n18.2\n\n\n\n193.0\n\n\n\n3775.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.8\n\n\n\n19.0\n\n\n\n210.0\n\n\n\n4100.0\n\n\n\nmale\n\n\n\n2009\n\n\n\n\n\n\n\nChinstrap\n\n\n\nDream\n\n\n\n50.2\n\n\n\n18.7\n\n\n\n198.0\n\n\n\n3775.0\n\n\n\nfemale\n\n\n\n2009"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#tables-from-code-1",
    "href": "1-2-documents/1-2-documents-reveal.html#tables-from-code-1",
    "title": "Documents",
    "section": "Tables from code",
    "text": "Tables from code\nIf you want fancier tables, try the great_tables package and all that it offers!\n\n\nimport great_tables as gt\n\n(\n    gt.GT(penguins.head())\n    .tab_style(\n        style = [\n            gt.style.fill(color = \"pink\"),\n            gt.style.text(weight = \"italic\")\n        ],\n        locations = gt.loc.body(\n          columns= \"bill_length_mm\",\n          rows = lambda x: x[\"bill_length_mm\"] &gt; 40\n        )\n    )\n)\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\nAdelie\nTorgersen\n\n\n\n\n\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#markdown-figures",
    "href": "1-2-documents/1-2-documents-reveal.html#markdown-figures",
    "title": "Documents",
    "section": "Markdown figures",
    "text": "Markdown figures\nMarkdown syntax:\n![Penguins playing with a Quarto ball](images/penguins-quarto-ball.png)\nOutput:\n\nPenguins playing with a Quarto ball"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#markdown-figures-with-options",
    "href": "1-2-documents/1-2-documents-reveal.html#markdown-figures-with-options",
    "title": "Documents",
    "section": "Markdown figures with options",
    "text": "Markdown figures with options\nMarkdown syntax:\n![Penguins playing with a Quarto ball](images/penguins-quarto-ball.png){fig-align=\"left\"}\nOutput:\n\nPenguins playing with a Quarto ball"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#markdown-figures-with-options-1",
    "href": "1-2-documents/1-2-documents-reveal.html#markdown-figures-with-options-1",
    "title": "Documents",
    "section": "Markdown figures with options",
    "text": "Markdown figures with options\nMarkdown syntax:\n![](images/penguins-quarto-ball.png){height=\"100px\" fig-alt=\"Illustration of two penguins playing with a Quarto ball.\"}\nOutput:"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#subfigures",
    "href": "1-2-documents/1-2-documents-reveal.html#subfigures",
    "title": "Documents",
    "section": "Subfigures",
    "text": "Subfigures\nMarkdown syntax:\n::: {#fig-penguins layout-ncol=2}\n\n![Blue penguin](images/blue-penguin.png){#fig-blue height=\"150px\"}\n\n![Orange penguin](images/orange-penguin.png){#fig-orange height=\"150px\"}\n\nTwo penguins\n:::\nOutput:\n\n\n\n\n\n\n\n\n\n\n\n(a) Blue penguin\n\n\n\n\n\n\n\n\n\n\n\n(b) Orange penguin\n\n\n\n\n\n\n\nFigure 1: Two penguins"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#figure-divs",
    "href": "1-2-documents/1-2-documents-reveal.html#figure-divs",
    "title": "Documents",
    "section": "Figure divs",
    "text": "Figure divs\nMarkdown syntax:\n::: {#fig-penguin}\n&lt;iframe width=\"420\" height=\"237\" src=\"https://www.youtube.com/embed/q3uXXh1sHcI\"&gt;&lt;/iframe&gt;\n\nBaby penguin tries to make friends\n:::\nOutput:\n\n\n\n\n\n\n\nFigure 2: Baby penguin tries to make friends"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#figures-from-code",
    "href": "1-2-documents/1-2-documents-reveal.html#figures-from-code",
    "title": "Documents",
    "section": "Figures from code",
    "text": "Figures from code\n\n```{python}\nimport plotnine as p9\n\n(\n  p9.ggplot(penguins, p9.aes(x = \"species\", fill = \"species\")) \n  + p9.geom_bar(show_legend = None)\n)\n```"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#cross-references-1",
    "href": "1-2-documents/1-2-documents-reveal.html#cross-references-1",
    "title": "Documents",
    "section": "Cross references",
    "text": "Cross references\n\nHelp readers to navigate your document with numbered references and hyperlinks to entities like figures and tables.\nCross referencing steps:\n\nAdd a caption to your figure or table.\nGive an id to your figure or table, starting with fig- or tbl-.\nRefer to it with @fig-... or @tbl-...."
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#figure-cross-references",
    "href": "1-2-documents/1-2-documents-reveal.html#figure-cross-references",
    "title": "Documents",
    "section": "Figure cross references",
    "text": "Figure cross references\nThe presence of the caption (Blue penguin) and label (#fig-blue-penguin) make this figure referenceable:\nMarkdown syntax:\nSee @fig-blue-penguin for a cute blue penguin.\n\n![Blue penguin](images/blue-penguin.png){#fig-blue-penguin height=200px}\nOutput:\nSee Figure 3 for a cute blue penguin.\n\n\n\n\n\n\nFigure 3: Blue penguin"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#table-cross-references",
    "href": "1-2-documents/1-2-documents-reveal.html#table-cross-references",
    "title": "Documents",
    "section": "Table cross references",
    "text": "Table cross references\nThe presence of the caption (A few penguins) and label (#tbl-penguins) make this table referenceable:\nMarkdown syntax:\nSee @tbl-penguins for data on a few penguins.\n\n```{python}\n#| label: tbl-penguins\n#| tbl-cap: A few penguins\ngt.GT(penguins.head())\n```\nOutput:\nSee Table 1 for data on a few penguins.\n\ngt.GT(penguins.head())\n\n\n\nTable 1: A few penguins\n\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\nAdelie\nTorgersen\n\n\n\n\n\n2007\n\n\nAdelie\nTorgersen\n36.7\n19.3\n193.0\n3450.0\nfemale\n2007"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#your-turn-3",
    "href": "1-2-documents/1-2-documents-reveal.html#your-turn-3",
    "title": "Documents",
    "section": "Your turn",
    "text": "Your turn\n\n\nOpen tables-figures.qmd.\nFollow the instructions in the document, then exchange one new thing you’ve learned with your neighbor.\n\n\n\n  \n    −\n    +\n \n 10:00"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#learn-more",
    "href": "1-2-documents/1-2-documents-reveal.html#learn-more",
    "title": "Documents",
    "section": "Learn more",
    "text": "Learn more\n\nquarto.org/docs/guide &gt; Documents"
  },
  {
    "objectID": "1-2-documents/1-2-documents-reveal.html#questions",
    "href": "1-2-documents/1-2-documents-reveal.html#questions",
    "title": "Documents",
    "section": "Questions",
    "text": "Questions\n\nAny questions / anything you’d like to review before we wrap up this module?\n\n\n\n\n\n🔗 bit.ly/quarto-GT-pyopensci"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#simplest",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#simplest",
    "title": "Manuscripts",
    "section": "Simplest",
    "text": "Simplest\nCan run all code in a single file, and don’t mind running it over and over again with each edit.\n\n\n\n \n\n\n\n \n\n\n\n\n\n\n\ne.g. Data Science 101 - HW 1, Stat 101 - Final project, a blog post, a tutorial, a not-too-extensive consulting report, etc."
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#simple",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#simple",
    "title": "Manuscripts",
    "section": "Simple",
    "text": "Simple\nCan run all code in a single file, and don’t mind running it over and over again with each edit, and need an output that conforms to journal style.\n\n\n\n \n+ Quarto Journal Articles Extension\n\n\n\n \n\n\n\n or \n\n\nformatted with journal style\n\n\n\ne.g., a not-too-computational journal article."
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#but-science-is-rarely-simple",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#but-science-is-rarely-simple",
    "title": "Manuscripts",
    "section": "but science is rarely simple…",
    "text": "but science is rarely simple…\n\n\nmultiple collaborators, each with their favorite computing language and code editor\nmultiple stages of a project, each with their own level of feasibility of what can be re-run with each edit and what needs to be cached"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#more-complex",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#more-complex",
    "title": "Manuscripts",
    "section": "More complex",
    "text": "More complex\n\n\n\n\n\n\n\n\n   \n\n\n\n\n \n\n\n\n or"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#even-more-complex",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#even-more-complex",
    "title": "Manuscripts",
    "section": "Even more complex",
    "text": "Even more complex\n\n\n\n\n      \n \n\n\n\n \n\n\n\n or"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#aside-what-is-in-a-notebook",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#aside-what-is-in-a-notebook",
    "title": "Manuscripts",
    "section": "Aside: What is in a notebook?",
    "text": "Aside: What is in a notebook?\nA notebook is a document that contains both code and narrative:\n\nJupyter notebooks (.ipynb)\nQuarto documents (.qmd) – a potential mindshift"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#current-state-of-affairs",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#current-state-of-affairs",
    "title": "Manuscripts",
    "section": "Current state of affairs",
    "text": "Current state of affairs\nMost computational science is born in notebooks\n\n\nPeer-review and publication workflows don’t support notebooks as research outputs\nThe more complex scenarios involve a lot of manual finagling to bring the project to journal submission stage\nOften during this process reproducibility is lost, or takes second seat to the formatting requirements\nFinal submission rarely captures all computations, which are, at best, relegated to supplementary materials\n\n\nand dies ends in PDF or Word documents"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#roadmap-to-fully-reproducible-scientific-manuscripts",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#roadmap-to-fully-reproducible-scientific-manuscripts",
    "title": "Manuscripts",
    "section": "Roadmap to fully reproducible scientific manuscripts",
    "text": "Roadmap to fully reproducible scientific manuscripts\nthat are not just PDFs that are the outputs of a single qmd file\n\n An end-to-end scholarly publishing workflow that treats Jupyter and Quarto notebooks as a primary element of the scientific record.\n\n\n A publication process that elevates transparent and reproducible work by authors, where data and software, together with narrative, are documented, shared, and archived.\n\n\n New forms of credit to the wider research community, including research software engineers or rsearch software engineers."
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#quarto-can",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#quarto-can",
    "title": "Manuscripts",
    "section": "Quarto can…",
    "text": "Quarto can…\n\n\nbe authored in your favorite code editor\nrender from qmd or Jupyter notebook to PDF, Word, HTML, etc.\nexecute code in Python, R, and more\napply journal styles to your outputs with Quarto extensions\npublish to GitHub Pages, Netlify, and more\norchestrate multiple inputs and outputs with embedded computing using a new Quarto project type: manuscript"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#quarto-manuscript",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#quarto-manuscript",
    "title": "Manuscripts",
    "section": "Quarto manuscript",
    "text": "Quarto manuscript\nQuarto manuscripts, in addition to doing everything you can do with journal articles, can\n\nproduce manuscripts in multiple formats (including LaTeX or MS Word formats required by journals), and give readers easy access to all of the formats through a website\npublish computations from one or more notebooks alongside the manuscript, allowing readers to dive into your code and view it or interact with it in a virtual environment"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#getting-started",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#getting-started",
    "title": "Manuscripts",
    "section": "Getting started",
    "text": "Getting started\n\nApproach 1: Start from scratch\n\nCreating a Quarto manuscript\n\nVS Code: In the Command Palette – Quarto: Create Project &gt; Manuscript Project\nquarto create project manuscript &lt;name&gt;\n\nAdd manuscript content\n\nApproach 2: Start with a sample from https://github.com/quarto-ext/manuscript-template-vscode\n\n\n\n\n\n\n\nManuscripts ♥️ Git + GitHub\n\n\nTrack your project with Git and host on GitHub for easy publishing."
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#a-finished-product",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#a-finished-product",
    "title": "Manuscripts",
    "section": "A finished product",
    "text": "A finished product"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#multiple-formats-from-one-source",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#multiple-formats-from-one-source",
    "title": "Manuscripts",
    "section": "Multiple formats from one source",
    "text": "Multiple formats from one source"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#multiple-formats-from-one-source-1",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#multiple-formats-from-one-source-1",
    "title": "Manuscripts",
    "section": "Multiple formats from one source",
    "text": "Multiple formats from one source\nIn quarto.yml of the project:\n---\nformat:\n  html:\n    theme: cosmo\n    toc-location: left\n    comments: \n      hypothesis: true\n    citations-hover: true\n    crossrefs-hover: true\n  agu-pdf: default\n  docx: default\n  jats: default\n---"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#rich-front-matter",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#rich-front-matter",
    "title": "Manuscripts",
    "section": "Rich front matter",
    "text": "Rich front matter\nIn index.qmd of the project:\n---\ntitle: La Palma Earthquakes\nauthor:\n  - name: Steve Purves\n    orcid: 0000-0002-0760-5497\n    corresponding: true\n    email: steve@curvenote.com\n    roles:\n      - Investigation\n      - Project administration\n      - Software\n      - Visualization\n    affiliations:\n      - Curvenote\n  - name: Rowan Cockett\n    orcid: 0000-0002-7859-8394\n    corresponding: false\n    roles: []\n    affiliations:\n      - Curvenote\nlicense: CC BY-SA 4.0\nkeywords:\n  - La Palma\n  - Earthquakes\ndate: '2022-05-11'\nabstract: |\n  In September 2021, a significant jump in seismic activity on the island of La Palma (Canary Islands, Spain) signaled the start of a volcanic crisis that still continues at the time of writing. Earthquake data is continually collected and published by the Instituto Geográphico Nacional (IGN). We have created an accessible dataset from this and completed preliminary data analysis which shows seismicity originating at two distinct depths, consistent with the model of a two reservoir system feeding the currently very active volcano.\nkeypoints:\n  - You may specify 1 to 3 keypoints for this PDF template\n  - These keypoints are complete sentences and less than or equal to 140 characters\n  - 'They are specific to this PDF template, so they will not appear in other exports'\ncitation:\n  container-title: Notebooks Now!\ndraft: false\nbibliography: references.bib\necho: false\n---"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#rich-front-matter-1",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#rich-front-matter-1",
    "title": "Manuscripts",
    "section": "Rich front matter",
    "text": "Rich front matter\nfrom source \\(\\rightarrow\\) only relevant / required metadata in manuscript:"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#rich-front-matter-2",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#rich-front-matter-2",
    "title": "Manuscripts",
    "section": "Rich front matter",
    "text": "Rich front matter\nfrom source \\(\\rightarrow\\) only relevant / required metadata in manuscript:"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#embedded-computations",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#embedded-computations",
    "title": "Manuscripts",
    "section": "Embedded computations",
    "text": "Embedded computations\n\nPerform computation in a labelled code cell in a notebook, in any language\nEmbed results of the computation with a link to the notebook with\n\n{{&lt; embed name-of-notebook.qmd#fig-cell-label &gt;}}\n{{&lt; embed name-of-notebook.ipynd#tbl-cell-label &gt;}}\n\nSee example at https://github.com/quarto-ext/manuscript-template-vscode/blob/main/index.qmd."
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#actually-dive-into-the-code",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#actually-dive-into-the-code",
    "title": "Manuscripts",
    "section": "Actually dive into the code",
    "text": "Actually dive into the code\n\nWe’ve seen that you can peruse the code underlying the figures and tables in the manuscript\nWhat if you wanted to interact with the code – in a computational environment that’s just a click away and that has all the software and packages needed to reproduce the manuscript?"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#binder-with-quarto",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#binder-with-quarto",
    "title": "Manuscripts",
    "section": "Binder with Quarto",
    "text": "Binder with Quarto\nwith quarto use binder:"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#binder-with-quarto-1",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#binder-with-quarto-1",
    "title": "Manuscripts",
    "section": "Binder with Quarto",
    "text": "Binder with Quarto"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#learn-more",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#learn-more",
    "title": "Manuscripts",
    "section": "Learn more",
    "text": "Learn more\n\nquarto.org/docs/manuscripts"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#questions",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#questions",
    "title": "Manuscripts",
    "section": "Questions",
    "text": "Questions\n\nAny questions / anything you’d like to review before we wrap up this module?"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#learning-more",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#learning-more",
    "title": "Manuscripts",
    "section": "Learning more",
    "text": "Learning more\nhttps://quarto.org"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#follow-up-with",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#follow-up-with",
    "title": "Manuscripts",
    "section": "Follow up with…",
    "text": "Follow up with…\nthe Quarto Blog: https://quarto.org/docs/blog"
  },
  {
    "objectID": "2-3-manuscripts/2-3-manuscripts-reveal.html#thank-you",
    "href": "2-3-manuscripts/2-3-manuscripts-reveal.html#thank-you",
    "title": "Manuscripts",
    "section": "Thank you!",
    "text": "Thank you!\n🐘 https://fosstodon.org/@minecr\n☁️ @minecr.bsky.social\n\n\n\n\n🔗 bit.ly/quarto-scipy24"
  },
  {
    "objectID": "1-3-5-great-tables/01-primers/02-create-modify-parts.html",
    "href": "1-3-5-great-tables/01-primers/02-create-modify-parts.html",
    "title": "Adding or Modifying Parts of a Table",
    "section": "",
    "text": "A GT table can contain a few useful parts for conveying additional information. These include a header (with a titles and subtitle), a footer (with source notes), and additional areas for labels (row group labels, column spanner labels, the stubhead label). We can modify the look of table parts more generally with tab_options() and perform styling on targeted table locations with tab_style().\n\n\n\n\ntab_header()\ntab_stubhead()\ntab_spanner()\ntab_source_note()\ntab_style()\ntab_options()\n\nHelpers for transforming text:\n\nmd()\nhtml()\n\nHelpers for targeting locations (for tab_style()):\n\nloc\nstyle\n\n\n\n\n\ntab_header(\n  data,\n  title,\n  subtitle = None\n)\nWe can add a table header to the GT table with a title and optionally a subtitle. A table header is an optional table part that is positioned above the column labels. We have the flexibility to use Markdown or HTML formatting for the header’s title and subtitle (with md() or html()).\n\n\nUse gtcars to create a GT table; add a header part to contain a title and subtitle.\n\n!pip install great_tables\n!pip install polars\n!pip install selenium\n\nRequirement already satisfied: great_tables in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (0.13.0)\nRequirement already satisfied: commonmark&gt;=0.9.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (0.9.1)\nRequirement already satisfied: htmltools&gt;=0.4.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (0.6.0)\nRequirement already satisfied: importlib-metadata in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (8.5.0)\nRequirement already satisfied: typing-extensions&gt;=3.10.0.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (4.10.0)\nRequirement already satisfied: numpy&gt;=1.22.4 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (1.26.4)\nRequirement already satisfied: Babel&gt;=2.13.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (2.14.0)\nRequirement already satisfied: importlib-resources in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (6.4.5)\nRequirement already satisfied: packaging&gt;=20.9 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from htmltools&gt;=0.4.1-&gt;great_tables) (23.2)\nRequirement already satisfied: zipp&gt;=3.20 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from importlib-metadata-&gt;great_tables) (3.20.2)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nRequirement already satisfied: polars in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (1.12.0)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nCollecting selenium\n  Downloading selenium-4.26.1-py3-none-any.whl.metadata (7.1 kB)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.26 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from urllib3[socks]&lt;3,&gt;=1.26-&gt;selenium) (2.2.1)\nCollecting trio~=0.17 (from selenium)\n  Downloading trio-0.27.0-py3-none-any.whl.metadata (8.6 kB)\nCollecting trio-websocket~=0.9 (from selenium)\n  Downloading trio_websocket-0.11.1-py3-none-any.whl.metadata (4.7 kB)\nRequirement already satisfied: certifi&gt;=2021.10.8 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (2024.2.2)\nRequirement already satisfied: typing_extensions~=4.9 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (4.10.0)\nCollecting websocket-client~=1.8 (from selenium)\n  Downloading websocket_client-1.8.0-py3-none-any.whl.metadata (8.0 kB)\nRequirement already satisfied: attrs&gt;=23.2.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (23.2.0)\nCollecting sortedcontainers (from trio~=0.17-&gt;selenium)\n  Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)\nRequirement already satisfied: idna in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (3.6)\nCollecting outcome (from trio~=0.17-&gt;selenium)\n  Downloading outcome-1.3.0.post0-py2.py3-none-any.whl.metadata (2.6 kB)\nRequirement already satisfied: sniffio&gt;=1.3.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (1.3.1)\nCollecting wsproto&gt;=0.14 (from trio-websocket~=0.9-&gt;selenium)\n  Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)\nCollecting pysocks!=1.5.7,&lt;2.0,&gt;=1.5.6 (from urllib3[socks]&lt;3,&gt;=1.26-&gt;selenium)\n  Downloading PySocks-1.7.1-py3-none-any.whl.metadata (13 kB)\nRequirement already satisfied: h11&lt;1,&gt;=0.9.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from wsproto&gt;=0.14-&gt;trio-websocket~=0.9-&gt;selenium) (0.14.0)\nDownloading selenium-4.26.1-py3-none-any.whl (9.7 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.0/9.7 MB ? eta -:--:--   ━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.0/9.7 MB 10.7 MB/s eta 0:00:01   ━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━ 3.9/9.7 MB 10.9 MB/s eta 0:00:01   ━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━ 6.6/9.7 MB 11.7 MB/s eta 0:00:01   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸━━━━━━ 8.1/9.7 MB 10.9 MB/s eta 0:00:01   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 9.7/9.7 MB 10.3 MB/s eta 0:00:00\nDownloading trio-0.27.0-py3-none-any.whl (481 kB)\nDownloading trio_websocket-0.11.1-py3-none-any.whl (17 kB)\nDownloading websocket_client-1.8.0-py3-none-any.whl (58 kB)\nDownloading PySocks-1.7.1-py3-none-any.whl (16 kB)\nDownloading wsproto-1.2.0-py3-none-any.whl (24 kB)\nDownloading outcome-1.3.0.post0-py2.py3-none-any.whl (10 kB)\nDownloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)\nInstalling collected packages: sortedcontainers, wsproto, websocket-client, pysocks, outcome, trio, trio-websocket, selenium\n  Attempting uninstall: websocket-client\n    Found existing installation: websocket-client 1.7.0\n    Uninstalling websocket-client-1.7.0:\n      Successfully uninstalled websocket-client-1.7.0\nSuccessfully installed outcome-1.3.0.post0 pysocks-1.7.1 selenium-4.26.1 sortedcontainers-2.4.0 trio-0.27.0 trio-websocket-0.11.1 websocket-client-1.8.0 wsproto-1.2.0\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\n\n\n\nfrom great_tables import GT, md\nfrom great_tables.data import exibble, gtcars\nimport polars as pl\n\ngtcars_mini = (\n  pl.from_pandas(gtcars)\n  .select([\"mfr\", \"model\", \"msrp\"])\n  .head(5)\n)\n\n(\n  GT(gtcars_mini)\n  .tab_header(\n    title=md(\"Data listing from **gtcars**\"),\n    subtitle=md(\"`gtcars` is an R dataset\")\n  )\n)\n\n\n\n\n\n\n  \n    Data listing from gtcars\n  \n  \n    gtcars is an R dataset\n  \n\n  mfr\n  model\n  msrp\n\n\n\n  \n    Ford\n    GT\n    447000.0\n  \n  \n    Ferrari\n    458 Speciale\n    291744.0\n  \n  \n    Ferrari\n    458 Spider\n    263553.0\n  \n  \n    Ferrari\n    458 Italia\n    233509.0\n  \n  \n    Ferrari\n    488 GTB\n    245400.0\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_stubhead(\n  data,\n  label\n)\nAdd a label to the stubhead of a GT table. The stubhead is the lone element that is positioned left of the column labels, and above the stub. We have the flexibility to use Markdown formatting for the stubhead label with md(). Furthermore, if the table is intended for HTML output, we can use HTML for the stubhead label (with html()).\n\n\nUse gtcars to create a GT table. Add a stubhead label to describe what is in the stub.\n\ngtcars_mini = (\n  pl.from_pandas(gtcars)\n  .select([\"model\", \"year\", \"hp\", \"trq\"])\n  .head(5)\n)\n\n(\n  GT(gtcars_mini, rowname_col=\"model\")\n  .tab_stubhead(label=\"car\")\n)\n\n\n\n\n\n\n\n  car\n  year\n  hp\n  trq\n\n\n\n  \n    GT\n    2017.0\n    647.0\n    550.0\n  \n  \n    458 Speciale\n    2015.0\n    597.0\n    398.0\n  \n  \n    458 Spider\n    2015.0\n    562.0\n    398.0\n  \n  \n    458 Italia\n    2014.0\n    562.0\n    398.0\n  \n  \n    488 GTB\n    2016.0\n    661.0\n    561.0\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_spanner(\n  data,\n  label,\n  columns = None,\n  spanners = None,\n  level = None,\n  id = label,\n  gather = True,\n  replace = False\n)\nSet a spanner column label by mapping it to columns already in the table. This label is placed above one or more column labels, spanning the width of those columns and column labels.\n\n\nLet’s use the gtcars table, but cut it down to size first:\n\ngtcars_small = (\n  pl.from_pandas(gtcars)\n  .select([\n    \"model\", \"year\", \"bdy_style\", \"hp\", \"hp_rpm\",\n    \"trq\", \"trq_rpm\", \"mpg_c\", \"mpg_h\", \"msrp\"\n  ])\n  .head(5)\n)\n\ngtcars_small\n\n\nshape: (5, 10)modelyearbdy_stylehphp_rpmtrqtrq_rpmmpg_cmpg_hmsrpstrf64strf64f64f64f64f64f64f64\"GT\"2017.0\"coupe\"647.06250.0550.05900.011.018.0447000.0\"458 Speciale\"2015.0\"coupe\"597.09000.0398.06000.013.017.0291744.0\"458 Spider\"2015.0\"convertible\"562.09000.0398.06000.013.017.0263553.0\"458 Italia\"2014.0\"coupe\"562.09000.0398.06000.013.017.0233509.0\"488 GTB\"2016.0\"coupe\"661.08000.0561.03000.015.022.0245400.0\n\n\nLet’s look at the table in GT so that we know where we are starting from.\n\nGT(gtcars_small, rowname_col=\"model\")\n\n\n\n\n\n\n\n  \n  year\n  bdy_style\n  hp\n  hp_rpm\n  trq\n  trq_rpm\n  mpg_c\n  mpg_h\n  msrp\n\n\n\n  \n    GT\n    2017.0\n    coupe\n    647.0\n    6250.0\n    550.0\n    5900.0\n    11.0\n    18.0\n    447000.0\n  \n  \n    458 Speciale\n    2015.0\n    coupe\n    597.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    291744.0\n  \n  \n    458 Spider\n    2015.0\n    convertible\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    263553.0\n  \n  \n    458 Italia\n    2014.0\n    coupe\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    233509.0\n  \n  \n    488 GTB\n    2016.0\n    coupe\n    661.0\n    8000.0\n    561.0\n    3000.0\n    15.0\n    22.0\n    245400.0\n  \n\n\n\n\n\n\n        \n\n\nUse gtcars to create a GT table; Group several columns related to car performance under a spanner column with the label performance.\n\n(\n  GT(gtcars_small, rowname_col = \"model\")\n  .tab_spanner(\n    label=\"performance\",\n    columns=[\"hp\", \"hp_rpm\", \"trq\", \"trq_rpm\", \"mpg_c\", \"mpg_h\"]\n  )\n)\n\n\n\n\n\n\n\n  \n  year\n  bdy_style\n  \n    performance\n  \n  msrp\n\n\n  hp\n  hp_rpm\n  trq\n  trq_rpm\n  mpg_c\n  mpg_h\n\n\n\n  \n    GT\n    2017.0\n    coupe\n    647.0\n    6250.0\n    550.0\n    5900.0\n    11.0\n    18.0\n    447000.0\n  \n  \n    458 Speciale\n    2015.0\n    coupe\n    597.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    291744.0\n  \n  \n    458 Spider\n    2015.0\n    convertible\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    263553.0\n  \n  \n    458 Italia\n    2014.0\n    coupe\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    233509.0\n  \n  \n    488 GTB\n    2016.0\n    coupe\n    661.0\n    8000.0\n    561.0\n    3000.0\n    15.0\n    22.0\n    245400.0\n  \n\n\n\n\n\n\n        \n\n\nWith a few Polars selectors statements, we can get the same columns.\n\nimport polars.selectors as cs\n\n(\n  GT(gtcars_small, rowname_col = \"model\")\n  .tab_spanner(\n    label=\"performance\",\n    columns=[\n      cs.starts_with(\"hp\"),\n      cs.starts_with(\"trq\"),\n      cs.starts_with(\"mpg\")\n    ]\n  )\n)\n\n\n\n\n\n\n\n  \n  year\n  bdy_style\n  \n    performance\n  \n  msrp\n\n\n  hp\n  hp_rpm\n  trq\n  trq_rpm\n  mpg_c\n  mpg_h\n\n\n\n  \n    GT\n    2017.0\n    coupe\n    647.0\n    6250.0\n    550.0\n    5900.0\n    11.0\n    18.0\n    447000.0\n  \n  \n    458 Speciale\n    2015.0\n    coupe\n    597.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    291744.0\n  \n  \n    458 Spider\n    2015.0\n    convertible\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    263553.0\n  \n  \n    458 Italia\n    2014.0\n    coupe\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    233509.0\n  \n  \n    488 GTB\n    2016.0\n    coupe\n    661.0\n    8000.0\n    561.0\n    3000.0\n    15.0\n    22.0\n    245400.0\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_source_note(\n  data,\n  source_note\n)\nWe can add a source note to the footer part of any GT table. A source note is useful for citing the data included in the table. Several can be added, simply use multiple calls of tab_source_note() and they will be inserted in the order provided. We can use Markdown formatting for the note, or, if the table is intended for HTML output, we can include HTML formatting.\n\n\nUse exibble to create a GT table. Add a source note to the table footer that cites the data source.\n\n(\n  GT(exibble)\n  .tab_source_note(\n    source_note=\"The exibble dataset is available in the Great Tables package.\"\n  )\n)\n\n\n\n\n\n\n\n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n  row\n  group\n\n\n\n  \n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n    row_1\n    grp_a\n  \n  \n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n    row_2\n    grp_a\n  \n  \n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n    row_3\n    grp_a\n  \n  \n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n    row_4\n    grp_a\n  \n  \n    5550.0\n    \n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n    row_5\n    grp_b\n  \n  \n    \n    fig\n    six\n    2015-06-15\n    \n    2018-06-06 16:11\n    13.255\n    row_6\n    grp_b\n  \n  \n    777000.0\n    grapefruit\n    seven\n    \n    19:10\n    2018-07-07 05:22\n    \n    row_7\n    grp_b\n  \n  \n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    \n    0.44\n    row_8\n    grp_b\n  \n\n  \n  \n  \n    The exibble dataset is available in the Great Tables package.\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_style(\n  data,\n  style,\n  locations\n)\nWith the tab_style() method we can target specific cells and apply styles to them.\nThis is done with the help of the following style module and its methods:\n\nstyle.fill()\nstyle.text()\nstyle.borders()\n\nFor locations we use the loc methods. In the example below, we’ll use loc.body() along with a conditional statement in rows= to target cells based on data.\n\n\nChange the font of all body cells in the exibble table to Times New Roman. By default, using cells_body() without any arguments means all table body cells are targeted.\n\nfrom great_tables import loc, style\n\nexibble_mini = (\n  pl.from_pandas(exibble)\n  .select([\"num\", \"currency\"])\n)\n\n(\n  GT(exibble_mini)\n  .tab_style(\n    style=style.text(font=\"Times New Roman\"),\n    locations=loc.body()\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    0.1111\n    49.95\n  \n  \n    2.222\n    17.95\n  \n  \n    33.33\n    1.39\n  \n  \n    444.4\n    65100.0\n  \n  \n    5550.0\n    1325.81\n  \n  \n    None\n    13.255\n  \n  \n    777000.0\n    None\n  \n  \n    8880000.0\n    0.44\n  \n\n\n\n\n\n\n        \n\n\nUse a font from the Google Fonts service by using the google_font() method. Recommendations on some Google fonts can be found by using info_google_fonts().\n\nfrom great_tables import google_font\n\n(\n  GT(exibble_mini)\n  .fmt_currency(columns=\"currency\", currency=\"EUR\")\n  .tab_style(\n    style=style.text(font=google_font(\"IBM Plex Sans\"), weight=500),\n    locations=loc.body()\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    0.1111\n    €49.95\n  \n  \n    2.222\n    €17.95\n  \n  \n    33.33\n    €1.39\n  \n  \n    444.4\n    €65,100.00\n  \n  \n    5550.0\n    €1,325.81\n  \n  \n    None\n    €13.26\n  \n  \n    777000.0\n    None\n  \n  \n    8880000.0\n    €0.44\n  \n\n\n\n\n\n\n        \n\n\nUse exibble to create a GT table. Add styles that are to be applied to data cells that satisfy a condition (using tab_style()).\n\n(\n  GT(exibble_mini)\n  .fmt_number(columns=[\"num\", \"currency\"])\n  .tab_style(\n    style=[\n      style.fill(color=\"cyan\"),\n      style.text(weight=\"bold\")\n    ],\n    locations=loc.body(\n      columns=\"num\",\n      rows=pl.col(\"num\") &gt; 5000\n    )\n  )\n  .tab_style(\n    style=[\n      style.fill(color=\"#F9E3D6\"),\n      style.text(style=\"italic\")\n    ],\n    locations=loc.body(\n      columns=\"currency\",\n      rows=pl.col(\"currency\") &lt; 100\n    )\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    0.11\n    49.95\n  \n  \n    2.22\n    17.95\n  \n  \n    33.33\n    1.39\n  \n  \n    444.40\n    65,100.00\n  \n  \n    5,550.00\n    1,325.81\n  \n  \n    None\n    13.26\n  \n  \n    777,000.00\n    None\n  \n  \n    8,880,000.00\n    0.44\n  \n\n\n\n\n\n\n        \n\n\nUse sp500 to create a GT table. Color entire rows of cells based on values in a particular column.\n\nfrom great_tables.data import sp500\n\nsp500_mini = (\n  pl.from_pandas(sp500)\n  .filter(pl.col(\"date\") &gt;= \"2015-12-01\")\n  .filter(pl.col(\"date\") &lt;= \"2015-12-15\")\n  .drop([\"adj_close\", \"volume\"])\n)\n\n(\n  GT(sp500_mini)\n  .tab_style(\n    style = style.fill(color=\"lightgreen\"),\n    locations = loc.body(\n      rows = pl.col(\"close\") &gt; pl.col(\"open\")\n    )\n  )\n  .tab_style(\n    style = [\n      style.fill(color=\"tomato\"),\n      style.text(color=\"white\")\n    ],\n    locations = loc.body(\n      rows = pl.col(\"open\") &gt; pl.col(\"close\")\n    )\n  )\n)\n\n\n\n\n\n\n\n  date\n  open\n  high\n  low\n  close\n\n\n\n  \n    2015-12-15\n    2025.55\n    2053.8701\n    2025.55\n    2043.41\n  \n  \n    2015-12-14\n    2013.37\n    2022.92\n    1993.26\n    2021.9399\n  \n  \n    2015-12-11\n    2047.27\n    2047.27\n    2008.8\n    2012.37\n  \n  \n    2015-12-10\n    2047.9301\n    2067.6499\n    2045.67\n    2052.23\n  \n  \n    2015-12-09\n    2061.1699\n    2080.3301\n    2036.53\n    2047.62\n  \n  \n    2015-12-08\n    2073.3899\n    2073.8501\n    2052.3201\n    2063.5901\n  \n  \n    2015-12-07\n    2090.4199\n    2090.4199\n    2066.78\n    2077.0701\n  \n  \n    2015-12-04\n    2051.24\n    2093.8401\n    2051.24\n    2091.6899\n  \n  \n    2015-12-03\n    2080.71\n    2085.0\n    2042.35\n    2049.6201\n  \n  \n    2015-12-02\n    2101.71\n    2104.27\n    2077.1101\n    2079.51\n  \n  \n    2015-12-01\n    2082.9299\n    2103.3701\n    2082.9299\n    2102.6299\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_options(\n  data,\n  &lt;many options&gt;\n)\nWith tab_options() we can modify the global options for a GT table. These options are named by the components, the sub-components, and the element that can adjusted. This method has a very large set of arguments and many aspects of the table can be adjusted. Later on, we’ll take a look at some shortcuts to common options with the opt_*() methods.\n\n\nUse exibble to create a GT table with all the main parts added; we can use this going forward to demo some tab_options().\n\nexibble_small = (\n  pl.from_pandas(exibble)\n  .drop([\"fctr\", \"date\", \"time\", \"datetime\"])\n)\n\ntab_1 = (\n  GT(\n    exibble_small,\n    rowname_col = \"row\",\n    groupname_col = \"group\"\n  )\n  .tab_header(\n    title=md(\"Data listing from **exibble**\"),\n    subtitle=md(\"`exibble` is an R dataset\")\n  )\n  .fmt_number(columns=\"num\")\n  .fmt_currency(columns=\"currency\")\n  .tab_source_note(\n    source_note=\"Using commas for separators.\"\n  )\n)\n\ntab_1\n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\nModify the table width (with table_width) to 100% (which spans the entire content width area).\n\ntab_1.tab_options(table_width = \"100%\") \n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\nModify the table’s background color (with table_background_color) to be \"lightcyan\".\n\ntab_1.tab_options(table_background_color = \"lightcyan\")\n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\nChange the padding of data rows to 5px with data_row.padding.\n\ntab_1.tab_options(data_row_padding = \"5px\")\n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\nReduce the size of the title and the subtitle text (with heading_title_font_size and heading_subtitle_font_size).\n\ntab_1.tab_options(\n    heading_title_font_size=\"small\",\n    heading_subtitle_font_size=\"small\"\n  )\n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\nA header can be added to a GT table with tab_header(); use md() to style title/subtitle.\nSource notes can be added to the footer of a table with tab_source_note().\nSpanner column labels can be placed above selected column labels with tab_spanner().\nIf you have a stub and want a label above it, use tab_stubhead().\nThe tab_style() method helps to style specified cells; use both the loc() and style modules for targeting and style specification.\nTons of options that affect the entire table (i.e., not targeted) can be used with tab_options()."
  },
  {
    "objectID": "1-3-5-great-tables/01-primers/02-create-modify-parts.html#intro",
    "href": "1-3-5-great-tables/01-primers/02-create-modify-parts.html#intro",
    "title": "Adding or Modifying Parts of a Table",
    "section": "",
    "text": "A GT table can contain a few useful parts for conveying additional information. These include a header (with a titles and subtitle), a footer (with source notes), and additional areas for labels (row group labels, column spanner labels, the stubhead label). We can modify the look of table parts more generally with tab_options() and perform styling on targeted table locations with tab_style().\n\n\n\n\ntab_header()\ntab_stubhead()\ntab_spanner()\ntab_source_note()\ntab_style()\ntab_options()\n\nHelpers for transforming text:\n\nmd()\nhtml()\n\nHelpers for targeting locations (for tab_style()):\n\nloc\nstyle\n\n\n\n\n\ntab_header(\n  data,\n  title,\n  subtitle = None\n)\nWe can add a table header to the GT table with a title and optionally a subtitle. A table header is an optional table part that is positioned above the column labels. We have the flexibility to use Markdown or HTML formatting for the header’s title and subtitle (with md() or html()).\n\n\nUse gtcars to create a GT table; add a header part to contain a title and subtitle.\n\n!pip install great_tables\n!pip install polars\n!pip install selenium\n\nRequirement already satisfied: great_tables in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (0.13.0)\nRequirement already satisfied: commonmark&gt;=0.9.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (0.9.1)\nRequirement already satisfied: htmltools&gt;=0.4.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (0.6.0)\nRequirement already satisfied: importlib-metadata in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (8.5.0)\nRequirement already satisfied: typing-extensions&gt;=3.10.0.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (4.10.0)\nRequirement already satisfied: numpy&gt;=1.22.4 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (1.26.4)\nRequirement already satisfied: Babel&gt;=2.13.1 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (2.14.0)\nRequirement already satisfied: importlib-resources in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from great_tables) (6.4.5)\nRequirement already satisfied: packaging&gt;=20.9 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from htmltools&gt;=0.4.1-&gt;great_tables) (23.2)\nRequirement already satisfied: zipp&gt;=3.20 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from importlib-metadata-&gt;great_tables) (3.20.2)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nRequirement already satisfied: polars in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (1.12.0)\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\nCollecting selenium\n  Downloading selenium-4.26.1-py3-none-any.whl.metadata (7.1 kB)\nRequirement already satisfied: urllib3&lt;3,&gt;=1.26 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from urllib3[socks]&lt;3,&gt;=1.26-&gt;selenium) (2.2.1)\nCollecting trio~=0.17 (from selenium)\n  Downloading trio-0.27.0-py3-none-any.whl.metadata (8.6 kB)\nCollecting trio-websocket~=0.9 (from selenium)\n  Downloading trio_websocket-0.11.1-py3-none-any.whl.metadata (4.7 kB)\nRequirement already satisfied: certifi&gt;=2021.10.8 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (2024.2.2)\nRequirement already satisfied: typing_extensions~=4.9 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from selenium) (4.10.0)\nCollecting websocket-client~=1.8 (from selenium)\n  Downloading websocket_client-1.8.0-py3-none-any.whl.metadata (8.0 kB)\nRequirement already satisfied: attrs&gt;=23.2.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (23.2.0)\nCollecting sortedcontainers (from trio~=0.17-&gt;selenium)\n  Downloading sortedcontainers-2.4.0-py2.py3-none-any.whl.metadata (10 kB)\nRequirement already satisfied: idna in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (3.6)\nCollecting outcome (from trio~=0.17-&gt;selenium)\n  Downloading outcome-1.3.0.post0-py2.py3-none-any.whl.metadata (2.6 kB)\nRequirement already satisfied: sniffio&gt;=1.3.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from trio~=0.17-&gt;selenium) (1.3.1)\nCollecting wsproto&gt;=0.14 (from trio-websocket~=0.9-&gt;selenium)\n  Downloading wsproto-1.2.0-py3-none-any.whl.metadata (5.6 kB)\nCollecting pysocks!=1.5.7,&lt;2.0,&gt;=1.5.6 (from urllib3[socks]&lt;3,&gt;=1.26-&gt;selenium)\n  Downloading PySocks-1.7.1-py3-none-any.whl.metadata (13 kB)\nRequirement already satisfied: h11&lt;1,&gt;=0.9.0 in /Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages (from wsproto&gt;=0.14-&gt;trio-websocket~=0.9-&gt;selenium) (0.14.0)\nDownloading selenium-4.26.1-py3-none-any.whl (9.7 MB)\n   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 0.0/9.7 MB ? eta -:--:--   ━━━━╺━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 1.0/9.7 MB 10.7 MB/s eta 0:00:01   ━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━━━━━━━━━━━━ 3.9/9.7 MB 10.9 MB/s eta 0:00:01   ━━━━━━━━━━━━━━━━━━━━━━━━━━━╺━━━━━━━━━━━━ 6.6/9.7 MB 11.7 MB/s eta 0:00:01   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╸━━━━━━ 8.1/9.7 MB 10.9 MB/s eta 0:00:01   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 9.7/9.7 MB 10.3 MB/s eta 0:00:00\nDownloading trio-0.27.0-py3-none-any.whl (481 kB)\nDownloading trio_websocket-0.11.1-py3-none-any.whl (17 kB)\nDownloading websocket_client-1.8.0-py3-none-any.whl (58 kB)\nDownloading PySocks-1.7.1-py3-none-any.whl (16 kB)\nDownloading wsproto-1.2.0-py3-none-any.whl (24 kB)\nDownloading outcome-1.3.0.post0-py2.py3-none-any.whl (10 kB)\nDownloading sortedcontainers-2.4.0-py2.py3-none-any.whl (29 kB)\nInstalling collected packages: sortedcontainers, wsproto, websocket-client, pysocks, outcome, trio, trio-websocket, selenium\n  Attempting uninstall: websocket-client\n    Found existing installation: websocket-client 1.7.0\n    Uninstalling websocket-client-1.7.0:\n      Successfully uninstalled websocket-client-1.7.0\nSuccessfully installed outcome-1.3.0.post0 pysocks-1.7.1 selenium-4.26.1 sortedcontainers-2.4.0 trio-0.27.0 trio-websocket-0.11.1 websocket-client-1.8.0 wsproto-1.2.0\n\n[notice] A new release of pip is available: 24.2 -&gt; 24.3.1\n[notice] To update, run: pip install --upgrade pip\n\n\n\nfrom great_tables import GT, md\nfrom great_tables.data import exibble, gtcars\nimport polars as pl\n\ngtcars_mini = (\n  pl.from_pandas(gtcars)\n  .select([\"mfr\", \"model\", \"msrp\"])\n  .head(5)\n)\n\n(\n  GT(gtcars_mini)\n  .tab_header(\n    title=md(\"Data listing from **gtcars**\"),\n    subtitle=md(\"`gtcars` is an R dataset\")\n  )\n)\n\n\n\n\n\n\n  \n    Data listing from gtcars\n  \n  \n    gtcars is an R dataset\n  \n\n  mfr\n  model\n  msrp\n\n\n\n  \n    Ford\n    GT\n    447000.0\n  \n  \n    Ferrari\n    458 Speciale\n    291744.0\n  \n  \n    Ferrari\n    458 Spider\n    263553.0\n  \n  \n    Ferrari\n    458 Italia\n    233509.0\n  \n  \n    Ferrari\n    488 GTB\n    245400.0\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_stubhead(\n  data,\n  label\n)\nAdd a label to the stubhead of a GT table. The stubhead is the lone element that is positioned left of the column labels, and above the stub. We have the flexibility to use Markdown formatting for the stubhead label with md(). Furthermore, if the table is intended for HTML output, we can use HTML for the stubhead label (with html()).\n\n\nUse gtcars to create a GT table. Add a stubhead label to describe what is in the stub.\n\ngtcars_mini = (\n  pl.from_pandas(gtcars)\n  .select([\"model\", \"year\", \"hp\", \"trq\"])\n  .head(5)\n)\n\n(\n  GT(gtcars_mini, rowname_col=\"model\")\n  .tab_stubhead(label=\"car\")\n)\n\n\n\n\n\n\n\n  car\n  year\n  hp\n  trq\n\n\n\n  \n    GT\n    2017.0\n    647.0\n    550.0\n  \n  \n    458 Speciale\n    2015.0\n    597.0\n    398.0\n  \n  \n    458 Spider\n    2015.0\n    562.0\n    398.0\n  \n  \n    458 Italia\n    2014.0\n    562.0\n    398.0\n  \n  \n    488 GTB\n    2016.0\n    661.0\n    561.0\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_spanner(\n  data,\n  label,\n  columns = None,\n  spanners = None,\n  level = None,\n  id = label,\n  gather = True,\n  replace = False\n)\nSet a spanner column label by mapping it to columns already in the table. This label is placed above one or more column labels, spanning the width of those columns and column labels.\n\n\nLet’s use the gtcars table, but cut it down to size first:\n\ngtcars_small = (\n  pl.from_pandas(gtcars)\n  .select([\n    \"model\", \"year\", \"bdy_style\", \"hp\", \"hp_rpm\",\n    \"trq\", \"trq_rpm\", \"mpg_c\", \"mpg_h\", \"msrp\"\n  ])\n  .head(5)\n)\n\ngtcars_small\n\n\nshape: (5, 10)modelyearbdy_stylehphp_rpmtrqtrq_rpmmpg_cmpg_hmsrpstrf64strf64f64f64f64f64f64f64\"GT\"2017.0\"coupe\"647.06250.0550.05900.011.018.0447000.0\"458 Speciale\"2015.0\"coupe\"597.09000.0398.06000.013.017.0291744.0\"458 Spider\"2015.0\"convertible\"562.09000.0398.06000.013.017.0263553.0\"458 Italia\"2014.0\"coupe\"562.09000.0398.06000.013.017.0233509.0\"488 GTB\"2016.0\"coupe\"661.08000.0561.03000.015.022.0245400.0\n\n\nLet’s look at the table in GT so that we know where we are starting from.\n\nGT(gtcars_small, rowname_col=\"model\")\n\n\n\n\n\n\n\n  \n  year\n  bdy_style\n  hp\n  hp_rpm\n  trq\n  trq_rpm\n  mpg_c\n  mpg_h\n  msrp\n\n\n\n  \n    GT\n    2017.0\n    coupe\n    647.0\n    6250.0\n    550.0\n    5900.0\n    11.0\n    18.0\n    447000.0\n  \n  \n    458 Speciale\n    2015.0\n    coupe\n    597.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    291744.0\n  \n  \n    458 Spider\n    2015.0\n    convertible\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    263553.0\n  \n  \n    458 Italia\n    2014.0\n    coupe\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    233509.0\n  \n  \n    488 GTB\n    2016.0\n    coupe\n    661.0\n    8000.0\n    561.0\n    3000.0\n    15.0\n    22.0\n    245400.0\n  \n\n\n\n\n\n\n        \n\n\nUse gtcars to create a GT table; Group several columns related to car performance under a spanner column with the label performance.\n\n(\n  GT(gtcars_small, rowname_col = \"model\")\n  .tab_spanner(\n    label=\"performance\",\n    columns=[\"hp\", \"hp_rpm\", \"trq\", \"trq_rpm\", \"mpg_c\", \"mpg_h\"]\n  )\n)\n\n\n\n\n\n\n\n  \n  year\n  bdy_style\n  \n    performance\n  \n  msrp\n\n\n  hp\n  hp_rpm\n  trq\n  trq_rpm\n  mpg_c\n  mpg_h\n\n\n\n  \n    GT\n    2017.0\n    coupe\n    647.0\n    6250.0\n    550.0\n    5900.0\n    11.0\n    18.0\n    447000.0\n  \n  \n    458 Speciale\n    2015.0\n    coupe\n    597.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    291744.0\n  \n  \n    458 Spider\n    2015.0\n    convertible\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    263553.0\n  \n  \n    458 Italia\n    2014.0\n    coupe\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    233509.0\n  \n  \n    488 GTB\n    2016.0\n    coupe\n    661.0\n    8000.0\n    561.0\n    3000.0\n    15.0\n    22.0\n    245400.0\n  \n\n\n\n\n\n\n        \n\n\nWith a few Polars selectors statements, we can get the same columns.\n\nimport polars.selectors as cs\n\n(\n  GT(gtcars_small, rowname_col = \"model\")\n  .tab_spanner(\n    label=\"performance\",\n    columns=[\n      cs.starts_with(\"hp\"),\n      cs.starts_with(\"trq\"),\n      cs.starts_with(\"mpg\")\n    ]\n  )\n)\n\n\n\n\n\n\n\n  \n  year\n  bdy_style\n  \n    performance\n  \n  msrp\n\n\n  hp\n  hp_rpm\n  trq\n  trq_rpm\n  mpg_c\n  mpg_h\n\n\n\n  \n    GT\n    2017.0\n    coupe\n    647.0\n    6250.0\n    550.0\n    5900.0\n    11.0\n    18.0\n    447000.0\n  \n  \n    458 Speciale\n    2015.0\n    coupe\n    597.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    291744.0\n  \n  \n    458 Spider\n    2015.0\n    convertible\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    263553.0\n  \n  \n    458 Italia\n    2014.0\n    coupe\n    562.0\n    9000.0\n    398.0\n    6000.0\n    13.0\n    17.0\n    233509.0\n  \n  \n    488 GTB\n    2016.0\n    coupe\n    661.0\n    8000.0\n    561.0\n    3000.0\n    15.0\n    22.0\n    245400.0\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_source_note(\n  data,\n  source_note\n)\nWe can add a source note to the footer part of any GT table. A source note is useful for citing the data included in the table. Several can be added, simply use multiple calls of tab_source_note() and they will be inserted in the order provided. We can use Markdown formatting for the note, or, if the table is intended for HTML output, we can include HTML formatting.\n\n\nUse exibble to create a GT table. Add a source note to the table footer that cites the data source.\n\n(\n  GT(exibble)\n  .tab_source_note(\n    source_note=\"The exibble dataset is available in the Great Tables package.\"\n  )\n)\n\n\n\n\n\n\n\n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n  row\n  group\n\n\n\n  \n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n    row_1\n    grp_a\n  \n  \n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n    row_2\n    grp_a\n  \n  \n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n    row_3\n    grp_a\n  \n  \n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n    row_4\n    grp_a\n  \n  \n    5550.0\n    \n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n    row_5\n    grp_b\n  \n  \n    \n    fig\n    six\n    2015-06-15\n    \n    2018-06-06 16:11\n    13.255\n    row_6\n    grp_b\n  \n  \n    777000.0\n    grapefruit\n    seven\n    \n    19:10\n    2018-07-07 05:22\n    \n    row_7\n    grp_b\n  \n  \n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    \n    0.44\n    row_8\n    grp_b\n  \n\n  \n  \n  \n    The exibble dataset is available in the Great Tables package.\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_style(\n  data,\n  style,\n  locations\n)\nWith the tab_style() method we can target specific cells and apply styles to them.\nThis is done with the help of the following style module and its methods:\n\nstyle.fill()\nstyle.text()\nstyle.borders()\n\nFor locations we use the loc methods. In the example below, we’ll use loc.body() along with a conditional statement in rows= to target cells based on data.\n\n\nChange the font of all body cells in the exibble table to Times New Roman. By default, using cells_body() without any arguments means all table body cells are targeted.\n\nfrom great_tables import loc, style\n\nexibble_mini = (\n  pl.from_pandas(exibble)\n  .select([\"num\", \"currency\"])\n)\n\n(\n  GT(exibble_mini)\n  .tab_style(\n    style=style.text(font=\"Times New Roman\"),\n    locations=loc.body()\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    0.1111\n    49.95\n  \n  \n    2.222\n    17.95\n  \n  \n    33.33\n    1.39\n  \n  \n    444.4\n    65100.0\n  \n  \n    5550.0\n    1325.81\n  \n  \n    None\n    13.255\n  \n  \n    777000.0\n    None\n  \n  \n    8880000.0\n    0.44\n  \n\n\n\n\n\n\n        \n\n\nUse a font from the Google Fonts service by using the google_font() method. Recommendations on some Google fonts can be found by using info_google_fonts().\n\nfrom great_tables import google_font\n\n(\n  GT(exibble_mini)\n  .fmt_currency(columns=\"currency\", currency=\"EUR\")\n  .tab_style(\n    style=style.text(font=google_font(\"IBM Plex Sans\"), weight=500),\n    locations=loc.body()\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    0.1111\n    €49.95\n  \n  \n    2.222\n    €17.95\n  \n  \n    33.33\n    €1.39\n  \n  \n    444.4\n    €65,100.00\n  \n  \n    5550.0\n    €1,325.81\n  \n  \n    None\n    €13.26\n  \n  \n    777000.0\n    None\n  \n  \n    8880000.0\n    €0.44\n  \n\n\n\n\n\n\n        \n\n\nUse exibble to create a GT table. Add styles that are to be applied to data cells that satisfy a condition (using tab_style()).\n\n(\n  GT(exibble_mini)\n  .fmt_number(columns=[\"num\", \"currency\"])\n  .tab_style(\n    style=[\n      style.fill(color=\"cyan\"),\n      style.text(weight=\"bold\")\n    ],\n    locations=loc.body(\n      columns=\"num\",\n      rows=pl.col(\"num\") &gt; 5000\n    )\n  )\n  .tab_style(\n    style=[\n      style.fill(color=\"#F9E3D6\"),\n      style.text(style=\"italic\")\n    ],\n    locations=loc.body(\n      columns=\"currency\",\n      rows=pl.col(\"currency\") &lt; 100\n    )\n  )\n)\n\n\n\n\n\n\n\n  num\n  currency\n\n\n\n  \n    0.11\n    49.95\n  \n  \n    2.22\n    17.95\n  \n  \n    33.33\n    1.39\n  \n  \n    444.40\n    65,100.00\n  \n  \n    5,550.00\n    1,325.81\n  \n  \n    None\n    13.26\n  \n  \n    777,000.00\n    None\n  \n  \n    8,880,000.00\n    0.44\n  \n\n\n\n\n\n\n        \n\n\nUse sp500 to create a GT table. Color entire rows of cells based on values in a particular column.\n\nfrom great_tables.data import sp500\n\nsp500_mini = (\n  pl.from_pandas(sp500)\n  .filter(pl.col(\"date\") &gt;= \"2015-12-01\")\n  .filter(pl.col(\"date\") &lt;= \"2015-12-15\")\n  .drop([\"adj_close\", \"volume\"])\n)\n\n(\n  GT(sp500_mini)\n  .tab_style(\n    style = style.fill(color=\"lightgreen\"),\n    locations = loc.body(\n      rows = pl.col(\"close\") &gt; pl.col(\"open\")\n    )\n  )\n  .tab_style(\n    style = [\n      style.fill(color=\"tomato\"),\n      style.text(color=\"white\")\n    ],\n    locations = loc.body(\n      rows = pl.col(\"open\") &gt; pl.col(\"close\")\n    )\n  )\n)\n\n\n\n\n\n\n\n  date\n  open\n  high\n  low\n  close\n\n\n\n  \n    2015-12-15\n    2025.55\n    2053.8701\n    2025.55\n    2043.41\n  \n  \n    2015-12-14\n    2013.37\n    2022.92\n    1993.26\n    2021.9399\n  \n  \n    2015-12-11\n    2047.27\n    2047.27\n    2008.8\n    2012.37\n  \n  \n    2015-12-10\n    2047.9301\n    2067.6499\n    2045.67\n    2052.23\n  \n  \n    2015-12-09\n    2061.1699\n    2080.3301\n    2036.53\n    2047.62\n  \n  \n    2015-12-08\n    2073.3899\n    2073.8501\n    2052.3201\n    2063.5901\n  \n  \n    2015-12-07\n    2090.4199\n    2090.4199\n    2066.78\n    2077.0701\n  \n  \n    2015-12-04\n    2051.24\n    2093.8401\n    2051.24\n    2091.6899\n  \n  \n    2015-12-03\n    2080.71\n    2085.0\n    2042.35\n    2049.6201\n  \n  \n    2015-12-02\n    2101.71\n    2104.27\n    2077.1101\n    2079.51\n  \n  \n    2015-12-01\n    2082.9299\n    2103.3701\n    2082.9299\n    2102.6299\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\ntab_options(\n  data,\n  &lt;many options&gt;\n)\nWith tab_options() we can modify the global options for a GT table. These options are named by the components, the sub-components, and the element that can adjusted. This method has a very large set of arguments and many aspects of the table can be adjusted. Later on, we’ll take a look at some shortcuts to common options with the opt_*() methods.\n\n\nUse exibble to create a GT table with all the main parts added; we can use this going forward to demo some tab_options().\n\nexibble_small = (\n  pl.from_pandas(exibble)\n  .drop([\"fctr\", \"date\", \"time\", \"datetime\"])\n)\n\ntab_1 = (\n  GT(\n    exibble_small,\n    rowname_col = \"row\",\n    groupname_col = \"group\"\n  )\n  .tab_header(\n    title=md(\"Data listing from **exibble**\"),\n    subtitle=md(\"`exibble` is an R dataset\")\n  )\n  .fmt_number(columns=\"num\")\n  .fmt_currency(columns=\"currency\")\n  .tab_source_note(\n    source_note=\"Using commas for separators.\"\n  )\n)\n\ntab_1\n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\nModify the table width (with table_width) to 100% (which spans the entire content width area).\n\ntab_1.tab_options(table_width = \"100%\") \n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\nModify the table’s background color (with table_background_color) to be \"lightcyan\".\n\ntab_1.tab_options(table_background_color = \"lightcyan\")\n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\nChange the padding of data rows to 5px with data_row.padding.\n\ntab_1.tab_options(data_row_padding = \"5px\")\n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\nReduce the size of the title and the subtitle text (with heading_title_font_size and heading_subtitle_font_size).\n\ntab_1.tab_options(\n    heading_title_font_size=\"small\",\n    heading_subtitle_font_size=\"small\"\n  )\n\n\n\n\n\n\n  \n    Data listing from exibble\n  \n  \n    exibble is an R dataset\n  \n\n  \n  num\n  char\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.11\n    apricot\n    $49.95\n  \n  \n    row_2\n    2.22\n    banana\n    $17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    $1.39\n  \n  \n    row_4\n    444.40\n    durian\n    $65,100.00\n  \n  \n    grp_b\n  \n  \n    row_5\n    5,550.00\n    None\n    $1,325.81\n  \n  \n    row_6\n    None\n    fig\n    $13.26\n  \n  \n    row_7\n    777,000.00\n    grapefruit\n    None\n  \n  \n    row_8\n    8,880,000.00\n    honeydew\n    $0.44\n  \n\n  \n  \n  \n    Using commas for separators.\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\n\nA header can be added to a GT table with tab_header(); use md() to style title/subtitle.\nSource notes can be added to the footer of a table with tab_source_note().\nSpanner column labels can be placed above selected column labels with tab_spanner().\nIf you have a stub and want a label above it, use tab_stubhead().\nThe tab_style() method helps to style specified cells; use both the loc() and style modules for targeting and style specification.\nTons of options that affect the entire table (i.e., not targeted) can be used with tab_options()."
  },
  {
    "objectID": "1-3-5-great-tables/01-primers/01-create-table.html",
    "href": "1-3-5-great-tables/01-primers/01-create-table.html",
    "title": "Creating a Table, Exporting",
    "section": "",
    "text": "All GT tables begin with using the GT() class. There we supply the input data table (a Pandas or Polars DataFrame) and some basic options for creating a stub (rowname_col) and row groups (groupname_col).\nFinally, sometimes we want to export the table to an image format. For that you can use the save() method.\n\n\n\n\nGT()\nsave()\n\n\n\n\n\nGT(\n  data,\n  rowname_col = \"rowname\",\n  groupname_col = ,\n  rownames_to_stub = FALSE,\n  auto_align = TRUE,\n  id = NULL,\n  locale = NULL,\n)\nThe GT() class creates a GT table object when provided with table data. Using this function is the first step in a typical GT workflow. Once we have the GT table object, we can perform styling transformations before rendering to a display table.\n\n\nThe GT package contains a few datasets:\n\ncountrypops - Yearly populations of countries from 1960 to 2017\nsza - Twice hourly solar zenith angles by month & latitude\ngtcars - Deluxe automobiles from the 2014-2017 period\nsp500 - Daily S&P 500 Index data from 1950 to 2015\npizzaplace - A year of pizza sales from a pizza place\nexibble - A toy example tibble for testing with GT: exibble\ntowny - Populations of all municipalities in Ontario from 1996 to 2021\nmetro - The stations of the Paris Metro\n\nWe will use exibble frequently during this workshop simply because the entire table easily fits on a screen and contains various types of data (i.e., it’s ideal for examples).\nLet’s print out exibble and see what it looks like:\n\nfrom great_tables.data import exibble\n\nexibble\n\n\n\n\n  \n    \n      \n      num\n      char\n      fctr\n      date\n      time\n      datetime\n      currency\n      row\n      group\n    \n  \n  \n    \n      0\n      1.111000e-01\n      apricot\n      one\n      2015-01-15\n      13:35\n      2018-01-01 02:22\n      49.950\n      row_1\n      grp_a\n    \n    \n      1\n      2.222000e+00\n      banana\n      two\n      2015-02-15\n      14:40\n      2018-02-02 14:33\n      17.950\n      row_2\n      grp_a\n    \n    \n      2\n      3.333000e+01\n      coconut\n      three\n      2015-03-15\n      15:45\n      2018-03-03 03:44\n      1.390\n      row_3\n      grp_a\n    \n    \n      3\n      4.444000e+02\n      durian\n      four\n      2015-04-15\n      16:50\n      2018-04-04 15:55\n      65100.000\n      row_4\n      grp_a\n    \n    \n      4\n      5.550000e+03\n      NaN\n      five\n      2015-05-15\n      17:55\n      2018-05-05 04:00\n      1325.810\n      row_5\n      grp_b\n    \n    \n      5\n      NaN\n      fig\n      six\n      2015-06-15\n      NaN\n      2018-06-06 16:11\n      13.255\n      row_6\n      grp_b\n    \n    \n      6\n      7.770000e+05\n      grapefruit\n      seven\n      NaN\n      19:10\n      2018-07-07 05:22\n      NaN\n      row_7\n      grp_b\n    \n    \n      7\n      8.880000e+06\n      honeydew\n      eight\n      2015-08-15\n      20:20\n      NaN\n      0.440\n      row_8\n      grp_b\n    \n  \n\n\n\n\nNow lets introduce exibble to the GT() class.\n\nfrom great_tables import GT\n\nGT(exibble)\n\n\n\n\n\n\n\n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n  row\n  group\n\n\n\n  \n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n    row_1\n    grp_a\n  \n  \n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n    row_2\n    grp_a\n  \n  \n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n    row_3\n    grp_a\n  \n  \n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n    row_4\n    grp_a\n  \n  \n    5550.0\n    \n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n    row_5\n    grp_b\n  \n  \n    \n    fig\n    six\n    2015-06-15\n    \n    2018-06-06 16:11\n    13.255\n    row_6\n    grp_b\n  \n  \n    777000.0\n    grapefruit\n    seven\n    \n    19:10\n    2018-07-07 05:22\n    \n    row_7\n    grp_b\n  \n  \n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    \n    0.44\n    row_8\n    grp_b\n  \n\n\n\n\n\n\n        \n\n\nThe above is the basic layout, containing the column labels and the body cells. Numbers are minimally formatted (see the num column) but we can apply our own specific formatting (in the next module).\nWe can modify the layout a bit in the first step and create a stub. A stub is a special column that contains row labels/names. To do this, we supply the name of the column we’d like to use as the stub to the rowname_col argument. Conveniently, we have the \"row\" column in exibble that’s good for this purpose:\n\nGT(exibble, rowname_col=\"row\")\n\n\n\n\n\n\n\n  \n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n  group\n\n\n\n  \n    row_1\n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n    grp_a\n  \n  \n    row_2\n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n    grp_a\n  \n  \n    row_3\n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n    grp_a\n  \n  \n    row_4\n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n    grp_a\n  \n  \n    row_5\n    5550.0\n    \n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n    grp_b\n  \n  \n    row_6\n    \n    fig\n    six\n    2015-06-15\n    \n    2018-06-06 16:11\n    13.255\n    grp_b\n  \n  \n    row_7\n    777000.0\n    grapefruit\n    seven\n    \n    19:10\n    2018-07-07 05:22\n    \n    grp_b\n  \n  \n    row_8\n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    \n    0.44\n    grp_b\n  \n\n\n\n\n\n\n        \n\n\nGreat! A bit on the stub. It doesn’t have a column label above it because it’s technically not a column. We can still put a label above it though, and this is done with the tab_stubhead() function (demo for this in the next module).\nWe can do some more structuring. Sets of rows can be grouped, showing a row group label above each group. We can do this by using a column containing categorical values (usually grouping labels). Conveniently again, exibble has the \"group\" column. Let’s use that in the rowname_col argument of gt() and see what it looks like:\n\nGT(\n  exibble,\n  rowname_col=\"row\",\n  groupname_col=\"group\"\n)\n\n\n\n\n\n\n\n  \n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n  \n  \n    row_2\n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n  \n  \n    row_4\n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n  \n  \n    grp_b\n  \n  \n    row_5\n    5550.0\n    \n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n  \n  \n    row_6\n    \n    fig\n    six\n    2015-06-15\n    \n    2018-06-06 16:11\n    13.255\n  \n  \n    row_7\n    777000.0\n    grapefruit\n    seven\n    \n    19:10\n    2018-07-07 05:22\n    \n  \n  \n    row_8\n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    \n    0.44\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nsave(\n  data,\n  filename,\n  path = NULL,\n  ...\n)\nThe save() method makes it easy to save a GT table to a file. The function assumes the output file type by the extension provided in the output filename. This will produce either an HTML, PDF, PNG, LaTeX, RTF, or docx file.\n\n\nUse exibble to create a GT table.\n\ngt_tbl = GT(\n  exibble,\n  rowname_col=\"row\",\n  groupname_col=\"group\"\n)\n\nSave a PNG file.\n\ngt_tbl.save(\"tab_1.png\")\n\n\n\n\n\n\n\nTo make a GT table, get your input table in the right arrangement and use GT().\nThe GT() class has a few options for adding group rows and a stub.\nYou can save a GT table as an image file with save() method; you have to name the file in a supported format (e.g., \"gt_table.png\" for a PNG file containing the table)."
  },
  {
    "objectID": "1-3-5-great-tables/01-primers/01-create-table.html#intro",
    "href": "1-3-5-great-tables/01-primers/01-create-table.html#intro",
    "title": "Creating a Table, Exporting",
    "section": "",
    "text": "All GT tables begin with using the GT() class. There we supply the input data table (a Pandas or Polars DataFrame) and some basic options for creating a stub (rowname_col) and row groups (groupname_col).\nFinally, sometimes we want to export the table to an image format. For that you can use the save() method.\n\n\n\n\nGT()\nsave()\n\n\n\n\n\nGT(\n  data,\n  rowname_col = \"rowname\",\n  groupname_col = ,\n  rownames_to_stub = FALSE,\n  auto_align = TRUE,\n  id = NULL,\n  locale = NULL,\n)\nThe GT() class creates a GT table object when provided with table data. Using this function is the first step in a typical GT workflow. Once we have the GT table object, we can perform styling transformations before rendering to a display table.\n\n\nThe GT package contains a few datasets:\n\ncountrypops - Yearly populations of countries from 1960 to 2017\nsza - Twice hourly solar zenith angles by month & latitude\ngtcars - Deluxe automobiles from the 2014-2017 period\nsp500 - Daily S&P 500 Index data from 1950 to 2015\npizzaplace - A year of pizza sales from a pizza place\nexibble - A toy example tibble for testing with GT: exibble\ntowny - Populations of all municipalities in Ontario from 1996 to 2021\nmetro - The stations of the Paris Metro\n\nWe will use exibble frequently during this workshop simply because the entire table easily fits on a screen and contains various types of data (i.e., it’s ideal for examples).\nLet’s print out exibble and see what it looks like:\n\nfrom great_tables.data import exibble\n\nexibble\n\n\n\n\n  \n    \n      \n      num\n      char\n      fctr\n      date\n      time\n      datetime\n      currency\n      row\n      group\n    \n  \n  \n    \n      0\n      1.111000e-01\n      apricot\n      one\n      2015-01-15\n      13:35\n      2018-01-01 02:22\n      49.950\n      row_1\n      grp_a\n    \n    \n      1\n      2.222000e+00\n      banana\n      two\n      2015-02-15\n      14:40\n      2018-02-02 14:33\n      17.950\n      row_2\n      grp_a\n    \n    \n      2\n      3.333000e+01\n      coconut\n      three\n      2015-03-15\n      15:45\n      2018-03-03 03:44\n      1.390\n      row_3\n      grp_a\n    \n    \n      3\n      4.444000e+02\n      durian\n      four\n      2015-04-15\n      16:50\n      2018-04-04 15:55\n      65100.000\n      row_4\n      grp_a\n    \n    \n      4\n      5.550000e+03\n      NaN\n      five\n      2015-05-15\n      17:55\n      2018-05-05 04:00\n      1325.810\n      row_5\n      grp_b\n    \n    \n      5\n      NaN\n      fig\n      six\n      2015-06-15\n      NaN\n      2018-06-06 16:11\n      13.255\n      row_6\n      grp_b\n    \n    \n      6\n      7.770000e+05\n      grapefruit\n      seven\n      NaN\n      19:10\n      2018-07-07 05:22\n      NaN\n      row_7\n      grp_b\n    \n    \n      7\n      8.880000e+06\n      honeydew\n      eight\n      2015-08-15\n      20:20\n      NaN\n      0.440\n      row_8\n      grp_b\n    \n  \n\n\n\n\nNow lets introduce exibble to the GT() class.\n\nfrom great_tables import GT\n\nGT(exibble)\n\n\n\n\n\n\n\n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n  row\n  group\n\n\n\n  \n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n    row_1\n    grp_a\n  \n  \n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n    row_2\n    grp_a\n  \n  \n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n    row_3\n    grp_a\n  \n  \n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n    row_4\n    grp_a\n  \n  \n    5550.0\n    \n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n    row_5\n    grp_b\n  \n  \n    \n    fig\n    six\n    2015-06-15\n    \n    2018-06-06 16:11\n    13.255\n    row_6\n    grp_b\n  \n  \n    777000.0\n    grapefruit\n    seven\n    \n    19:10\n    2018-07-07 05:22\n    \n    row_7\n    grp_b\n  \n  \n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    \n    0.44\n    row_8\n    grp_b\n  \n\n\n\n\n\n\n        \n\n\nThe above is the basic layout, containing the column labels and the body cells. Numbers are minimally formatted (see the num column) but we can apply our own specific formatting (in the next module).\nWe can modify the layout a bit in the first step and create a stub. A stub is a special column that contains row labels/names. To do this, we supply the name of the column we’d like to use as the stub to the rowname_col argument. Conveniently, we have the \"row\" column in exibble that’s good for this purpose:\n\nGT(exibble, rowname_col=\"row\")\n\n\n\n\n\n\n\n  \n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n  group\n\n\n\n  \n    row_1\n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n    grp_a\n  \n  \n    row_2\n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n    grp_a\n  \n  \n    row_3\n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n    grp_a\n  \n  \n    row_4\n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n    grp_a\n  \n  \n    row_5\n    5550.0\n    \n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n    grp_b\n  \n  \n    row_6\n    \n    fig\n    six\n    2015-06-15\n    \n    2018-06-06 16:11\n    13.255\n    grp_b\n  \n  \n    row_7\n    777000.0\n    grapefruit\n    seven\n    \n    19:10\n    2018-07-07 05:22\n    \n    grp_b\n  \n  \n    row_8\n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    \n    0.44\n    grp_b\n  \n\n\n\n\n\n\n        \n\n\nGreat! A bit on the stub. It doesn’t have a column label above it because it’s technically not a column. We can still put a label above it though, and this is done with the tab_stubhead() function (demo for this in the next module).\nWe can do some more structuring. Sets of rows can be grouped, showing a row group label above each group. We can do this by using a column containing categorical values (usually grouping labels). Conveniently again, exibble has the \"group\" column. Let’s use that in the rowname_col argument of gt() and see what it looks like:\n\nGT(\n  exibble,\n  rowname_col=\"row\",\n  groupname_col=\"group\"\n)\n\n\n\n\n\n\n\n  \n  num\n  char\n  fctr\n  date\n  time\n  datetime\n  currency\n\n\n\n  \n    grp_a\n  \n  \n    row_1\n    0.1111\n    apricot\n    one\n    2015-01-15\n    13:35\n    2018-01-01 02:22\n    49.95\n  \n  \n    row_2\n    2.222\n    banana\n    two\n    2015-02-15\n    14:40\n    2018-02-02 14:33\n    17.95\n  \n  \n    row_3\n    33.33\n    coconut\n    three\n    2015-03-15\n    15:45\n    2018-03-03 03:44\n    1.39\n  \n  \n    row_4\n    444.4\n    durian\n    four\n    2015-04-15\n    16:50\n    2018-04-04 15:55\n    65100.0\n  \n  \n    grp_b\n  \n  \n    row_5\n    5550.0\n    \n    five\n    2015-05-15\n    17:55\n    2018-05-05 04:00\n    1325.81\n  \n  \n    row_6\n    \n    fig\n    six\n    2015-06-15\n    \n    2018-06-06 16:11\n    13.255\n  \n  \n    row_7\n    777000.0\n    grapefruit\n    seven\n    \n    19:10\n    2018-07-07 05:22\n    \n  \n  \n    row_8\n    8880000.0\n    honeydew\n    eight\n    2015-08-15\n    20:20\n    \n    0.44\n  \n\n\n\n\n\n\n        \n\n\n\n\n\n\n\nsave(\n  data,\n  filename,\n  path = NULL,\n  ...\n)\nThe save() method makes it easy to save a GT table to a file. The function assumes the output file type by the extension provided in the output filename. This will produce either an HTML, PDF, PNG, LaTeX, RTF, or docx file.\n\n\nUse exibble to create a GT table.\n\ngt_tbl = GT(\n  exibble,\n  rowname_col=\"row\",\n  groupname_col=\"group\"\n)\n\nSave a PNG file.\n\ngt_tbl.save(\"tab_1.png\")\n\n\n\n\n\n\n\nTo make a GT table, get your input table in the right arrangement and use GT().\nThe GT() class has a few options for adding group rows and a stub.\nYou can save a GT table as an image file with save() method; you have to name the file in a supported format (e.g., \"gt_table.png\" for a PNG file containing the table)."
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/01-coffee-table.html",
    "href": "1-3-5-great-tables/02-code_along/01-coffee-table.html",
    "title": "Code Along: Coffee Table",
    "section": "",
    "text": "Setting up.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom great_tables import GT, loc, style\n\nImporting the data.\n\ncoffee_sales = pl.DataFrame.deserialize(\"../data/coffee-sales.json\", format=\"json\")\n\ncoffee_sales\n\n\nshape: (14, 7)iconproductrevenue_dollarsrevenue_pctprofit_dollarsprofit_pctmonthly_salesstrstrf64f64f64f64list[i64]\"grinder.png\"\"Grinder\"904500.00.03567960.00.04[521, 494, … 751]\"moka-pot.png\"\"Moka pot\"2.04525e60.07181080.00.01[4726, 4741, … 6283]\"cold-brew.png\"\"Cold brew\"288750.00.01241770.00.02[244, 249, … 244]\"filter.png\"\"Filter\"404250.00.0170010.00.0[2067, 1809, … 2744]\"drip-machine.png\"\"Drip machine\"2.632e60.091.37445e60.09[2137, 1623, … 2328]…………………\"chemex.png\"\"Chemex\"3.13725e60.11817680.00.06[4938, 4167, … 7220]\"scale.png\"\"Scale\"3.801e60.132.91029e60.2[1542, 1566, … 3180]\"kettle.png\"\"Kettle\"756250.00.03617520.00.04[1139, 1023, … 1529]\"espresso-machine.png\"\"Espresso Machine\"8.406e60.293.63644e60.25[686, 840, … 2577]null\"Total\"2.94485e71.01.479315e71.0null\n\n\nLet’s get the data into Great Tables.\n\ngt_tbl_1 = GT(coffee_sales)\n\ngt_tbl_1"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/01-coffee-table.html#start",
    "href": "1-3-5-great-tables/02-code_along/01-coffee-table.html#start",
    "title": "Code Along: Coffee Table",
    "section": "",
    "text": "Setting up.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom great_tables import GT, loc, style\n\nImporting the data.\n\ncoffee_sales = pl.DataFrame.deserialize(\"../data/coffee-sales.json\", format=\"json\")\n\ncoffee_sales\n\n\nshape: (14, 7)iconproductrevenue_dollarsrevenue_pctprofit_dollarsprofit_pctmonthly_salesstrstrf64f64f64f64list[i64]\"grinder.png\"\"Grinder\"904500.00.03567960.00.04[521, 494, … 751]\"moka-pot.png\"\"Moka pot\"2.04525e60.07181080.00.01[4726, 4741, … 6283]\"cold-brew.png\"\"Cold brew\"288750.00.01241770.00.02[244, 249, … 244]\"filter.png\"\"Filter\"404250.00.0170010.00.0[2067, 1809, … 2744]\"drip-machine.png\"\"Drip machine\"2.632e60.091.37445e60.09[2137, 1623, … 2328]…………………\"chemex.png\"\"Chemex\"3.13725e60.11817680.00.06[4938, 4167, … 7220]\"scale.png\"\"Scale\"3.801e60.132.91029e60.2[1542, 1566, … 3180]\"kettle.png\"\"Kettle\"756250.00.03617520.00.04[1139, 1023, … 1529]\"espresso-machine.png\"\"Espresso Machine\"8.406e60.293.63644e60.25[686, 840, … 2577]null\"Total\"2.94485e71.01.479315e71.0null\n\n\nLet’s get the data into Great Tables.\n\ngt_tbl_1 = GT(coffee_sales)\n\ngt_tbl_1"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/01-coffee-table.html#structure-basics",
    "href": "1-3-5-great-tables/02-code_along/01-coffee-table.html#structure-basics",
    "title": "Code Along: Coffee Table",
    "section": "Structure Basics",
    "text": "Structure Basics\nAdd a title to the table to explain contents.\n\ngt_tbl_2 = # (\n    # gt_tbl_1\n# )\n\ngt_tbl_2\n\nGroup numerical columns with a spanner. One grouping should be for revenue columns, another should be for profit columns.\n\ngt_tbl_3 = # (\n    # gt_tbl_2\n# )\n\ngt_tbl_3\n\nChange Column labels for readability. The column names are: icon, product, revenue_dollars, revenue_pct, profit_dollars, profit_pct, and monthly_sales.\n\ngt_tbl_4 = # (\n    # gt_tbl_3\n# )\n\ngt_tbl_4"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/01-coffee-table.html#formatting-basics",
    "href": "1-3-5-great-tables/02-code_along/01-coffee-table.html#formatting-basics",
    "title": "Code Along: Coffee Table",
    "section": "Formatting Basics",
    "text": "Formatting Basics\nFormat the currency values to make them look better.\n\ngt_tbl_5 = # (\n    # gt_tbl_4\n# )\n\ngt_tbl_5\n\nFormat the fractional values by turning them into percentages.\n\ngt_tbl_6 = # (\n    # gt_tbl_5\n# )\n\ngt_tbl_6"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/01-coffee-table.html#styling-with-tab_style",
    "href": "1-3-5-great-tables/02-code_along/01-coffee-table.html#styling-with-tab_style",
    "title": "Code Along: Coffee Table",
    "section": "Styling with tab_style()",
    "text": "Styling with tab_style()\nAdd an ‘aliceblue’ background to columns pertaining to revenue.\n\ngt_tbl_7 = # (\n    # gt_tbl_6\n# )\n\ngt_tbl_7\n\nAdd an ‘papayawhip’ background to columns pertaining to profit.\n\ngt_tbl_8 = # (\n    # gt_tbl_7\n# )\n\ngt_tbl_8\n\nMake the text bold in the bottom row (the totals column).\n\ngt_tbl_9 = # (\n    # gt_tbl_8\n# )\n\ngt_tbl_9"
  },
  {
    "objectID": "1-3-5-great-tables/02-code_along/01-coffee-table.html#three-last-things",
    "href": "1-3-5-great-tables/02-code_along/01-coffee-table.html#three-last-things",
    "title": "Code Along: Coffee Table",
    "section": "Three Last Things",
    "text": "Three Last Things\nAdd a column of bar plots using the monthly revenue column.\n\ngt_tbl_10 = # (\n    # gt_tbl_9\n# )\n\ngt_tbl_10\n\nAdd images to the icon column. The images are in the img directory.\n\ngt_tbl_11 = # (\n    # gt_tbl_10\n# )\n\ngt_tbl_11\n\nTurn the None cells into blank cells.\n\ngt_tbl_12 = # (\n    # gt_tbl_11\n# )\n\ngt_tbl_12"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html",
    "href": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html",
    "title": "Code Along: Coffee Table",
    "section": "",
    "text": "Setting up.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom great_tables import GT, loc, style\n\nImporting the data.\n\ncoffee_sales = pl.DataFrame.deserialize(\"../data/coffee-sales.json\", format=\"json\")\n\ncoffee_sales\n\n\nshape: (14, 7)iconproductrevenue_dollarsrevenue_pctprofit_dollarsprofit_pctmonthly_salesstrstrf64f64f64f64list[i64]\"grinder.png\"\"Grinder\"904500.00.03567960.00.04[521, 494, … 751]\"moka-pot.png\"\"Moka pot\"2.04525e60.07181080.00.01[4726, 4741, … 6283]\"cold-brew.png\"\"Cold brew\"288750.00.01241770.00.02[244, 249, … 244]\"filter.png\"\"Filter\"404250.00.0170010.00.0[2067, 1809, … 2744]\"drip-machine.png\"\"Drip machine\"2.632e60.091.37445e60.09[2137, 1623, … 2328]…………………\"chemex.png\"\"Chemex\"3.13725e60.11817680.00.06[4938, 4167, … 7220]\"scale.png\"\"Scale\"3.801e60.132.91029e60.2[1542, 1566, … 3180]\"kettle.png\"\"Kettle\"756250.00.03617520.00.04[1139, 1023, … 1529]\"espresso-machine.png\"\"Espresso Machine\"8.406e60.293.63644e60.25[686, 840, … 2577]null\"Total\"2.94485e71.01.479315e71.0null\n\n\nLet’s get the data into Great Tables.\n\ngt_tbl_1 = GT(coffee_sales)\n\ngt_tbl_1\n\n\n\n\n\n\n\n  icon\n  product\n  revenue_dollars\n  revenue_pct\n  profit_dollars\n  profit_pct\n  monthly_sales\n\n\n\n  \n    grinder.png\n    Grinder\n    904500.0\n    0.03\n    567960.0\n    0.04\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    2045250.0\n    0.07\n    181080.0\n    0.01\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    288750.0\n    0.01\n    241770.0\n    0.02\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    404250.0\n    0.01\n    70010.0\n    0.0\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    2632000.0\n    0.09\n    1374450.0\n    0.09\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    2601500.0\n    0.09\n    1293780.0\n    0.09\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    846000.0\n    0.03\n    364530.0\n    0.02\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    1113250.0\n    0.04\n    748120.0\n    0.05\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    2512500.0\n    0.09\n    1969520.0\n    0.13\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    3137250.0\n    0.11\n    817680.0\n    0.06\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    3801000.0\n    0.13\n    2910290.0\n    0.2\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    756250.0\n    0.03\n    617520.0\n    0.04\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    8406000.0\n    0.29\n    3636440.0\n    0.25\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    29448500.0\n    1.0\n    14793150.0\n    1.0\n    None"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#start",
    "href": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#start",
    "title": "Code Along: Coffee Table",
    "section": "",
    "text": "Setting up.\n\nimport polars as pl\nimport polars.selectors as cs\nfrom great_tables import GT, loc, style\n\nImporting the data.\n\ncoffee_sales = pl.DataFrame.deserialize(\"../data/coffee-sales.json\", format=\"json\")\n\ncoffee_sales\n\n\nshape: (14, 7)iconproductrevenue_dollarsrevenue_pctprofit_dollarsprofit_pctmonthly_salesstrstrf64f64f64f64list[i64]\"grinder.png\"\"Grinder\"904500.00.03567960.00.04[521, 494, … 751]\"moka-pot.png\"\"Moka pot\"2.04525e60.07181080.00.01[4726, 4741, … 6283]\"cold-brew.png\"\"Cold brew\"288750.00.01241770.00.02[244, 249, … 244]\"filter.png\"\"Filter\"404250.00.0170010.00.0[2067, 1809, … 2744]\"drip-machine.png\"\"Drip machine\"2.632e60.091.37445e60.09[2137, 1623, … 2328]…………………\"chemex.png\"\"Chemex\"3.13725e60.11817680.00.06[4938, 4167, … 7220]\"scale.png\"\"Scale\"3.801e60.132.91029e60.2[1542, 1566, … 3180]\"kettle.png\"\"Kettle\"756250.00.03617520.00.04[1139, 1023, … 1529]\"espresso-machine.png\"\"Espresso Machine\"8.406e60.293.63644e60.25[686, 840, … 2577]null\"Total\"2.94485e71.01.479315e71.0null\n\n\nLet’s get the data into Great Tables.\n\ngt_tbl_1 = GT(coffee_sales)\n\ngt_tbl_1\n\n\n\n\n\n\n\n  icon\n  product\n  revenue_dollars\n  revenue_pct\n  profit_dollars\n  profit_pct\n  monthly_sales\n\n\n\n  \n    grinder.png\n    Grinder\n    904500.0\n    0.03\n    567960.0\n    0.04\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    2045250.0\n    0.07\n    181080.0\n    0.01\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    288750.0\n    0.01\n    241770.0\n    0.02\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    404250.0\n    0.01\n    70010.0\n    0.0\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    2632000.0\n    0.09\n    1374450.0\n    0.09\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    2601500.0\n    0.09\n    1293780.0\n    0.09\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    846000.0\n    0.03\n    364530.0\n    0.02\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    1113250.0\n    0.04\n    748120.0\n    0.05\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    2512500.0\n    0.09\n    1969520.0\n    0.13\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    3137250.0\n    0.11\n    817680.0\n    0.06\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    3801000.0\n    0.13\n    2910290.0\n    0.2\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    756250.0\n    0.03\n    617520.0\n    0.04\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    8406000.0\n    0.29\n    3636440.0\n    0.25\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    29448500.0\n    1.0\n    14793150.0\n    1.0\n    None"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#structure-basics",
    "href": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#structure-basics",
    "title": "Code Along: Coffee Table",
    "section": "Structure Basics",
    "text": "Structure Basics\nAdd a title to the table to explain contents.\n\ngt_tbl_2 = (\n    gt_tbl_1\n    .tab_header(title=\"Coffee Equipment Sales for 2023\")\n)\n\ngt_tbl_2\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  revenue_dollars\n  revenue_pct\n  profit_dollars\n  profit_pct\n  monthly_sales\n\n\n\n  \n    grinder.png\n    Grinder\n    904500.0\n    0.03\n    567960.0\n    0.04\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    2045250.0\n    0.07\n    181080.0\n    0.01\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    288750.0\n    0.01\n    241770.0\n    0.02\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    404250.0\n    0.01\n    70010.0\n    0.0\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    2632000.0\n    0.09\n    1374450.0\n    0.09\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    2601500.0\n    0.09\n    1293780.0\n    0.09\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    846000.0\n    0.03\n    364530.0\n    0.02\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    1113250.0\n    0.04\n    748120.0\n    0.05\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    2512500.0\n    0.09\n    1969520.0\n    0.13\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    3137250.0\n    0.11\n    817680.0\n    0.06\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    3801000.0\n    0.13\n    2910290.0\n    0.2\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    756250.0\n    0.03\n    617520.0\n    0.04\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    8406000.0\n    0.29\n    3636440.0\n    0.25\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    29448500.0\n    1.0\n    14793150.0\n    1.0\n    None\n  \n\n\n\n\n\n\n        \n\n\nGroup numerical columns with a spanner. One grouping should be for revenue columns, another should be for profit columns.\n\ngt_tbl_3 = (\n    gt_tbl_2\n    .tab_spanner(label=\"Revenue\", columns=cs.starts_with(\"revenue\"))\n    .tab_spanner(label=\"Profit\", columns=cs.starts_with(\"profit\"))\n)\n\ngt_tbl_3\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  monthly_sales\n\n\n  revenue_dollars\n  revenue_pct\n  profit_dollars\n  profit_pct\n\n\n\n  \n    grinder.png\n    Grinder\n    904500.0\n    0.03\n    567960.0\n    0.04\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    2045250.0\n    0.07\n    181080.0\n    0.01\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    288750.0\n    0.01\n    241770.0\n    0.02\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    404250.0\n    0.01\n    70010.0\n    0.0\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    2632000.0\n    0.09\n    1374450.0\n    0.09\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    2601500.0\n    0.09\n    1293780.0\n    0.09\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    846000.0\n    0.03\n    364530.0\n    0.02\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    1113250.0\n    0.04\n    748120.0\n    0.05\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    2512500.0\n    0.09\n    1969520.0\n    0.13\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    3137250.0\n    0.11\n    817680.0\n    0.06\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    3801000.0\n    0.13\n    2910290.0\n    0.2\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    756250.0\n    0.03\n    617520.0\n    0.04\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    8406000.0\n    0.29\n    3636440.0\n    0.25\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    29448500.0\n    1.0\n    14793150.0\n    1.0\n    None\n  \n\n\n\n\n\n\n        \n\n\nChange Column labels for readability. The column names are: icon, product, revenue_dollars, revenue_pct, profit_dollars, profit_pct, and monthly_sales.\n\ngt_tbl_4 = (\n    gt_tbl_3\n    .cols_label(\n        revenue_dollars=\"Amount\",\n        revenue_pct=\"Percent\",\n        profit_dollars=\"Amount\",\n        profit_pct=\"Percent\",\n        monthly_sales=\"Monthly Sales\"\n    )\n)\n\ngt_tbl_4\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    grinder.png\n    Grinder\n    904500.0\n    0.03\n    567960.0\n    0.04\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    2045250.0\n    0.07\n    181080.0\n    0.01\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    288750.0\n    0.01\n    241770.0\n    0.02\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    404250.0\n    0.01\n    70010.0\n    0.0\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    2632000.0\n    0.09\n    1374450.0\n    0.09\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    2601500.0\n    0.09\n    1293780.0\n    0.09\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    846000.0\n    0.03\n    364530.0\n    0.02\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    1113250.0\n    0.04\n    748120.0\n    0.05\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    2512500.0\n    0.09\n    1969520.0\n    0.13\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    3137250.0\n    0.11\n    817680.0\n    0.06\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    3801000.0\n    0.13\n    2910290.0\n    0.2\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    756250.0\n    0.03\n    617520.0\n    0.04\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    8406000.0\n    0.29\n    3636440.0\n    0.25\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    29448500.0\n    1.0\n    14793150.0\n    1.0\n    None"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#formatting-basics",
    "href": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#formatting-basics",
    "title": "Code Along: Coffee Table",
    "section": "Formatting Basics",
    "text": "Formatting Basics\nFormat the currency values to make them look better.\n\ngt_tbl_5 = (\n    gt_tbl_4\n    .fmt_currency(columns=cs.ends_with(\"dollars\"), use_subunits=False)\n)\n\ngt_tbl_5\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    grinder.png\n    Grinder\n    $904,500\n    0.03\n    $567,960\n    0.04\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    $2,045,250\n    0.07\n    $181,080\n    0.01\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    $288,750\n    0.01\n    $241,770\n    0.02\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    $404,250\n    0.01\n    $70,010\n    0.0\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    $2,632,000\n    0.09\n    $1,374,450\n    0.09\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    $2,601,500\n    0.09\n    $1,293,780\n    0.09\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    $846,000\n    0.03\n    $364,530\n    0.02\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    $1,113,250\n    0.04\n    $748,120\n    0.05\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    $2,512,500\n    0.09\n    $1,969,520\n    0.13\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    $3,137,250\n    0.11\n    $817,680\n    0.06\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    $3,801,000\n    0.13\n    $2,910,290\n    0.2\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    $756,250\n    0.03\n    $617,520\n    0.04\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    $8,406,000\n    0.29\n    $3,636,440\n    0.25\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    $29,448,500\n    1.0\n    $14,793,150\n    1.0\n    None\n  \n\n\n\n\n\n\n        \n\n\nFormat the fractional values by turning them into percentages.\n\ngt_tbl_6 = (\n    gt_tbl_5\n    .fmt_percent(columns=cs.ends_with(\"pct\"), decimals=0)\n)\n\ngt_tbl_6\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    grinder.png\n    Grinder\n    $904,500\n    3%\n    $567,960\n    4%\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    $2,045,250\n    7%\n    $181,080\n    1%\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    $288,750\n    1%\n    $241,770\n    2%\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    $404,250\n    1%\n    $70,010\n    0%\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    $2,632,000\n    9%\n    $1,374,450\n    9%\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    $2,601,500\n    9%\n    $1,293,780\n    9%\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    $846,000\n    3%\n    $364,530\n    2%\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    $1,113,250\n    4%\n    $748,120\n    5%\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    $2,512,500\n    9%\n    $1,969,520\n    13%\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    $3,137,250\n    11%\n    $817,680\n    6%\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    $3,801,000\n    13%\n    $2,910,290\n    20%\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    $756,250\n    3%\n    $617,520\n    4%\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    $8,406,000\n    29%\n    $3,636,440\n    25%\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    $29,448,500\n    100%\n    $14,793,150\n    100%\n    None"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#styling-with-tab_style",
    "href": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#styling-with-tab_style",
    "title": "Code Along: Coffee Table",
    "section": "Styling with tab_style()",
    "text": "Styling with tab_style()\nAdd an ‘aliceblue’ background to columns pertaining to revenue.\n\ngt_tbl_7 = (\n    gt_tbl_6\n    .tab_style(\n        style = style.fill(color=\"aliceblue\"),\n        locations = loc.body(columns=cs.starts_with(\"revenue\"))\n    )\n)\n\ngt_tbl_7\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    grinder.png\n    Grinder\n    $904,500\n    3%\n    $567,960\n    4%\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    $2,045,250\n    7%\n    $181,080\n    1%\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    $288,750\n    1%\n    $241,770\n    2%\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    $404,250\n    1%\n    $70,010\n    0%\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    $2,632,000\n    9%\n    $1,374,450\n    9%\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    $2,601,500\n    9%\n    $1,293,780\n    9%\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    $846,000\n    3%\n    $364,530\n    2%\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    $1,113,250\n    4%\n    $748,120\n    5%\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    $2,512,500\n    9%\n    $1,969,520\n    13%\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    $3,137,250\n    11%\n    $817,680\n    6%\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    $3,801,000\n    13%\n    $2,910,290\n    20%\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    $756,250\n    3%\n    $617,520\n    4%\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    $8,406,000\n    29%\n    $3,636,440\n    25%\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    $29,448,500\n    100%\n    $14,793,150\n    100%\n    None\n  \n\n\n\n\n\n\n        \n\n\nAdd an ‘papayawhip’ background to columns pertaining to profit.\n\ngt_tbl_8 = (\n    gt_tbl_7\n    .tab_style(\n        style = style.fill(color=\"papayawhip\"),\n        locations = loc.body(columns=cs.starts_with(\"profit\"))\n    )\n)\n\ngt_tbl_8\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    grinder.png\n    Grinder\n    $904,500\n    3%\n    $567,960\n    4%\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    $2,045,250\n    7%\n    $181,080\n    1%\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    $288,750\n    1%\n    $241,770\n    2%\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    $404,250\n    1%\n    $70,010\n    0%\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    $2,632,000\n    9%\n    $1,374,450\n    9%\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    $2,601,500\n    9%\n    $1,293,780\n    9%\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    $846,000\n    3%\n    $364,530\n    2%\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    $1,113,250\n    4%\n    $748,120\n    5%\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    $2,512,500\n    9%\n    $1,969,520\n    13%\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    $3,137,250\n    11%\n    $817,680\n    6%\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    $3,801,000\n    13%\n    $2,910,290\n    20%\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    $756,250\n    3%\n    $617,520\n    4%\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    $8,406,000\n    29%\n    $3,636,440\n    25%\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    $29,448,500\n    100%\n    $14,793,150\n    100%\n    None\n  \n\n\n\n\n\n\n        \n\n\nMake the text bold in the bottom row (the totals column).\n\ngt_tbl_9 = (\n    gt_tbl_8\n    .tab_style(\n        style=style.text(weight=\"bold\"),\n        locations=loc.body(rows=pl.col(\"product\") == \"Total\")\n    )\n)\n\ngt_tbl_9\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    grinder.png\n    Grinder\n    $904,500\n    3%\n    $567,960\n    4%\n    [521, 494, 596, 613, 667, 748, 765, 686, 607, 594, 568, 751]\n  \n  \n    moka-pot.png\n    Moka pot\n    $2,045,250\n    7%\n    $181,080\n    1%\n    [4726, 4741, 4791, 5506, 6156, 6619, 6868, 6026, 5304, 4884, 4648, 6283]\n  \n  \n    cold-brew.png\n    Cold brew\n    $288,750\n    1%\n    $241,770\n    2%\n    [244, 249, 438, 981, 1774, 2699, 2606, 2348, 1741, 896, 499, 244]\n  \n  \n    filter.png\n    Filter\n    $404,250\n    1%\n    $70,010\n    0%\n    [2067, 1809, 1836, 2123, 2252, 2631, 2562, 2367, 2164, 2195, 2070, 2744]\n  \n  \n    drip-machine.png\n    Drip machine\n    $2,632,000\n    9%\n    $1,374,450\n    9%\n    [2137, 1623, 1971, 2097, 2580, 2456, 2336, 2316, 2052, 1967, 1837, 2328]\n  \n  \n    aeropress.png\n    AeroPress\n    $2,601,500\n    9%\n    $1,293,780\n    9%\n    [6332, 5199, 6367, 7024, 7906, 8704, 8693, 7797, 6828, 6963, 6877, 9270]\n  \n  \n    pour-over.png\n    Pour over\n    $846,000\n    3%\n    $364,530\n    2%\n    [1562, 1291, 1511, 1687, 1940, 2177, 2141, 1856, 1715, 1806, 1601, 2165]\n  \n  \n    french-press.png\n    French press\n    $1,113,250\n    4%\n    $748,120\n    5%\n    [3507, 2880, 3346, 3792, 3905, 4095, 4184, 4428, 3279, 3420, 3297, 4819]\n  \n  \n    cezve.png\n    Cezve\n    $2,512,500\n    9%\n    $1,969,520\n    13%\n    [12171, 11469, 11788, 13630, 15391, 16532, 17090, 14433, 12985, 12935, 11598, 15895]\n  \n  \n    chemex.png\n    Chemex\n    $3,137,250\n    11%\n    $817,680\n    6%\n    [4938, 4167, 5235, 6000, 6358, 6768, 7112, 6249, 5605, 6076, 4980, 7220]\n  \n  \n    scale.png\n    Scale\n    $3,801,000\n    13%\n    $2,910,290\n    20%\n    [1542, 1566, 1681, 2028, 2425, 2549, 2569, 2232, 2036, 2089, 1693, 3180]\n  \n  \n    kettle.png\n    Kettle\n    $756,250\n    3%\n    $617,520\n    4%\n    [1139, 1023, 1087, 1131, 1414, 1478, 1456, 1304, 1140, 1233, 1193, 1529]\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    $8,406,000\n    29%\n    $3,636,440\n    25%\n    [686, 840, 618, 598, 2148, 533, 797, 996, 1002, 668, 858, 2577]\n  \n  \n    None\n    Total\n    $29,448,500\n    100%\n    $14,793,150\n    100%\n    None"
  },
  {
    "objectID": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#three-last-things",
    "href": "1-3-5-great-tables/z-answers-code-along/py-01-coffee-table.html#three-last-things",
    "title": "Code Along: Coffee Table",
    "section": "Three Last Things",
    "text": "Three Last Things\nAdd a column of bar plots using the monthly revenue column.\n\ngt_tbl_10 = (\n    gt_tbl_9\n    .fmt_nanoplot(\n        columns=\"monthly_sales\",\n        plot_type=\"bar\"\n    )\n)\n\ngt_tbl_10\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    grinder.png\n    Grinder\n    $904,500\n    3%\n    $567,960\n    4%\n    7650521494596613667748765686607594568751\n  \n  \n    moka-pot.png\n    Moka pot\n    $2,045,250\n    7%\n    $181,080\n    1%\n    6.87K04.73K4.74K4.79K5.51K6.16K6.62K6.87K6.03K5.30K4.88K4.65K6.28K\n  \n  \n    cold-brew.png\n    Cold brew\n    $288,750\n    1%\n    $241,770\n    2%\n    2.70K02442494389811.77K2.70K2.61K2.35K1.74K896499244\n  \n  \n    filter.png\n    Filter\n    $404,250\n    1%\n    $70,010\n    0%\n    2.74K02.07K1.81K1.84K2.12K2.25K2.63K2.56K2.37K2.16K2.19K2.07K2.74K\n  \n  \n    drip-machine.png\n    Drip machine\n    $2,632,000\n    9%\n    $1,374,450\n    9%\n    2.58K02.14K1.62K1.97K2.10K2.58K2.46K2.34K2.32K2.05K1.97K1.84K2.33K\n  \n  \n    aeropress.png\n    AeroPress\n    $2,601,500\n    9%\n    $1,293,780\n    9%\n    9.27K06.33K5.20K6.37K7.02K7.91K8.70K8.69K7.80K6.83K6.96K6.88K9.27K\n  \n  \n    pour-over.png\n    Pour over\n    $846,000\n    3%\n    $364,530\n    2%\n    2.18K01.56K1.29K1.51K1.69K1.94K2.18K2.14K1.86K1.72K1.81K1.60K2.16K\n  \n  \n    french-press.png\n    French press\n    $1,113,250\n    4%\n    $748,120\n    5%\n    4.82K03.51K2.88K3.35K3.79K3.90K4.10K4.18K4.43K3.28K3.42K3.30K4.82K\n  \n  \n    cezve.png\n    Cezve\n    $2,512,500\n    9%\n    $1,969,520\n    13%\n    17.1K012.2K11.5K11.8K13.6K15.4K16.5K17.1K14.4K13.0K12.9K11.6K15.9K\n  \n  \n    chemex.png\n    Chemex\n    $3,137,250\n    11%\n    $817,680\n    6%\n    7.22K04.94K4.17K5.24K6.00K6.36K6.77K7.11K6.25K5.60K6.08K4.98K7.22K\n  \n  \n    scale.png\n    Scale\n    $3,801,000\n    13%\n    $2,910,290\n    20%\n    3.18K01.54K1.57K1.68K2.03K2.42K2.55K2.57K2.23K2.04K2.09K1.69K3.18K\n  \n  \n    kettle.png\n    Kettle\n    $756,250\n    3%\n    $617,520\n    4%\n    1.53K01.14K1.02K1.09K1.13K1.41K1.48K1.46K1.30K1.14K1.23K1.19K1.53K\n  \n  \n    espresso-machine.png\n    Espresso Machine\n    $8,406,000\n    29%\n    $3,636,440\n    25%\n    2.58K06868406185982.15K5337979961.00K6688582.58K\n  \n  \n    None\n    Total\n    $29,448,500\n    100%\n    $14,793,150\n    100%\n    None\n  \n\n\n\n\n\n\n        \n\n\nAdd images to the icon column. The images are in the img directory.\n\ngt_tbl_11 = (\n    gt_tbl_10\n    .fmt_image(\n        columns=\"icon\",\n        path=\"../img/\"\n    )\n)\n\ngt_tbl_11\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    \n    Grinder\n    $904,500\n    3%\n    $567,960\n    4%\n    7650521494596613667748765686607594568751\n  \n  \n    \n    Moka pot\n    $2,045,250\n    7%\n    $181,080\n    1%\n    6.87K04.73K4.74K4.79K5.51K6.16K6.62K6.87K6.03K5.30K4.88K4.65K6.28K\n  \n  \n    \n    Cold brew\n    $288,750\n    1%\n    $241,770\n    2%\n    2.70K02442494389811.77K2.70K2.61K2.35K1.74K896499244\n  \n  \n    \n    Filter\n    $404,250\n    1%\n    $70,010\n    0%\n    2.74K02.07K1.81K1.84K2.12K2.25K2.63K2.56K2.37K2.16K2.19K2.07K2.74K\n  \n  \n    \n    Drip machine\n    $2,632,000\n    9%\n    $1,374,450\n    9%\n    2.58K02.14K1.62K1.97K2.10K2.58K2.46K2.34K2.32K2.05K1.97K1.84K2.33K\n  \n  \n    \n    AeroPress\n    $2,601,500\n    9%\n    $1,293,780\n    9%\n    9.27K06.33K5.20K6.37K7.02K7.91K8.70K8.69K7.80K6.83K6.96K6.88K9.27K\n  \n  \n    \n    Pour over\n    $846,000\n    3%\n    $364,530\n    2%\n    2.18K01.56K1.29K1.51K1.69K1.94K2.18K2.14K1.86K1.72K1.81K1.60K2.16K\n  \n  \n    \n    French press\n    $1,113,250\n    4%\n    $748,120\n    5%\n    4.82K03.51K2.88K3.35K3.79K3.90K4.10K4.18K4.43K3.28K3.42K3.30K4.82K\n  \n  \n    \n    Cezve\n    $2,512,500\n    9%\n    $1,969,520\n    13%\n    17.1K012.2K11.5K11.8K13.6K15.4K16.5K17.1K14.4K13.0K12.9K11.6K15.9K\n  \n  \n    \n    Chemex\n    $3,137,250\n    11%\n    $817,680\n    6%\n    7.22K04.94K4.17K5.24K6.00K6.36K6.77K7.11K6.25K5.60K6.08K4.98K7.22K\n  \n  \n    \n    Scale\n    $3,801,000\n    13%\n    $2,910,290\n    20%\n    3.18K01.54K1.57K1.68K2.03K2.42K2.55K2.57K2.23K2.04K2.09K1.69K3.18K\n  \n  \n    \n    Kettle\n    $756,250\n    3%\n    $617,520\n    4%\n    1.53K01.14K1.02K1.09K1.13K1.41K1.48K1.46K1.30K1.14K1.23K1.19K1.53K\n  \n  \n    \n    Espresso Machine\n    $8,406,000\n    29%\n    $3,636,440\n    25%\n    2.58K06868406185982.15K5337979961.00K6688582.58K\n  \n  \n    None\n    Total\n    $29,448,500\n    100%\n    $14,793,150\n    100%\n    None\n  \n\n\n\n\n\n\n        \n\n\nTurn the None cells into blank cells.\n\ngt_tbl_12 = (\n    gt_tbl_11\n    .sub_missing(missing_text=\"\")\n)\n\ngt_tbl_12\n\n\n\n\n\n\n  \n    Coffee Equipment Sales for 2023\n  \n\n  icon\n  product\n  \n    Revenue\n  \n  \n    Profit\n  \n  Monthly Sales\n\n\n  Amount\n  Percent\n  Amount\n  Percent\n\n\n\n  \n    \n    Grinder\n    $904,500\n    3%\n    $567,960\n    4%\n    7650521494596613667748765686607594568751\n  \n  \n    \n    Moka pot\n    $2,045,250\n    7%\n    $181,080\n    1%\n    6.87K04.73K4.74K4.79K5.51K6.16K6.62K6.87K6.03K5.30K4.88K4.65K6.28K\n  \n  \n    \n    Cold brew\n    $288,750\n    1%\n    $241,770\n    2%\n    2.70K02442494389811.77K2.70K2.61K2.35K1.74K896499244\n  \n  \n    \n    Filter\n    $404,250\n    1%\n    $70,010\n    0%\n    2.74K02.07K1.81K1.84K2.12K2.25K2.63K2.56K2.37K2.16K2.19K2.07K2.74K\n  \n  \n    \n    Drip machine\n    $2,632,000\n    9%\n    $1,374,450\n    9%\n    2.58K02.14K1.62K1.97K2.10K2.58K2.46K2.34K2.32K2.05K1.97K1.84K2.33K\n  \n  \n    \n    AeroPress\n    $2,601,500\n    9%\n    $1,293,780\n    9%\n    9.27K06.33K5.20K6.37K7.02K7.91K8.70K8.69K7.80K6.83K6.96K6.88K9.27K\n  \n  \n    \n    Pour over\n    $846,000\n    3%\n    $364,530\n    2%\n    2.18K01.56K1.29K1.51K1.69K1.94K2.18K2.14K1.86K1.72K1.81K1.60K2.16K\n  \n  \n    \n    French press\n    $1,113,250\n    4%\n    $748,120\n    5%\n    4.82K03.51K2.88K3.35K3.79K3.90K4.10K4.18K4.43K3.28K3.42K3.30K4.82K\n  \n  \n    \n    Cezve\n    $2,512,500\n    9%\n    $1,969,520\n    13%\n    17.1K012.2K11.5K11.8K13.6K15.4K16.5K17.1K14.4K13.0K12.9K11.6K15.9K\n  \n  \n    \n    Chemex\n    $3,137,250\n    11%\n    $817,680\n    6%\n    7.22K04.94K4.17K5.24K6.00K6.36K6.77K7.11K6.25K5.60K6.08K4.98K7.22K\n  \n  \n    \n    Scale\n    $3,801,000\n    13%\n    $2,910,290\n    20%\n    3.18K01.54K1.57K1.68K2.03K2.42K2.55K2.57K2.23K2.04K2.09K1.69K3.18K\n  \n  \n    \n    Kettle\n    $756,250\n    3%\n    $617,520\n    4%\n    1.53K01.14K1.02K1.09K1.13K1.41K1.48K1.46K1.30K1.14K1.23K1.19K1.53K\n  \n  \n    \n    Espresso Machine\n    $8,406,000\n    29%\n    $3,636,440\n    25%\n    2.58K06868406185982.15K5337979961.00K6688582.58K\n  \n  \n    \n    Total\n    $29,448,500\n    100%\n    $14,793,150\n    100%"
  },
  {
    "objectID": "1-1-hello/index.html",
    "href": "1-1-hello/index.html",
    "title": "Hello, Quarto!",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Quarto",
      "Hello"
    ]
  },
  {
    "objectID": "1-1-hello/index.html#slides",
    "href": "1-1-hello/index.html#slides",
    "title": "Hello, Quarto!",
    "section": "",
    "text": "View slides in full screen",
    "crumbs": [
      "Quarto",
      "Hello"
    ]
  },
  {
    "objectID": "1-1-hello/index.html#exercises",
    "href": "1-1-hello/index.html#exercises",
    "title": "Hello, Quarto!",
    "section": "Exercises",
    "text": "Exercises\nSee https://github.com/tracykteal/quarto-GT-pyopensci-exercises.",
    "crumbs": [
      "Quarto",
      "Hello"
    ]
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "Setup instructions",
    "section": "",
    "text": "For this workshop we’ll be using GitHub Codespaces.\nInstructions below for using Codespaces or if you’re working locally.",
    "crumbs": [
      "Setup"
    ]
  },
  {
    "objectID": "setup.html#on-codespaces",
    "href": "setup.html#on-codespaces",
    "title": "Setup instructions",
    "section": "On Codespaces",
    "text": "On Codespaces\n1. Quarto environment: Load the Quarto Codespaces container\n\nGo to mcanouil’s Quarto Codespaces\nClick ‘Use this template’ and then ‘Open in a codespace’\nWait for the codespace to load!\n\n2. Tools: Install some VS Code extensions.\n\nThe Quarto extension and Quarto CLI are already installed. You’re all set there!\nInstall the Jupyter Extension: https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter\n\n3. Environment: Set up the environment\n\nGo to View -&gt; Command Palette\nSearch for and select Python: Create Environment... and choose Venv, then choose the (latest) Python version.\nInstall jupyter. At the terminal type python3 -m pip install jupyter\n\n4. Exercises: Get the exercises from https://github.com/tracykteal/quarto-GT-pyopensci-exercises.\n\nGo to the Terminal in your codespace\nType git clone https://github.com/tracykteal/quarto-GT-pyopensci-exercises.git\nYou’ll see the directory quarto-GT-pyopensci-exercises appear in your file navigator.\nGo into that directory.\n\n5. Packages: Install some packages.\nOpen setup.qmd and run the installation code block to install:\n\npolars\npandas\ngreat_tables\nselenium\nplotnine\npalmerpenguins",
    "crumbs": [
      "Setup"
    ]
  },
  {
    "objectID": "setup.html#locally",
    "href": "setup.html#locally",
    "title": "Setup instructions",
    "section": "Locally",
    "text": "Locally\n1. Install the Quarto extension.\nWithin VS Code install:\n\nthe Quarto extension\nthe Quarto CLI (once you install the extension, you’ll be prompted to download and install the CLI)\n\n2. Exercises: Get the exercises from https://github.com/tracykteal/quarto-GT-pyopensci-exercises.\n\nClone the exercises github repository how you usually do your git cloning.\nGo into that directory from within VS Code.\n\n3. Packages: Install some packages.\nOpen setup.qmd and run the installation code block to install:\n\npolars\npandas\ngreat_tables\nselenium\nplotnine\n\n\n\n\n\n\n\nNote\n\n\n\nThe packages you need are as follows:\n\n\nrequirements.txt\n\ngreat_tables==0.9.0\nipykernel==6.29.5\njupyter==1.0.0\npalmerpenguins==0.1.4\npandas==2.2.2\nplotnine==0.13.6\n\nIf you have a different preferred way of managing your environment, you’re welcomed to do so. Just make sure you have these packages installed in order to be able to follow along with the examples.",
    "crumbs": [
      "Setup"
    ]
  }
]